<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Icarus</title>
  
  
  <link href="http://ppoffice.github.io/hexo-theme-icarus/atom.xml" rel="self"/>
  
  <link href="http://ppoffice.github.io/hexo-theme-icarus/"/>
  <updated>2019-07-08T14:41:00.000Z</updated>
  <id>http://ppoffice.github.io/hexo-theme-icarus/</id>
  
  <author>
    <name>PPOffice</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux学习记录（五）：Manjaro + i3安装和配置流程</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/linux%E5%AD%A6%E4%B9%A0/linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9Amanjaro-i3%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%E6%B5%81%E7%A8%8B/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/linux%E5%AD%A6%E4%B9%A0/linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9Amanjaro-i3%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%E6%B5%81%E7%A8%8B/</id>
    <published>2019-07-08T14:41:00.000Z</published>
    <updated>2019-07-08T14:41:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="U盘烧录"><a href="#U盘烧录" class="headerlink" title="U盘烧录"></a>U盘烧录</h2><ul><li>使用sufus烧录镜像</li><li>选择DD模式</li></ul><h2 id="boot设置"><a href="#boot设置" class="headerlink" title="boot设置"></a>boot设置</h2><ul><li>使用EIFI模式选择U盘启动</li><li>将secure boot模式为常规模式None</li></ul><h2 id="安装Manjaro到硬盘"><a href="#安装Manjaro到硬盘" class="headerlink" title="安装Manjaro到硬盘"></a>安装Manjaro到硬盘</h2><ul><li>分区</li><li>安装</li></ul><h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><h2 id="常规设置"><a href="#常规设置" class="headerlink" title="常规设置"></a>常规设置</h2><p>将软件源切换到国内修改配置文件<code>/etc/pacman.conf</code>添加</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Never</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></tbody></table></figure><p>将源全部改到国内</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-mirrors -c China</span><br></pre></td></tr></tbody></table></figure><p>软件更新<code>sudo pacman -Syyu</code></p><p>simplescreenrecorderscreenkey</p><p>选择编辑器vim</p><p>高亮pacman<code>/etc/pacman.conf</code>中#36中的color</p><p>改shell，使用fishchsh -s /usr/bin/fishcurl -L https://get.oh-my.fish | fishdrau</p><p>使用alias自定义快捷键eg:alias c clearfuncsave calias s screenfetchfuncsave s</p><h2 id="提高效率使用i3"><a href="#提高效率使用i3" class="headerlink" title="提高效率使用i3"></a>提高效率使用i3</h2><p>sudo pacman -S i3vim ~/.XresouresXft.dpi: 200screenkey</p><p>修改终端alacrittydmenuexec_always alacrittysize: 18</p><p>改键位sudo pacman -S xorgxmodmap -pke &gt; ~/.xmodmapxev</p><p>xmodmap ~/.xmodmap生效</p><p>vim ~/.config/i3/config</p><p>new_window 1pixel</p><p>sudo pacman -S lxappearanceazut、papirus、brzze</p><p>壁纸管理器sudo pacman -S fehvariety</p><p>alacritty》》opacity</p><p>compton</p><p>安装输入法sudo pacman -S fcitx fcitx-im fcitx-configtoolsudo pacman -S fcitx-sogoupinyin</p><p>vim ~/.xprofile</p><p>export GTK IM MODULE=fcitxexport QT IM MODULE=fcitxexport XMODIFIERS=”@im=fcitx”</p><p>安装Chrome浏览器sudo pacman -S chromium</p><p>剪辑视频sudo pacman -S kdenlive</p><p>修图gimp</p><p>邮件thunderbird</p><p>office安装libreoffice</p><p>vlc</p><p>虚拟机virtualbox</p><p>deepin.com.qq.im</p><p>electronic-wechat</p><p>transmission</p><p>abittorrent</p><p>文件管理文件sudo pacman -S range</p><p>steam</p><p>sudo pacman -S polybar</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;h2 id=&quot;U盘烧录&quot;&gt;&lt;a href=&quot;#U盘烧录&quot; class=&quot;headerlink&quot; title=&quot;U盘烧录&quot;&gt;&lt;/a&gt;U盘烧录&lt;/h</summary>
      
    
    
    
    <category term="linux学习" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/linux%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="linux" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/linux/"/>
    
    <category term="Manjaro" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/Manjaro/"/>
    
    <category term="i3wm" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/i3wm/"/>
    
    <category term="安装配置" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习记录（四）：Linux中各种安装软件tar.gz,rpm,deb</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/linux%E5%AD%A6%E4%B9%A0/linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9Alinux%E4%B8%AD%E5%90%84%E7%A7%8D%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6tar-gz-rpm-deb/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/linux%E5%AD%A6%E4%B9%A0/linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9Alinux%E4%B8%AD%E5%90%84%E7%A7%8D%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6tar-gz-rpm-deb/</id>
    <published>2019-06-16T23:11:00.000Z</published>
    <updated>2019-06-16T23:11:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要介绍了linux 下安装软件tar.gz, rpm,deb的方法 ，具有一定的参考价值，感兴趣的小伙伴们可以参考一下。</p><p>在Linux系统中，软件安装程序比较纷繁复杂，不过最常见的有两种：</p><p>1）一种是软件的源代码，您需要自己动手编译它。这种软件安装包通常是用gzip压缩过的tar包（后缀为.tar.gz）。  </p><p>2）另一种是软件的可执行程序，你只要安装它就可以了。这种软件安装包通常被是一个RPM包（Redhat Linux Packet Manager，就是Redhat的包管理器），后缀是.rpm。</p><p>当然，也有用rpm格式打包的源代码，用gzip压缩过的可执行程序包。只要您理解了以下的思路，这两种形式的安装包也不在话下了。</p><p>下面，我们就分成两个部分来说明软件安装思路：</p><p><strong>第一部分：搞定.tar.gz</strong></p><p>1.首先，使用tar -xzvf来解开这个包，如：  </p><p><a href="#">?</a></p><p>1</p><p><code>#tar -xzvf apache_1_3_6_tar.gz</code></p><p>这样就会在当前目录中创建了一个新目录(目录名与.tat.gz包的文件名类似），用来存放解压了的内容。如本例中就是apache_1.3.6</p><p>2.进入这个目录，再用ls命令查看一下所包含的文件，如：  </p><p><a href="#">?</a></p><p>1</p><p>2</p><p><code>#拟定cd apache_1.3.6</code></p><p><code>#ls</code></p><p>你观察一下这个目录中包含了以下哪一个文件：configure、Makefile还是Imake。  </p><p>1）如果是configure文件,就执行：  </p><p><a href="#">?</a></p><p>1</p><p>2</p><p>3</p><p><code>#./configure</code></p><p><code>#make</code></p><p><code>#make install</code></p><p>2）如果是Makefile文件,就执行：  </p><p><a href="#">?</a></p><p>1</p><p>2</p><p><code>#make</code></p><p><code>#make install</code></p><p>3）如果是Imake文件,就执行：  </p><p><a href="#">?</a></p><p>1</p><p>2</p><p>3</p><p><code>#xmkmf</code></p><p><code>#make</code></p><p><code>#make install</code></p><p>3.如果没有出现什么错误提示的话，就搞定了。至于软件安装到什么地方，通常会在安装时出现。否则就只能查阅一下README，或者问问我，:-)</p><p>如果遇到错误提示，也别急，通常是十分简单的问题：  </p><p><strong>1）没有安装C或C++编译器；</strong>  </p><p>确诊方法：执行命令gcc（C++则为g++），提示找不到这个命令。  </p><p>解决方法：将Linux安装光盘mount上来，然后进入RPMS目录，执行命令：  </p><p>#rpm -ivh gcc* （哈哈，我们用到了第二种安装方式）  </p><p><strong>2）没有安装make工具；</strong>  </p><p>确诊方法：执行命令make，提示找不到这个命令。  </p><p>解决方法：将Linux安装光盘mount上来，然后进入RPMS目录，执行命令：  </p><p><a href="#">?</a></p><p>1</p><p><code>#rpm -ivh make*</code></p><p>**3）没有安装autoconf工具；<br>**</p><p>确诊方法：执行命令make，提示找不到这个命令。  </p><p>解决方法：将Linux安装光盘mount上来，然后进入RPMS目录，执行命令：  </p><p><a href="#">?</a></p><p>1</p><p><code>#rpm -ivh autoconf*</code></p><p><strong>4）缺少某些链接库；</strong>  </p><p>确诊方法：在make时，提示需要某些文件。  </p><p>解决方法：安装包含这个文件的包，这就需要积累了。</p><p><strong>第二部分：搞定.rpm</strong></p><p>RPM是Red Hat公司随Redhat Linux推出了一个软件包管理器，通过它能够更加轻松容易地实现软件的安装。</p><p>1.安装软件：执行rpm -ivh rpm包名，如：  </p><p><a href="#">?</a></p><p>1</p><p><code>#rpm -ivh apache-1.3.6.i386.rpm</code></p><p>2.升级软件：执行rpm -Uvh rpm包名。  </p><p>3.反安装：执行rpm -e rpm包名。  </p><p>4.查询软件包的详细信息：执行rpm -qpi rpm包名  </p><p>5.查询某个文件是属于那个rpm包的：执行rpm -qf rpm包名  </p><p>6.查该软件包会向系统里面写入哪些文件：执行 rpm -qpl rpm包名</p><p><strong>第三部分：搞定.deb</strong>  </p><p>deb 是 ubuntu 、debian 的格式。  </p><p>rpm 是 redhat 、fedora 、suse 的格式。</p><p>他们不通用（虽然可以转换一下）。</p><p>deb是debian发行版的软件包  </p><p>ubuntu是基于debian 发行的 所有可以用</p><p>.deb是solaris系统下的安装包后缀名。安装方法如下</p><p>cd 到安装包的目录</p><p>dpkg -i 安装包名字</p><p>如果你使用的是red hat linux，然后运行以下命令安装</p><p>cd 到安装包的目录  </p><p>rpm -ivh 安装包名字  </p><p>以上就是本文的全部内容，希望对大家的学习有所帮助，也希望大家多多支持脚本之家。</p><h4 id="您可能感兴趣的文章"><a href="#您可能感兴趣的文章" class="headerlink" title="您可能感兴趣的文章:"></a>您可能感兴趣的文章:</h4><ul><li>  <a href="/article/108495.htm" title="CentOS 安装软件出现错误：/lib/ld-linux.so.2: bad ELF interpreter 解决">CentOS 安装软件出现错误：/lib/ld-linux.so.2: bad ELF interpreter 解决</a></li><li>  <a href="/article/107877.htm" title="linux下查看yum/rpm/dpkg某软件是否已安装的方法">linux下查看yum/rpm/dpkg某软件是否已安装的方法</a></li><li>  <a href="/article/97053.htm" title="Linux上安装和卸载rpm软件包的方法">Linux上安装和卸载rpm软件包的方法</a></li><li>  <a href="/article/81780.htm" title="Linux中Python 环境软件包安装步骤">Linux中Python 环境软件包安装步骤</a></li><li>  <a href="/article/63134.htm" title="在Debian系的Linux中检查软件包是否被安装的方法">在Debian系的Linux中检查软件包是否被安装的方法</a></li><li>  <a href="/article/47457.htm" title="Linux中服务器软件为什么需要编译安装">Linux中服务器软件为什么需要编译安装</a></li><li>  <a href="/article/28544.htm" title="服务器安全狗Linux版软件安装使用说明">服务器安全狗Linux版软件安装使用说明</a></li><li>  <a href="/article/12938.htm" title="Linux rpm tar 操作系统下软件的安装与卸载方法">Linux rpm tar 操作系统下软件的安装与卸载方法</a></li><li>  <a href="/article/3449.htm" title="LINUX通用的软件安装方法">LINUX通用的软件安装方法</a></li><li>  <a href="/article/159155.htm" title="详解linux安装软件的几种方法">详解linux安装软件的几种方法</a></li></ul><p><a target="_blank" rel="noopener" href="http://www.xiaziyuan8.com/v/linux/"><img src="//files.jb51.net/image/linux_tb.gif?0404"></a></p><p>原文链接：http://blog.chinaunix.net/uid-23781137-id-3455554.html</p><p><img src="//files.jb51.net/skin/2018/images/jb51ewm.png"></p><p>微信公众号搜索 “ 脚本之家 ” ，选择关注</p><p>程序猿的那些事、送书等活动等着你</p><ul><li>  <a target="_blank" rel="noopener" href="http://common.jb51.net/tag/linux/1.htm" title="搜索关于linux的文章">linux</a></li><li>  <a target="_blank" rel="noopener" href="http://common.jb51.net/tag/rpm/1.htm" title="搜索关于rpm的文章">rpm</a></li><li>  <a target="_blank" rel="noopener" href="http://common.jb51.net/tag/tar%2Egz/1.htm" title="搜索关于tar.gz的文章">tar.gz</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本篇文章主要介绍了linux 下安装软件tar.gz, rpm,deb的方法 ，具有一定的参考价值，感兴趣的小伙伴们可以参考一下。&lt;/p&gt;
&lt;p&gt;在Linux系统中，软件安装程序比较纷繁复杂，不过最常见的有两种：&lt;/p&gt;
&lt;p&gt;1）一种是软件的源代码，您需要自己动手编译它。</summary>
      
    
    
    
    <category term="linux学习" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/linux%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="软件安装" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
    <category term="安装包" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E5%AE%89%E8%A3%85%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>python学习记录（一）：给你的centos安装最新的Python版本</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/python%E5%AD%A6%E4%B9%A0/python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E7%BB%99%E4%BD%A0%E7%9A%84centos%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%9A%84python%E7%89%88%E6%9C%AC/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/python%E5%AD%A6%E4%B9%A0/python%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E7%BB%99%E4%BD%A0%E7%9A%84centos%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%9A%84python%E7%89%88%E6%9C%AC/</id>
    <published>2019-06-03T17:35:00.000Z</published>
    <updated>2019-06-03T17:35:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载最新的python"><a href="#下载最新的python" class="headerlink" title="下载最新的python"></a>下载最新的python</h1><p>1、可利用linux自带下载工具wget下载，如下所示：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget</span><br></pre></td></tr></tbody></table></figure><p>我安装的是最小<code>centos</code>系统，所以使用编译命令前，必须安装<code>wget</code>服务，读者如果安装的是界面centos系统，或者使用过编译工具则可跳过安装wget，直接进行下边的编译步骤 ）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz</span><br></pre></td></tr></tbody></table></figure><p>2、下载完成后到下载目录下，解压</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf Python-3.7.3.tgz</span><br></pre></td></tr></tbody></table></figure><p>3、进入解压缩后的文件夹</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd Python-3.7.3　　</span><br></pre></td></tr></tbody></table></figure><p><img src="http://cdn.pidaye.top/1240839-20180206154135810-550114657%20473%C3%97169.png" alt="1240839-20180206154135810-550114657 473×169"></p><h1 id="编译python安装包"><a href="#编译python安装包" class="headerlink" title="编译python安装包"></a>编译python安装包</h1><p>1、在编译前先在<code>/usr/local</code>建一个文件夹<code>python3</code>（作为python的安装路径，以免覆盖老的版本）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/local/python3</span><br></pre></td></tr></tbody></table></figure><p>（此处新建文件夹用<code>mkdir</code>，如果是新建文件则用<code>touch</code>）</p><p>2、开始编译安装（开始前先安装gcc <code>yum install gcc</code>我安装的是最小centos系统，所以使用编译命令前，必须安装编译套件gcc，读者如果安装的是界面centos系统，或者使用过编译工具则可跳过安装gcc，直接进行下边的编译步骤）依次执行下面3条指令完成编译和安装</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/python3</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></tbody></table></figure><h1 id="替代老版本"><a href="#替代老版本" class="headerlink" title="替代老版本"></a>替代老版本</h1><p>1、此时已经安装好新版本，但并没有覆盖老版本，再将原来<code>/usr/bin/python</code>链接改为别的名字（我保留了两个版本的，一个python，一个python3）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/bin/python /usr/bin/python_old2</span><br></pre></td></tr></tbody></table></figure><p>2、再建立新版本python的链接</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/bin/python3 &nbsp;/usr/bin/python</span><br></pre></td></tr></tbody></table></figure><p>3、这个时候输入</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -V</span><br></pre></td></tr></tbody></table></figure><p>大功告成，enjoy it！</p><p><em>PS：如果不建立新安装路径python3，而是直接默认安装，则安装后的新python应该会覆盖linux下自带的老版本，也有可能不覆盖，具体看安装过程了，这个大家可以自己试验下，当然如果还想保留原来的版本，那么这种方法最好不过了。</em></p><h1 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h1><h2 id="gcc编译报错"><a href="#gcc编译报错" class="headerlink" title="gcc编译报错"></a>gcc编译报错</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cannot find -lc</span><br></pre></td></tr></tbody></table></figure><p>这问题一般是由于ld在进行库连接时找不到相应的库文件导致的但是这个问题主要是少安装了两个软件包： <code>glibc-static</code>    <code>glibc-utils</code> 使用指令安装确实的依赖即可</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install glibc* -y</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;下载最新的python&quot;&gt;&lt;a href=&quot;#下载最新的python&quot; class=&quot;headerlink&quot; title=&quot;下载最新的python&quot;&gt;&lt;/a&gt;下载最新的python&lt;/h1&gt;&lt;p&gt;1、可利用linux自带下载工具wget下载，如下所示：&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="python学习" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/python%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="centos" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/centos/"/>
    
    <category term="python" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习记录（三）：Linux定时计划和开机启动项</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/linux%E5%AD%A6%E4%B9%A0/linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9Alinux%E5%AE%9A%E6%97%B6%E8%AE%A1%E5%88%92%E5%92%8C%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E9%A1%B9/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/linux%E5%AD%A6%E4%B9%A0/linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9Alinux%E5%AE%9A%E6%97%B6%E8%AE%A1%E5%88%92%E5%92%8C%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E9%A1%B9/</id>
    <published>2019-05-20T09:34:00.000Z</published>
    <updated>2019-05-20T09:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要介绍linux中的定时计划指令用法，crontab定时计划就看这篇文章。</p><span id="more"></span><h1 id="crontab定时计划"><a href="#crontab定时计划" class="headerlink" title="crontab定时计划"></a>crontab定时计划</h1><blockquote><p>定时计划我们采用<code>crontab</code>指令即可，下面给大家讲解下用法</p></blockquote><p><em>crontab [-u username] [-l|-e|-r]</em></p><p>参数：</p><ul><li><p><code>-u</code>: 只有root才能进行这个任务，也即帮其他用户新建/删除crontab工作调度;</p></li><li><p><code>-e</code>: 编辑crontab 的工作内容;</p></li><li><p><code>-l</code>: 查阅crontab的工作内容;</p></li><li><p><code>-r</code>: 删除所有的crontab的工作内容，若仅要删除一项，请用-e去编辑。</p></li></ul><p>范例一：用<code>dmtsai</code>的身份在每天的<code>12：00</code>发信给自己</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></tbody></table></figure><p>建立任务</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 12 * * * mail dmtsai -s "at 12:00" &lt; /home/dmtsai/.bashrc</span><br></pre></td></tr></tbody></table></figure><p>代表意义|分钟|小时|日期|月份|周|命令-|-|-|-|-|-|-数字范围|0~59|0~23|1~31|1~12|0~7|就命令啊</p><p>周的数字为0或7时，都代表“星期天”的意思。另外，还有一些辅助的字符，大概有下面这些：</p><p>特殊字符|代表意义-|-<code>*(星号)</code>|代表任何时刻都接受的意思。举例来说，范例一内那个日、月、周都是<code>*</code>，就代表着不论何月、何日的礼拜几的12：00都执行后续命令的意思。<code>,(逗号)</code>|代表分隔时段的意思。举例来说，如果要执行的工作是3：00与6：00时，就会是：<code>0 3,6 * * * command</code>时间还是有五列，不过第二列是 3,6 ，代表3与6都适用<code>-(减号)</code>|代表一段时间范围内，举例来说，8点到12点之间的每小时的20分都进行一项工作：<code>20 8-12 * * * command</code>仔细看到第二列变成<code>8-12</code>代表8,9,10,11,12 都适用的意思<code>/n(斜线)</code>|那个n代表数字，即是每隔n单位间隔的意思，例如每五分钟进行一次，则：<code>*/5 * * * * command</code>用<code>*</code>与<code>/5</code>来搭配，也可以写成0-59/5，意思相同为当前用户创建cron服务</p><h2 id="1-键入-crontab-e-编辑crontab服务文件"><a href="#1-键入-crontab-e-编辑crontab服务文件" class="headerlink" title="1.键入 crontab&nbsp; -e 编辑crontab服务文件"></a>1.键入 crontab&nbsp; -e 编辑crontab服务文件</h2><p>例如文件内容如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/2 * * * * /bin/sh /home/admin/jiaoben/buy/deleteFile.sh</span><br></pre></td></tr></tbody></table></figure><p>保存文件并并退出</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/2 * * * * /bin/sh /home/admin/jiaoben/buy/deleteFile.sh</span><br></pre></td></tr></tbody></table></figure><p>&nbsp;<code>*/2 * * * * </code>通过这段字段可以设定什么时候执行脚本<code>/bin/sh /home/admin/jiaoben/buy/deleteFile.sh</code> 这一字段可以设定你要执行的脚本，这里要注意一下<code>bin/sh</code> 是指运行&nbsp; 脚本的命令&nbsp; 后面一段时指脚本存放的路径</p><h2 id="2-查看该用户下的crontab服务是否创建成功"><a href="#2-查看该用户下的crontab服务是否创建成功" class="headerlink" title="2.查看该用户下的crontab服务是否创建成功"></a>2.查看该用户下的crontab服务是否创建成功</h2><p> 用 <code>crontab&nbsp; -l</code> 命令&nbsp;&nbsp;</p><h2 id="3-启动crontab服务"><a href="#3-启动crontab服务" class="headerlink" title="3.启动crontab服务"></a>3.启动crontab服务</h2><p>一般启动服务用&nbsp; <code>/sbin/service crond start</code> 若是根用户的<code>cron</code>服务可以用 <code>sudo service crond start</code>， 这里还是要注意下不同版本<strong>linux</strong>系统启动的服务的命令也不同 ，像我的虚拟机里只需用 <code>sudo service cron restart</code> 即可，若是在根用下直接键入<code>service cron start</code>就能启动服务</p><h2 id="4-查看服务是否已经运行"><a href="#4-查看服务是否已经运行" class="headerlink" title="4.查看服务是否已经运行"></a>4.查看服务是否已经运行</h2><p>用 <code>ps -ax | grep cron</code>&nbsp;</p><h2 id="5-开启-关闭定时任务"><a href="#5-开启-关闭定时任务" class="headerlink" title="5.开启/关闭定时任务"></a>5.开启/关闭定时任务</h2><p>fileclear.sh</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">tamcdir=${HOME}/ora/user_projects/domains/tamc</span><br><span class="line">cd ${tamcdir}</span><br><span class="line">echo rm -f `ls heapdump*.phd`</span><br><span class="line">rm -f heapdump*.phd</span><br><span class="line">echo rm -f `ls javacore*.txt`</span><br><span class="line">rm -f javacore*.txt</span><br><span class="line">echo rm -f `ls Snap*.trc`</span><br><span class="line">rm -f Snap*.trc</span><br><span class="line">cd bin</span><br><span class="line">echo cp /dev/null nuhup.out</span><br><span class="line">cp /dev/null nuhup.out</span><br><span class="line">cd ${tamcdir}/pxbak</span><br><span class="line">echo rm -rf `ls 20*`</span><br><span class="line">rm -rf 20*</span><br><span class="line">cd ${tamcdir}/webapps/tamcx/fileLoad</span><br><span class="line">echo rm -f `find /weblogic/ora/user_projects/domains/tamc/webapps/tamcx/fileLoad/ -mtime +1`</span><br><span class="line">find /weblogic/ora/user_projects/domains/tamc/webapps/tamcx/fileLoad/ -mtime +1 -exec rm -f {} \;</span><br></pre></td></tr></tbody></table></figure><p>task.crontab</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#web服务端日志、临时文件清理</span><br><span class="line">10 1 * * * ksh $HOME/tools/clearweblogic.sh &gt;&gt;/weblogic/ora/user_projects/domains/tamc/webapps/tamcx/log/crontab.log 2&gt;&gt;/weblogic/ora/user_projects/domains/tamc/webapps/tamcx/log/crontab.log</span><br></pre></td></tr></tbody></table></figure><p><code>task.null.crontab</code>是一个没有内容的空文件</p><p>开启定时任务&nbsp;</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab /weblogic/tools/task.crontab</span><br></pre></td></tr></tbody></table></figure><p>停止定时任务</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab /weblogic/tools/task.null.crontab</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本篇文章主要介绍linux中的定时计划指令用法，crontab定时计划就看这篇文章。&lt;/p&gt;</summary>
    
    
    
    <category term="linux学习" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/linux%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="linux" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/linux/"/>
    
    <category term="定时计划" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E5%AE%9A%E6%97%B6%E8%AE%A1%E5%88%92/"/>
    
    <category term="开机启动" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>ProXmoX VE搭建家庭多媒体服务器（二）：Frp内网穿透实现外网访问</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/%E4%B8%AA%E4%BA%BA%E5%85%B4%E8%B6%A3/proxmox-ve%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9Afrp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%AE%9E%E7%8E%B0%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/%E4%B8%AA%E4%BA%BA%E5%85%B4%E8%B6%A3/proxmox-ve%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9Afrp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%AE%9E%E7%8E%B0%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/</id>
    <published>2019-05-17T14:30:00.000Z</published>
    <updated>2019-05-17T14:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、为什么要内网穿透"><a href="#一、为什么要内网穿透" class="headerlink" title="一、为什么要内网穿透"></a>一、为什么要内网穿透</h1><p>当然是为了方便管理啦，最好是只要在有公网的地方就可以访问家里的服务器！</p><p>其实之前用过<code>ZeroTier one</code>觉得已经很强大了，基本满足了日常应用场景，优势显而易见：</p><ul><li>简单，搭建成本低，一条指令就可以搭建起来；</li><li>全平台支持，什么<code>Linux</code>、<code>Android</code>、<code>Windows</code>、<code>MAC OS</code>等等都能很好的支持；</li><li>稳定性可观，<code>UDP</code>打洞成功的话基本能实现P2P连接，速度仅由双方带宽决定，很不错；</li><li>操作简单，管理界面友好，<code>zerotier central</code>接管所有用户；</li></ul><p>当然缺陷也是有的，不然我也不会放弃ta是吧：</p><ul><li>UDP打洞不成功的话就基本不可用了，其实<code>zerotier</code>也是有代理的（打洞失败就启用），只是在国外而已，慢，你懂的；</li><li>官方在1.10版本之后其实推出了自建代理，称之为<code>moon</code>，但是搭建起来复杂不说，成功率不高，摔；（可能是我愚笨，如果有高人成功了可以指点下）</li><li>很多情况下无法打洞成功，非同城网络、多级路由、复杂网络、移动热点貌似这些都可能会导致无法连通。</li></ul><p>总之公司网络和我的移动手机热点都不行，果断放弃。</p><p>后来又考察了市面上简单的内网穿透方案，<code>花生壳</code>、<code>蒲公英</code>，这些商业公司做的限制太多，被限制了就很蛋疼了，不爽，免费的东西也要吃了不拉肚子啊，果断找自己搭建的，即使麻烦点，用着爽才是硬道理，生命在于折腾。</p><p>比较火的几个方案<code>Ngrok</code>、<code>Natapp</code>、<code>Lanproxy</code>、<code>Frp</code>，最终选择了<code>Frp</code>，觉得最适合也是最好用，还开源，这里都给大家简单介绍下：</p><h2 id="Ngrok"><a href="#Ngrok" class="headerlink" title="Ngrok"></a>Ngrok</h2><ul><li>  项目主页：<a target="_blank" rel="noopener" href="https://ngrok.com/">https://ngrok.com/</a></li><li>  项目介绍： 一个通过任何<code>NAT</code>或防火墙为您的本地主机服务器提供即时访问、安全的URL的命令。类似花生壳，分为服务端和客户端，也可以自己搭建服务端。</li><li>  使用教程：<a target="_blank" rel="noopener" href="https://yangqiang.im/?p=750">点击跳转</a></li></ul><h2 id="Ssh"><a href="#Ssh" class="headerlink" title="Ssh"></a>Ssh</h2><p><em>配合autossh工具使用，因为autossh会容错</em></p><ul><li>  项目主页：<a target="_blank" rel="noopener" href="http://www.harding.motd.ca/autossh/">http://www.harding.motd.ca/autossh/</a></li><li>  项目介绍：自动重新启动<code>SSH</code>会话和隧道。autossh是一个程序，用于启动ssh的副本并进行监控，在死亡或停止传输流量时根据需要重新启动它。 这个想法来自<code>rstunnel（Reliable SSH Tunnel）</code>，但是在C中实现。作者的观点是，它不像匆匆忙忙的工作那么容易。使用端口转发环路或远程回显服务进行连接监视。在遇到连接拒绝等快速故障时，关闭连接尝试的速度。在OpenBSD，Linux，Solaris，Mac OS X，Cygwin和AIX上编译和测试; 应该在其他BSD上工作。免费软件。</li><li>  使用教程：<a target="_blank" rel="noopener" href="http://www.yangqiang.im/?p=698">点击跳转</a></li></ul><h2 id="Natapp"><a href="#Natapp" class="headerlink" title="Natapp"></a>Natapp</h2><ul><li>  项目主页：<a target="_blank" rel="noopener" href="https://natapp.cn/">https://natapp.cn/</a></li><li>  项目介绍：基于ngrok的国内收费内网穿透工具，类似花生壳，有免费版本，比花生壳好。免费版本：提供http,https,tcp全隧道穿透，随机域名/TCP端口，不定时强制更换域名/端口，自定义本地端口</li></ul><h2 id="Frp"><a href="#Frp" class="headerlink" title="Frp"></a>Frp</h2><ul><li>  项目主页：<a target="_blank" rel="noopener" href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></li><li>  项目介绍：frp 是一个可用于内网穿透的高性能的反向代理应用，支持 <code>tcp</code>, <code>udp</code>, <code>http</code>, <code>https</code> 协议。利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。</li></ul><h2 id="Lanproxy"><a href="#Lanproxy" class="headerlink" title="Lanproxy"></a>Lanproxy</h2><ul><li>  项目主页：<a target="_blank" rel="noopener" href="https://github.com/ffay/lanproxy">https://github.com/ffay/lanproxy</a></li><li>  项目介绍：lanproxy是一个将局域网个人电脑、服务器代理到公网的内网穿透工具，目前仅支持tcp流量转发，可支持任何tcp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面…）。目前市面上提供类似服务的有花生壳、TeamView、GoToMyCloud等等，但要使用第三方的公网服务器就必须为第三方付费，并且这些服务都有各种各样的限制，此外，由于数据包会流经第三方，因此对数据安全也是一大隐患。</li></ul><h2 id="Spike"><a href="#Spike" class="headerlink" title="Spike"></a>Spike</h2><ul><li>  项目主页：<a target="_blank" rel="noopener" href="https://github.com/slince/spike">https://github.com/slince/spike</a></li><li>  项目介绍：Spike是一个可以用来将你的内网服务暴露在公网的快速的反向代理，基于<code>ReactPHP</code>，采用IO多路复用模型。采用Php实现。</li></ul><h2 id="花生壳"><a href="#花生壳" class="headerlink" title="花生壳"></a>花生壳</h2><ul><li>  项目主页：<a target="_blank" rel="noopener" href="https://hsk.oray.com/">https://hsk.oray.com/</a></li><li>  项目介绍：商业化比较成功的内网穿透。个人开发很不推荐，收费贵，企业可以考虑使用。</li></ul><p><code>frp</code>内网穿透比<code>ngrok</code>要简单的多，无需多复杂的配置就可以达到比较好的穿透效果，扩展性也很强。</p><p>注意：用国内服务器搭建，需要域名备案才能使用<code>（划重点）</code></p><h1 id="二、Frp配置说明"><a href="#二、Frp配置说明" class="headerlink" title="二、Frp配置说明"></a>二、Frp配置说明</h1><p>前面说了这么多理由，话不说，现在我们来操作吧</p><h2 id="1、实现功能"><a href="#1、实现功能" class="headerlink" title="1、实现功能"></a>1、实现功能</h2><p>（1）外网通过ssh访问内网机器<br>（2）自定义绑定域名访问内网web服务（3）外网访问PVE建的交接系统的服务</p><h2 id="2、配置前准备"><a href="#2、配置前准备" class="headerlink" title="2、配置前准备"></a>2、配置前准备</h2><p>（1）公网服务器1台（我这里用的阿里云ECS）（2）内网服务器1台（我的就是PVE服务器啦）（3）公网服务器绑定域名1个（方便访问搞个域名）（4）内网服务器部署一个web服务（测试用，我这就是PVE的https界面）</p><h1 id="三、安装Frp"><a href="#三、安装Frp" class="headerlink" title="三、安装Frp"></a>三、安装Frp</h1><h2 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h2><p>1、公网服务器与内网服务器都需要下载frp进行安装</p><p>2、下载地址是<a target="_blank" rel="noopener" href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a></p><p>也可以通过命令下载：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.16.1/frp_0.16.1_linux_amd64.tar.gz</span><br></pre></td></tr></tbody></table></figure><p>3.在WINDOWS下用<code>winscp</code>软件登录，上传<code>frp_0.16.1_linux_amd64.tar.gz</code>至<code>root</code>目录</p><p>4.解压文件：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf frp_0.16.1_linux_amd64.tar.gz</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注：<code>frps</code>、<code>frps.ini</code>这个两个是服务端文件，<code>frpc</code>、<code>frpc.ini</code>这两个是客户端文件</p></blockquote><h2 id="配置服务端"><a href="#配置服务端" class="headerlink" title="配置服务端"></a>配置服务端</h2><blockquote><p>非常重要——由于公网服务端作为中转，千万记得端口放行和防火墙关闭，千万记得端口放行和防火墙关闭，千万记得端口放行和防火墙关闭，重要的事情说三遍，<code>划重点</code>！</p></blockquote><p>1.进入解压目录：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd frp_0.16.1_linux_amd64</span><br></pre></td></tr></tbody></table></figure><p>frps、frps.ini这个两个是服务端文件，frpc、frpc.ini这两个是客户端文件</p><p>2.修改参数：</p><p><code>vi ./frps.ini</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">vhost_http_port = 8090</span><br><span class="line">vhost_https_port = 4430</span><br></pre></td></tr></tbody></table></figure><p><code>bind_port</code>为客户端与服务端进行通信的端口，<code>vhost_http_port</code>为服务端http服务的端口。其它更丰富的配置可参考<code>frps_full.ini</code>和项目帮助文档。</p><p>按”i”键进行编辑，按<code>“esc”</code>退出编辑状态，输入<code>“:wq”</code>退出</p><h2 id="启动服务端"><a href="#启动服务端" class="headerlink" title="启动服务端"></a>启动服务端</h2><p><em><strong>临时启动</strong></em></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frps -c ./frps.ini</span><br></pre></td></tr></tbody></table></figure><p><img src="http://cdn.pidaye.top/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8frp%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%EF%BC%8C%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%92%8Chttp%E8%AE%BF%E9%97%AE%20-%20%E7%AE%80%E4%B9%A6.webp" alt="手把手教你用frp实现内网穿透，进行远程桌面和http访问 - 简书"></p><p>公网服务端搭建成功</p><p><em><strong>设置开机启动和后台运行</strong></em></p><p>上一步中的frps占据了整个命令窗口，所以接下来要考虑如何让它在后台运行并且开机自启：首先通过<code>vi /etc/systemd/system/frps.service</code>命令新建文件并写入以下内容:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=frps daemon</span><br><span class="line">After=syslog.target  network.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/frp/frp_0.16.0_linux_386/frps -c /usr/frp/frp_0.16.0_linux_386/frps.ini</span><br><span class="line">Restart= always</span><br><span class="line">RestartSec=1min</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></tbody></table></figure><p>注意<code>ExecStart</code>中要配置成自己的路径。</p><p>然后使用<code>systemctl start frps</code>即可启动<code>frps</code>, 用<code>systemctl enable frps</code>即可将<code>frps</code>设置为开机启动。</p><h2 id="配置客户端"><a href="#配置客户端" class="headerlink" title="配置客户端"></a>配置客户端</h2><p><code>vi ./frpc.ini</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[common]  </span><br><span class="line">server_addr = 120.56.37.48      #公网服务器ip  </span><br><span class="line">server_port = 7000              #与服务端bind_port一致  </span><br><span class="line"></span><br><span class="line">#公网通过ssh访问内部服务器  </span><br><span class="line">[ssh]  </span><br><span class="line">type = tcp                      #连接协议  </span><br><span class="line">local_ip = 127.0.0.1            #内网服务器ip  </span><br><span class="line">local_port = 22                 #ssh默认端口号  </span><br><span class="line">remote_port = 6022              #自定义的访问内部ssh端口号  </span><br><span class="line"></span><br><span class="line">#公网访问内部web服务器以http方式  </span><br><span class="line">[web]  </span><br><span class="line">type = https                     #访问协议</span><br><span class="line">local_ip = 127.0.0.1            #内网服务器ip</span><br><span class="line">local_port = 8006                 #内网web服务的端口号  </span><br><span class="line">custom_domains = www.veelove.cn,veelove.cn   </span><br><span class="line"></span><br><span class="line">[nasweb]</span><br><span class="line">type = http                     </span><br><span class="line">local_ip = 192.168.10.215       #内网桥接nas web的IP</span><br><span class="line">local_port = 5000               #群晖NAS登陆地址端口是5000</span><br><span class="line">custom_domains = nas.veelove.cn</span><br><span class="line"></span><br><span class="line">[nasphoto]</span><br><span class="line">type = tcp                      #协议为TCP协议</span><br><span class="line">local_ip = 192.168.10.216</span><br><span class="line">local_port = 80</span><br><span class="line">remote_port = 8000              #需要做一个端口转发才可以实现APP登陆，端口自定义</span><br><span class="line">custom_domains = photo.veelove.cn</span><br><span class="line"></span><br><span class="line">[lede]</span><br><span class="line">type = http                     #协议为http</span><br><span class="line">local_ip = 192.168.10.254       #保持不变，如果您更换过lede后台地址，请自行修改</span><br><span class="line">local_port = 80</span><br><span class="line">custom_domains = lede.veelove.cn #更换为自己的域名</span><br><span class="line"></span><br><span class="line">[esxi]</span><br><span class="line">type = https #协议为https</span><br><span class="line">local_ip = 192.168.1.101 #更换为自己esxi后台管理地址</span><br><span class="line">local_port = 443</span><br><span class="line">custom_domains = esxi.veelove.cn #更换为自己的域名</span><br><span class="line"></span><br><span class="line">[dsphoto]</span><br><span class="line">type = tcp #协议为tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 80</span><br><span class="line">remote_port = 8000 #转发端口可以自己设定</span><br><span class="line">custom_domains = photo.veelove.cn #更换为自己的域名</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><blockquote><p>注：所绑定的公网服务器域名，一级、二级域名都可以，绑定多个域名时用英文<code>“,”</code>分开</p></blockquote><h2 id="启动客户端"><a href="#启动客户端" class="headerlink" title="启动客户端"></a>启动客户端</h2><p><em><strong>临时启动</strong></em></p><p><code>./frps -c ./frps.ini</code></p><p><img src="http://cdn.pidaye.top/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8frp%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%EF%BC%8C%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%92%8Chttp%E8%AE%BF%E9%97%AE%20-%20%E7%AE%80%E4%B9%A6.webp" alt="手把手教你用frp实现内网穿透，进行远程桌面和http访问 - 简书"></p><p>公网服务端搭建成功</p><p><em><strong>设置开机启动和后台运行</strong></em></p><p>上一步中的frps占据了整个命令窗口，所以接下来要考虑如何让它在后台运行并且开机自启：首先通过<code>vi /etc/systemd/system/frpc.service</code>命令新建文件并写入以下内容:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=frpc daemon</span><br><span class="line">After=syslog.target  network.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/frp/frp_0.16.0_linux_386/frpc -c /usr/frp/frp_0.16.0_linux_386/frpc.ini</span><br><span class="line">Restart= always</span><br><span class="line">RestartSec=1min</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></tbody></table></figure><p>注意<code>ExecStart</code>中要配置成自己的路径。</p><p>然后使用<code>systemctl start frpc</code>即可启动<code>frpc</code>, 用<code>systemctl enable frpc</code>即可将<code>frpc</code>设置为开机启动。</p><h1 id="四、穿透公司代理内网-有需要时使用"><a href="#四、穿透公司代理内网-有需要时使用" class="headerlink" title="四、穿透公司代理内网(有需要时使用)"></a>四、穿透公司代理内网(有需要时使用)</h1><h2 id="1-修改服务端配置文件"><a href="#1-修改服务端配置文件" class="headerlink" title="1.修改服务端配置文件"></a>1.修改服务端配置文件</h2><p><code>vi ./frps.ini</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = 443        #端口号修改为443</span><br><span class="line">vhost_http_port = 80    #访问客户端web服务自定义的端口号</span><br></pre></td></tr></tbody></table></figure><h2 id="2-修改客户端配置文件"><a href="#2-修改客户端配置文件" class="headerlink" title="2.修改客户端配置文件"></a>2.修改客户端配置文件</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ./frpc.ini</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 118.24.127.138</span><br><span class="line">server_port = 443                            #端口号修改为443</span><br><span class="line">http_proxy = http://10.168.57.241:8088       #加入公司代理地址</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 6000</span><br><span class="line"></span><br><span class="line">[web]</span><br><span class="line">type = http</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 80</span><br><span class="line">custom_domains = www.veelove.cn</span><br></pre></td></tr></tbody></table></figure><p>服务端与客户端启动方式不变</p><h1 id="五、进阶设置（P2P）"><a href="#五、进阶设置（P2P）" class="headerlink" title="五、进阶设置（P2P）"></a>五、进阶设置（P2P）</h1><h2 id="点对点内网穿透"><a href="#点对点内网穿透" class="headerlink" title="点对点内网穿透"></a>点对点内网穿透</h2><blockquote><p>这里可以使用zerotier的方案，搭建更简单一些效果差不多，下面是frp的点对点方案</p></blockquote><p><code>frp</code> 提供了一种新的代理类型 <code>xtcp</code> 用于应对在希望传输大量数据且流量不经过服务器的场景。</p><p>使用方式同 <code>stcp</code> 类似，需要在两边都部署上 <code>frpc</code> 用于建立直接的连接。</p><p>目前处于开发的初级阶段，并不能穿透所有类型的 <code>NAT</code> 设备，所以穿透成功率较低。穿透失败时可以尝试 <code>stcp</code> 的方式。</p><p><code>frps</code> 除正常配置外需要额外配置一个 <code>udp</code> 端口用于支持该类型的客户端:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bind_udp_port = 7001</span><br></pre></td></tr></tbody></table></figure><p>启动 frpc，转发内网的 <code>ssh</code> 服务，配置如下，不需要指定远程端口:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># frpc.ini</span><br><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[p2p_ssh]</span><br><span class="line">type = xtcp</span><br><span class="line"># 只有 sk 一致的用户才能访问到此服务</span><br><span class="line">sk = abcdefg</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br></pre></td></tr></tbody></table></figure><p>在要访问这个服务的机器上启动另外一个 frpc，配置如下:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># frpc.ini</span><br><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[p2p_ssh_visitor]</span><br><span class="line">type = xtcp</span><br><span class="line"># xtcp 的访问者</span><br><span class="line">role = visitor</span><br><span class="line"># 要访问的 xtcp 代理的名字</span><br><span class="line">server_name = p2p_ssh</span><br><span class="line">sk = abcdefg</span><br><span class="line"># 绑定本地端口用于访问 ssh 服务</span><br><span class="line">bind_addr = 127.0.0.1</span><br><span class="line">bind_port = 6000</span><br></pre></td></tr></tbody></table></figure><p>通过 ssh 访问内网机器，假设用户名为 test:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -oPort=6000 test@127.0.0.1</span><br></pre></td></tr></tbody></table></figure><h1 id="附加文档：群晖NAS使用frp穿透服务"><a href="#附加文档：群晖NAS使用frp穿透服务" class="headerlink" title="附加文档：群晖NAS使用frp穿透服务"></a>附加文档：群晖NAS使用frp穿透服务</h1><blockquote><p>（针对单独开穿透的群辉系统，如果前面都是桥接可以直接在PVE客户端加上所有服务即可）</p></blockquote><h2 id="设置ROOT密码，获取群晖的ROOT权限"><a href="#设置ROOT密码，获取群晖的ROOT权限" class="headerlink" title="设置ROOT密码，获取群晖的ROOT权限"></a>设置ROOT密码，获取群晖的ROOT权限</h2><p>1.打开控制面板,开启SSH功能</p><p><img src="http://cdn.pidaye.top/FE841EBA-76C5-48E7-B063-351ECE53453F%201133%C3%97725.jpg" alt="FE841EBA-76C5-48E7-B063-351ECE53453F 1133×725"></p><p>2.终端输入命令ssh admin@192.168.1.201登录，密码为群辉NAS的用户密码（地址修改为自己的NAS地址，win用户用Putty这个软件登录）</p><p><img src="http://cdn.pidaye.top/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2018-03-28-%E4%B8%8B%E5%8D%883.30.17%201142%C3%97732.png" alt="屏幕快照-2018-03-28-下午3.30.17 1142×732"></p><p>3.输入命令</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></tbody></table></figure><p>4.设置root密码</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">synouser --setpw root XXX</span><br></pre></td></tr></tbody></table></figure><p>【XXX便是你要修改的密码】</p><h2 id="客户端调试"><a href="#客户端调试" class="headerlink" title="客户端调试"></a>客户端调试</h2><h3 id="1-使用root用户登录群晖6-1"><a href="#1-使用root用户登录群晖6-1" class="headerlink" title="1.使用root用户登录群晖6.1"></a>1.使用root用户登录群晖6.1</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@192.168.1.201</span><br></pre></td></tr></tbody></table></figure><p>(地址修改为自己的群晖NAS地址)</p><h3 id="2-群晖NAS登陆后台配置文件"><a href="#2-群晖NAS登陆后台配置文件" class="headerlink" title="2.群晖NAS登陆后台配置文件"></a>2.群晖NAS登陆后台配置文件</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 118.24.127.138</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 6000</span><br><span class="line"></span><br><span class="line">[nasweb]  </span><br><span class="line">type = http                   </span><br><span class="line">local_ip = 127.0.0.1           </span><br><span class="line">local_port = 5000                     #群晖NAS登陆地址端口是5000</span><br><span class="line">custom_domains = nas.veelove.cn</span><br></pre></td></tr></tbody></table></figure><h3 id="2-使用群晖NAS手机APP的DS-photo软件在外网访问配置文件"><a href="#2-使用群晖NAS手机APP的DS-photo软件在外网访问配置文件" class="headerlink" title="2.使用群晖NAS手机APP的DS photo软件在外网访问配置文件"></a>2.使用群晖NAS手机APP的DS photo软件在外网访问配置文件</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 118.24.127.138</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 6000</span><br><span class="line"></span><br><span class="line">[nasweb]  </span><br><span class="line">type = http                   </span><br><span class="line">local_ip = 127.0.0.1           </span><br><span class="line">local_port = 5000                     #群晖NAS登陆地址端口是5000</span><br><span class="line">custom_domains = nas.veelove.cn</span><br><span class="line"></span><br><span class="line">[nasphoto]  </span><br><span class="line">type = tcp                             #协议为TCP协议</span><br><span class="line">local_ip = 127.0.0.1           </span><br><span class="line">local_port = 80</span><br><span class="line">remote_port = 8000                    #需要做一个端口转发才可以实现APP登陆，端口自定义</span><br><span class="line">custom_domains = photo.veelove.cn</span><br></pre></td></tr></tbody></table></figure><h2 id="外网访问esxi后台管理、群晖NAS、群晖NAS客户端DS-Photo、LEDE软路由后台"><a href="#外网访问esxi后台管理、群晖NAS、群晖NAS客户端DS-Photo、LEDE软路由后台" class="headerlink" title="外网访问esxi后台管理、群晖NAS、群晖NAS客户端DS Photo、LEDE软路由后台"></a>外网访问esxi后台管理、群晖NAS、群晖NAS客户端DS Photo、LEDE软路由后台</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 118.24.127.138             #更换为自己服务器IP地址</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[lede]</span><br><span class="line">type = http                              #协议为http</span><br><span class="line">local_ip = 192.168.1.1                   #保持不变，如果您更换过lede后台地址，请自行修改</span><br><span class="line">local_port = 80</span><br><span class="line">custom_domains = lede.veelove.cn         #更换为自己的域名</span><br><span class="line"></span><br><span class="line">[esxi]</span><br><span class="line">type = https                             #协议为https</span><br><span class="line">local_ip = 192.168.1.101                 #更换为自己esxi后台管理地址</span><br><span class="line">local_port = 443</span><br><span class="line">custom_domains = esxi.veelove.cn         #更换为自己的域名</span><br><span class="line"></span><br><span class="line">[dsphoto]</span><br><span class="line">type = tcp                               #协议为tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 80</span><br><span class="line">remote_port = 8000                       #转发端口可以自己设定</span><br><span class="line">custom_domains = photo.veelove.cn        #更换为自己的域名</span><br><span class="line"></span><br><span class="line">[dsm]</span><br><span class="line">type = http                              #协议为http</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 5000</span><br><span class="line">custom_domains = nas.veelove.cn          #更换为自己的域名</span><br></pre></td></tr></tbody></table></figure><h2 id="如何让Frp在群晖中自动开机运行"><a href="#如何让Frp在群晖中自动开机运行" class="headerlink" title="如何让Frp在群晖中自动开机运行"></a>如何让Frp在群晖中自动开机运行</h2><h3 id="1-进入群晖控制面板》任务计划》新增》触发任务》用户定义的脚本"><a href="#1-进入群晖控制面板》任务计划》新增》触发任务》用户定义的脚本" class="headerlink" title="1.进入群晖控制面板》任务计划》新增》触发任务》用户定义的脚本"></a>1.进入群晖控制面板》任务计划》新增》触发任务》用户定义的脚本</h3><p><img src="http://cdn.pidaye.top/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2018-04-23-%E4%B8%8A%E5%8D%887.58.15%20998%C3%97568.png" alt="屏幕快照-2018-04-23-上午7.58.15 998×568"></p><h3 id="2-添加脚本"><a href="#2-添加脚本" class="headerlink" title="2.添加脚本"></a>2.添加脚本</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/root/frp/frpc -c /root/frp/frpc.ini</span><br></pre></td></tr></tbody></table></figure><p>上面的frp修改为你frp目录的文件名称，我在视频里面建议是修改为frp方便记忆</p><p><img src="http://cdn.pidaye.top/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2018-04-23-%E4%B8%8A%E5%8D%888.11.45%201005%C3%97574.png" alt="屏幕快照-2018-04-23-上午8.11.45 1005×574"></p><h3 id="3-按照下图的序号号顺序操作，重启群晖NAS即可"><a href="#3-按照下图的序号号顺序操作，重启群晖NAS即可" class="headerlink" title="3.按照下图的序号号顺序操作，重启群晖NAS即可"></a>3.按照下图的序号号顺序操作，重启群晖NAS即可</h3><p><img src="http://cdn.pidaye.top/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2018-04-23-%E4%B8%8A%E5%8D%887.59.51%20996%C3%97568.png" alt="屏幕快照-2018-04-23-上午7.59.51 996×568"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、为什么要内网穿透&quot;&gt;&lt;a href=&quot;#一、为什么要内网穿透&quot; class=&quot;headerlink&quot; title=&quot;一、为什么要内网穿透&quot;&gt;&lt;/a&gt;一、为什么要内网穿透&lt;/h1&gt;&lt;p&gt;当然是为了方便管理啦，最好是只要在有公网的地方就可以访问家里的服务器！&lt;/p</summary>
      
    
    
    
    <category term="个人兴趣" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/%E4%B8%AA%E4%BA%BA%E5%85%B4%E8%B6%A3/"/>
    
    
    <category term="pve" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/pve/"/>
    
    <category term="frp" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/frp/"/>
    
    <category term="内网穿透" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>ProXmoX VE搭建家庭多媒体服务器（一）：ProXmoX VE 安装及基础配置</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/%E4%B8%AA%E4%BA%BA%E5%85%B4%E8%B6%A3/proxmox-ve%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9Aproxmox-ve-%E5%AE%89%E8%A3%85%E5%8F%8A%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/%E4%B8%AA%E4%BA%BA%E5%85%B4%E8%B6%A3/proxmox-ve%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E5%A4%9A%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9Aproxmox-ve-%E5%AE%89%E8%A3%85%E5%8F%8A%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</id>
    <published>2019-05-15T10:22:00.000Z</published>
    <updated>2019-05-15T10:22:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>原文链接<a target="_blank" rel="noopener" href="https://post.smzdm.com/p/768830/">基于ProXmoX VE的虚拟化家庭服务器（篇一）—ProXmoX VE 安装及基础配置</a>修改了中间的代码错误和格式调整</p></blockquote><h1 id="为什么用ProXmoX-VE"><a href="#为什么用ProXmoX-VE" class="headerlink" title="为什么用ProXmoX VE"></a>为什么用ProXmoX VE</h1><p>主要还是一个朋友推荐，他自己用的是<code>ESXI</code>，觉得限制还是有的，况且<code>proxmox ve</code>兼容性好啊，我家买了一个<code>SYS E300-8D</code>买来当然不能荒废，果断选一个好用不费劲的方案</p><p>下面列一下主流的几个虚拟化方案的优缺点</p><ul><li><p><code>ESXI</code>-比较热门的GEN8全虚拟化系统，然而在GEN8上一直存在一些小问题，安装使用一个月，6.0以上系统的磁盘问题通过换驱动解决了，但是出现虚拟机偶尔卡住无法关机等情况，而且开关机引导时间很长</p></li><li><p><code>UNRAID</code>，非常厉害的一个半虚拟化系统，配置简单，傻瓜直通，然而界面英文，我这种外文渣用起来非常难受，授权收费<code>basic</code>$59，<code>plus</code>$89，<code>pro</code>$129，存储数量依次为Basic：6个存储介质，Plus：12个存储介质，Pro：不限，申请了一个30天的试用KEY，用了2天就没用下去了，英文太难受。</p></li></ul><p>最后定下来使用ProXmoX VE</p><h1 id="ProXmoX-VE-介绍"><a href="#ProXmoX-VE-介绍" class="headerlink" title="ProXmoX VE 介绍"></a>ProXmoX VE 介绍</h1><p><code>Proxmox VE</code>是一款套开源的虚拟化管理软件，用户可通过网页的方式来管理<a target="_blank" rel="noopener" href="https://www.smzdm.com/fenlei/fuwuqi/">服务器</a>上使用 <code>kvm</code> 以及 <code>lxc</code> 技术运行的虚拟机。同时提供了一些先进功能的支持，如<code>集群</code>、<code>HA</code>等。</p><p><code>PVE</code>虽然是开源，却是由一个商业公司在运营、更新以及维护。</p><h1 id="ProXmoX-VE-安装"><a href="#ProXmoX-VE-安装" class="headerlink" title="ProXmoX VE 安装"></a>ProXmoX VE 安装</h1><h2 id="基础准备"><a href="#基础准备" class="headerlink" title="基础准备"></a>基础准备</h2><p>16G以上U盘一个(非必须，这个U盘是用来安装PROXMOX的，也可以直接装<a target="_blank" rel="noopener" href="https://www.smzdm.com/fenlei/yingpan/">硬盘</a>上，GEN8比较特殊，使用U盘引导比较方便，所以我安装在U盘上)；4G以上U盘一个；</p><p>支持虚拟化技术的CPU；</p><p>如果要虚拟软路由，需要有2个网口以上，最好千兆;</p><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p>首先去proxmox下载安装包，目前最新版本是5.4-1，推荐使用<a target="_blank" rel="noopener" href="https://www.proxmox.com/en/downloads">种子</a>下载，速度会比较快，下载完成后务必使用使用工具进行SHA256校验，防止下载错误;</p><h3 id="方法一：使用U盘做启动盘安装系统"><a href="#方法一：使用U盘做启动盘安装系统" class="headerlink" title="方法一：使用U盘做启动盘安装系统"></a>方法一：使用U盘做启动盘安装系统</h3><blockquote><p>如果你有<code>IPMI</code>那更好了直接可以用虚拟磁盘，具体方式可以跳到下一个</p></blockquote><p>然后使用软碟通把下载的ISO文件刻录进4G的U盘（本人使用GEN8的ILO4远程安装，有GEN8的朋友应该知道咋弄）。</p><p>接着把4GU盘和16GU盘插入电脑，BIOS中开启虚拟化支持（具体方法百度，BIOS太多，我就不放图了），一个网口接入路由，使用4GU盘引导启动很快就会进入安装界面。</p><h3 id="方法二：使用IPMI虚拟磁盘安装系统"><a href="#方法二：使用IPMI虚拟磁盘安装系统" class="headerlink" title="方法二：使用IPMI虚拟磁盘安装系统"></a>方法二：使用IPMI虚拟磁盘安装系统</h3><h3 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h3><p><img src="http://cdn.pidaye.top/5b9f4976ed9f19895_e600.jpg%20600%C3%97375.png" alt="5b9f4976ed9f19895_e600.jpg 600×375"></p><p>此处选择第一项回车，稍微等待一会，进入下图界面</p><p><img src="http://cdn.pidaye.top/5b9f4977217c69276_e600.jpg%20600%C3%97450.png" alt="5b9f4977217c69276_e600.jpg 600×450"></p><p>选择 <code>I agree</code></p><p>这里选择你要安装的的硬盘或者U盘，选定后点击<code>Next</code></p><p><img src="http://cdn.pidaye.top/5b9f4977859ad8338_e600.jpg%20600%C3%97450.png" alt="5b9f4977859ad8338_e600.jpg 600×450"></p><p>这里一般会默认<code>China</code>，如果没有那就输入china，其他默认，点击<code>Next</code></p><p>然后输入两遍<code>管理密码和邮箱</code>，点击<code>Next</code></p><p><img src="http://cdn.pidaye.top/5b9f4977dc3429854_e600.jpg%20600%C3%97450.png" alt="5b9f4977dc3429854_e600.jpg 600×450"></p><p>这里注意，查看一下是不是你局域网的网段，如果不是，很可能和路由之间网络不通，另外，<code>Hostname</code>这项的格式需为<code>*.*</code>，默认的是无法下一步的，我这里使用PVE.LEN，点击<code>next</code>，等待安装完成，出现如下界面时，说明安装已经完成，点击<code>reboot</code>，</p><p>等待重启完成，拔掉U盘或者退出，虚拟磁盘如果顺利，会出现如下界面</p><p><img src="http://cdn.pidaye.top/5b9f497816c518309_e600.jpg%20600%C3%97361.png" alt="5b9f497816c518309_e600.jpg 600×361"></p><h1 id="ProXmoX-VE-初始配置"><a href="#ProXmoX-VE-初始配置" class="headerlink" title="ProXmoX VE 初始配置"></a>ProXmoX VE 初始配置</h1><h2 id="使用浏览器登录"><a href="#使用浏览器登录" class="headerlink" title="使用浏览器登录"></a>使用浏览器登录</h2><p>用另外一台电脑在浏览器中输入上面的地址进行访问</p><p><img src="http://cdn.pidaye.top/5b9f49784e6f89797_e600.jpg%20600%C3%97316.png" alt="5b9f49784e6f89797_e600.jpg 600×316"></p><p><code>language</code>选择<code>chinese</code>就可以中文访问啦，用户名输入<code>root</code>，密码为刚才安装时候输的两遍管理密码</p><p><img src="http://cdn.pidaye.top/5b9f49787f9326583_e600.jpg%20600%C3%97236.png" alt="5b9f49787f9326583_e600.jpg 600×236"></p><h2 id="去掉订阅弹窗"><a href="#去掉订阅弹窗" class="headerlink" title="去掉订阅弹窗"></a>去掉订阅弹窗</h2><p>由于proxmox一些功能是需要付费订阅的，虽然可以免费使用，但是每次登陆时候都会弹出如上让你订阅的通知，比较烦，我们这里通过技术手段把它屏蔽掉。</p><p>首先点击确定把它关掉，然后通过winscp打开以下文件<code>/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js</code>，或者直接在</p><p><img src="http://cdn.pidaye.top/5b9f49789dc6b2067_e600.jpg%20600%C3%97337.png" alt="5b9f49789dc6b2067_e600.jpg 600×337"></p><p>shell中使用VI等工具编辑，找到</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(data.status!=='Active'){</span><br></pre></td></tr></tbody></table></figure><p>替换为</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(false){</span><br></pre></td></tr></tbody></table></figure><p>这条位置比较靠后，大约在800行，替换完成后保存文件，注销登陆，清理浏览器缓存，再次登陆，发现已经不再弹窗让你订阅啦。</p><p>接下来下来我们更新一下proxomx的软件，proxmox的底层毕竟是个debian系统，刚安装还是要更新一下的，在shell中输入<code>apt update &amp;&amp; apt dist-upgrade</code>，回车，发现报错无法更新，查看官方文档发现需要更改一些设置，在<code>shell</code>输入</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f /etc/apt/sources.list.d/pve-enterprise.list</span><br></pre></td></tr></tbody></table></figure><p>添加新的</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "deb http://download.proxmox.com/debian/pve stretch pve-no-subscription" &gt; /etc/apt/sources.list.d/pve-install-repo.list</span><br></pre></td></tr></tbody></table></figure><p>下载秘钥</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.proxmox.com/debian/proxmox-ve-release-5.x.gpg-O /etc/apt/trusted.gpg.d/proxmox-ve-release-5.x.gpg</span><br></pre></td></tr></tbody></table></figure><p>再次输入</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt dist-upgrade</span><br></pre></td></tr></tbody></table></figure><p>已经可以正常更新，等待更新完成，更新完成后重启一下虚拟机</p><h1 id="ProXmoX-VE-磁盘映射"><a href="#ProXmoX-VE-磁盘映射" class="headerlink" title="ProXmoX VE 磁盘映射"></a>ProXmoX VE 磁盘映射</h1><p>如果你的proxmox是直接安装在硬盘上的，那已经可以正常使用了，如果你和我一样是安装在U盘的，因为U盘空间比较小，需要弄个硬盘用来安装虚拟机</p><p><img src="http://cdn.pidaye.top/5b9f4978cca96571_e600.jpg%20600%C3%97547.png" alt="5b9f4978cca96571_e600.jpg 600×547"></p><p>在磁盘中看下哪个是你要挂载的硬盘，一般推荐SSD，我这里需要挂载的设备目录为<code>/dev/sdb</code>，  </p><p>在shell中输入<code>mkdir /mnt/sdb</code>创建sdb<a target="_blank" rel="noopener" href="https://www.smzdm.com/fenlei/wenjianjia/">文件夹</a>用来给磁盘挂载</p><p>输入<code>fdisk /dev/sdb</code>管理这个硬盘，给它分区</p><p>输入<code>n</code>新建分区</p><p><img src="http://cdn.pidaye.top/5b9f4978be99b1781_e600.jpg%20478%C3%97108.png" alt="5b9f4978be99b1781_e600.jpg 478×108"></p><p>输入<code>p</code>建立主分区，</p><p><img src="http://cdn.pidaye.top/5b9f49791b0d89311_e600.jpg%20466%C3%97120.png" alt="5b9f49791b0d89311_e600.jpg 466×120"></p><p>输入<code>1</code>创建一个分区，</p><p><img src="http://cdn.pidaye.top/5b9f49790c5c72082_e600.jpg%20472%C3%9792.png" alt="5b9f49790c5c72082_e600.jpg 472×92"></p><p>这里是让输入这个分区的扇区起始位置，我们选择默认，直接<code>回车</code></p><p><img src="http://cdn.pidaye.top/5b9f497931d597756_e600.jpg%20600%C3%9740.png" alt="5b9f497931d597756_e600.jpg 600×40"></p><p>分区的扇区结束位置，默认，<code>直接回车</code>，到此就分区完成了，我们输入<code>p</code>查看一下  </p><p><img src="http://cdn.pidaye.top/5b9f4979617127416_e600.jpg%20600%C3%97186.png" alt="5b9f4979617127416_e600.jpg 600×186"></p><p>分区已经完成，目录为<code>/dev/sdb1</code></p><p>输入<code>w</code>，保存并退出<code>fdisk</code>工具</p><p>输入<code>mkfs -t ext4/dev/sdb1</code>格式化一下</p><p>输入<code>mount/dev/sdb1 /mnt/sdb</code>进行挂载</p><p>输入<code>vim /etc/fstab</code>编辑一下这个文件，在最后追加</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/sdb1 /mnt/sdbext4 defaults 0 0</span><br></pre></td></tr></tbody></table></figure><p><code>ctrl+x</code>退出保存 按<code>Y</code> 是否保存 <code>Enter</code> 退出<code>cat /etc/fstab</code> 看最后一行是否加入成功</p><p>使proxmox可以开机自动挂载.</p><p>然后依次点击数据<code>中心</code>-<code>存储</code>-<code>添加</code>-<code>目录</code></p><p><img src="http://cdn.pidaye.top/5b9f497979a976234_e600.jpg%20600%C3%97423.png" alt="5b9f497979a976234_e600.jpg 600×423"></p><p><img src="http://cdn.pidaye.top/5b9f4979909b93240_e600.jpg%20600%C3%97247.png" alt="5b9f4979909b93240_e600.jpg 600×247"></p><p><code>ID</code>随意，目录输入刚才挂载的目录，内容都选上，点添加，</p><p>最后点OS查看一下是否正常识别</p><p><img src="http://cdn.pidaye.top/5b9f4979cb1bf7047_e600.jpg%20600%C3%97131.png" alt="5b9f4979cb1bf7047_e600.jpg 600×131"></p><hr><p>顺便推荐下这位老哥写的其他教程</p><blockquote><p>网络速度慢，我该怎么办？关注<a target="_blank" rel="noopener" href="https://post.smzdm.com/p/a25rk48n/"><strong>#家庭Wi-Fi布网#</strong></a>话题，参加有奖实战征稿！关注<a target="_blank" rel="noopener" href="https://www.smzdm.com/tag/%E5%A6%82%E4%BD%95%E7%8E%A9%E8%BD%ACNAS/post/"><strong>#如何玩转NAS#</strong></a>话题，与其用一个朝开夕倒的免费云，不如自己动手搭建一个私有云，没那么难(＾Ｕ＾)ノ~</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;原文链接&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://post.smzdm.com/p/768830/&quot;&gt;基于ProXmoX VE的虚拟化家庭服务器（篇一）—ProXmoX VE 安装及基础配置&lt;/</summary>
      
    
    
    
    <category term="个人兴趣" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/%E4%B8%AA%E4%BA%BA%E5%85%B4%E8%B6%A3/"/>
    
    
    <category term="pve" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/pve/"/>
    
    <category term="家庭服务器" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习记录（二）：Linux常用命令大全（非常全！！！）</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/linux%E5%AD%A6%E4%B9%A0/linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9Alinux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8%EF%BC%88%E9%9D%9E%E5%B8%B8%E5%85%A8%EF%BC%81%EF%BC%81%EF%BC%81%EF%BC%89/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/linux%E5%AD%A6%E4%B9%A0/linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9Alinux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8%EF%BC%88%E9%9D%9E%E5%B8%B8%E5%85%A8%EF%BC%81%EF%BC%81%EF%BC%81%EF%BC%89/</id>
    <published>2019-05-07T18:26:00.000Z</published>
    <updated>2019-05-07T18:26:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近都在和Linux打交道，感觉还不错。我觉得Linux相比windows比较麻烦的就是很多东西都要用命令来控制，当然，这也是很多人喜欢linux的原因，比较短小但却功能强大。我将我了解到的命令列举一下，仅供大家参考：</p><span id="more"></span><p><strong>Linux常用命令大全（非常全！！！）</strong></p><blockquote><p>原文引用<a target="_blank" rel="noopener" href="https://www.cnblogs.com/yjd_hycf_space/p/7730690.html">https://www.cnblogs.com/yjd_hycf_space/p/7730690.html</a></p></blockquote><p>**系统信息&nbsp;**<br>arch 显示机器的处理器架构(1)&nbsp;<br>uname -m 显示机器的处理器架构(2)&nbsp;<br>uname -r 显示正在使用的内核版本&nbsp;<br>dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI)&nbsp;<br>hdparm -i /dev/hda 罗列一个磁盘的架构特性&nbsp;<br>hdparm -tT /dev/sda 在磁盘上执行测试性读取操作&nbsp;<br>cat /proc/cpuinfo 显示CPU info的信息&nbsp;<br>cat /proc/interrupts 显示中断&nbsp;<br>cat /proc/meminfo 校验内存使用&nbsp;<br>cat /proc/swaps 显示哪些swap被使用&nbsp;<br>cat /proc/version 显示内核的版本&nbsp;<br>cat /proc/net/dev 显示网络适配器及统计&nbsp;<br>cat /proc/mounts 显示已加载的文件系统&nbsp;<br>lspci -tv 罗列 PCI 设备&nbsp;<br>lsusb -tv 显示 USB 设备&nbsp;<br>date 显示系统日期&nbsp;<br>cal 2007 显示2007年的日历表&nbsp;<br>date 041217002007.00 设置日期和时间 - 月日时分年.秒&nbsp;<br>clock -w 将时间修改保存到 BIOS&nbsp;  </p><p>**关机 (系统的关机、重启以及登出 )&nbsp;**<br>shutdown -h now 关闭系统(1)&nbsp;<br>init 0 关闭系统(2)&nbsp;<br>telinit 0 关闭系统(3)&nbsp;<br>shutdown -h hours:minutes &amp; 按预定时间关闭系统&nbsp;<br>shutdown -c 取消按预定时间关闭系统&nbsp;<br>shutdown -r now 重启(1)&nbsp;<br>reboot 重启(2)&nbsp;<br>logout 注销&nbsp;  </p><p><strong>文件和目录</strong>&nbsp;<br>cd /home 进入 ‘/ home’ 目录’&nbsp;<br>cd .. 返回上一级目录&nbsp;<br>cd ../.. 返回上两级目录&nbsp;<br>cd 进入个人的主目录&nbsp;<br>cd ~user1 进入个人的主目录&nbsp;<br>cd - 返回上次所在的目录&nbsp;<br>pwd 显示工作路径&nbsp;<br>ls 查看目录中的文件&nbsp;<br>ls -F 查看目录中的文件&nbsp;<br>ls -l 显示文件和目录的详细资料&nbsp;<br>ls -a 显示隐藏文件&nbsp;<br>ls <em>[0-9]</em> 显示包含数字的文件名和目录名&nbsp;<br>tree 显示文件和目录由根目录开始的树形结构(1)&nbsp;<br>lstree 显示文件和目录由根目录开始的树形结构(2)&nbsp;<br>mkdir dir1 创建一个叫做 ‘dir1’ 的目录’&nbsp;<br>mkdir dir1 dir2 同时创建两个目录&nbsp;<br>mkdir -p /tmp/dir1/dir2 创建一个目录树&nbsp;<br>rm -f file1 删除一个叫做 ‘file1’ 的文件’&nbsp;<br>rmdir dir1 删除一个叫做 ‘dir1’ 的目录’&nbsp;<br>rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容&nbsp;<br>rm -rf dir1 dir2 同时删除两个目录及它们的内容&nbsp;<br>mv dir1 new_dir 重命名/移动 一个目录&nbsp;<br>cp file1 file2 复制一个文件&nbsp;<br>cp dir/* . 复制一个目录下的所有文件到当前工作目录&nbsp;<br>cp -a /tmp/dir1 . 复制一个目录到当前工作目录&nbsp;<br>cp -a dir1 dir2 复制一个目录&nbsp;<br>ln -s file1 lnk1 创建一个指向文件或目录的软链接&nbsp;<br>ln file1 lnk1 创建一个指向文件或目录的物理链接&nbsp;<br>touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm)&nbsp;<br>file file1 outputs the mime type of the file as text&nbsp;<br>iconv -l 列出已知的编码&nbsp;<br>iconv -f fromEncoding -t toEncoding inputFile &gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding.&nbsp;<br>find . -maxdepth 1 -name *.jpg -print -exec convert “{}” -resize 80x60 “thumbs/{}” \; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick)&nbsp;  </p><p><strong>文件搜索</strong>&nbsp;<br>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录&nbsp;<br>find / -user user1 搜索属于用户 ‘user1’ 的文件和目录&nbsp;<br>find /home/user1 -name \*.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件&nbsp;<br>find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件&nbsp;<br>find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件&nbsp;<br>find / -name \*.rpm -exec chmod 755 ‘{}’ \; 搜索以 ‘.rpm’ 结尾的文件并定义其权限&nbsp;<br>find / -xdev -name \*.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备&nbsp;<br>locate \*.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令&nbsp;<br>whereis halt 显示一个二进制文件、源码或man的位置&nbsp;<br>which halt 显示一个二进制文件或可执行文件的完整路径&nbsp;  </p><p><strong>挂载一个文件系统</strong>&nbsp;<br>mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 ‘/ mnt/hda2’ 已经存在&nbsp;<br>umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 ‘/ mnt/hda2’ 退出&nbsp;<br>fuser -km /mnt/hda2 当设备繁忙时强制卸载&nbsp;<br>umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用&nbsp;<br>mount /dev/fd0 /mnt/floppy 挂载一个软盘&nbsp;<br>mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom&nbsp;<br>mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom&nbsp;<br>mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom&nbsp;<br>mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件&nbsp;<br>mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统&nbsp;<br>mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备&nbsp;<br>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享&nbsp;  </p><p>**磁盘空间&nbsp;**<br>df -h 显示已经挂载的分区列表&nbsp;<br>ls -lSr |more 以尺寸大小排列文件和目录&nbsp;<br>du -sh dir1 估算目录 ‘dir1’ 已经使用的磁盘空间’&nbsp;<br>du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小&nbsp;<br>rpm -q -a –qf ‘%10{SIZE}t%{NAME}n’ | sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)&nbsp;<br>dpkg-query -W -f=’${Installed-Size;10}t${Package}n’ | sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统)&nbsp;  </p><p>**用户和群组&nbsp;**<br>groupadd group_name 创建一个新用户组&nbsp;<br>groupdel group_name 删除一个用户组&nbsp;<br>groupmod -n new_group_name old_group_name 重命名一个用户组&nbsp;<br>useradd -c “Name Surname “ -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 “admin” 用户组的用户&nbsp;<br>useradd user1 创建一个新用户&nbsp;<br>userdel -r user1 删除一个用户 ( ‘-r’ 排除主目录)&nbsp;<br>usermod -c “User FTP” -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性&nbsp;<br>passwd 修改口令&nbsp;<br>passwd user1 修改一个用户的口令 (只允许root执行)&nbsp;<br>chage -E 2005-12-31 user1 设置用户口令的失效期限&nbsp;<br>pwck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的用户&nbsp;<br>grpck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的群组&nbsp;<br>newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组&nbsp;  </p><p>**文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消&nbsp;**<br>ls -lh 显示权限&nbsp;<br>ls /tmp | pr -T5 -W$COLUMNS 将终端划分成5栏显示&nbsp;<br>chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限&nbsp;<br>chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限&nbsp;<br>chown user1 file1 改变一个文件的所有人属性&nbsp;<br>chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性&nbsp;<br>chgrp group1 file1 改变文件的群组&nbsp;<br>chown user1:group1 file1 改变一个文件的所有人和群组属性&nbsp;<br>find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件&nbsp;<br>chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限&nbsp;<br>chmod u-s /bin/file1 禁用一个二进制文件的 SUID位&nbsp;<br>chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的&nbsp;<br>chmod g-s /home/public 禁用一个目录的 SGID 位&nbsp;<br>chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件&nbsp;<br>chmod o-t /home/public 禁用一个目录的 STIKY 位&nbsp;  </p><p>**文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消&nbsp;**<br>chattr +a file1 只允许以追加方式读写文件&nbsp;<br>chattr +c file1 允许这个文件能被内核自动压缩/解压&nbsp;<br>chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件&nbsp;<br>chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接&nbsp;<br>chattr +s file1 允许一个文件被安全地删除&nbsp;<br>chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘&nbsp;<br>chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件&nbsp;<br>lsattr 显示特殊的属性&nbsp;  </p><p>**打包和压缩文件&nbsp;**<br>bunzip2 file1.bz2 解压一个叫做 ‘file1.bz2’的文件&nbsp;<br>bzip2 file1 压缩一个叫做 ‘file1’ 的文件&nbsp;<br>gunzip file1.gz 解压一个叫做 ‘file1.gz’的文件&nbsp;<br>gzip file1 压缩一个叫做 ‘file1’的文件&nbsp;<br>gzip -9 file1 最大程度压缩&nbsp;<br>rar a file1.rar test_file 创建一个叫做 ‘file1.rar’ 的包&nbsp;<br>rar a file1.rar file1 file2 dir1 同时压缩 ‘file1’, ‘file2’ 以及目录 ‘dir1’&nbsp;<br>rar x file1.rar 解压rar包&nbsp;<br>unrar x file1.rar 解压rar包&nbsp;<br>tar -cvf archive.tar file1 创建一个非压缩的 tarball&nbsp;<br>tar -cvf archive.tar file1 file2 dir1 创建一个包含了 ‘file1’, ‘file2’ 以及 ‘dir1’的档案文件&nbsp;<br>tar -tf archive.tar 显示一个包中的内容&nbsp;<br>tar -xvf archive.tar 释放一个包&nbsp;<br>tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下&nbsp;<br>tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包&nbsp;<br>tar -jxvf archive.tar.bz2 解压一个bzip2格式的压缩包&nbsp;<br>tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包&nbsp;<br>tar -zxvf archive.tar.gz 解压一个gzip格式的压缩包&nbsp;<br>zip file1.zip file1 创建一个zip格式的压缩包&nbsp;<br>zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包&nbsp;<br>unzip file1.zip 解压一个zip格式压缩包&nbsp;  </p><p><strong>RPM 包 - （Fedora, Redhat及类似系统）</strong>&nbsp;<br>rpm -ivh package.rpm 安装一个rpm包&nbsp;<br>rpm -ivh –nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告&nbsp;<br>rpm -U package.rpm 更新一个rpm包但不改变其配置文件&nbsp;<br>rpm -F package.rpm 更新一个确定已经安装的rpm包&nbsp;<br>rpm -e package_name.rpm 删除一个rpm包&nbsp;<br>rpm -qa 显示系统中所有已经安装的rpm包&nbsp;<br>rpm -qa | grep httpd 显示所有名称中包含 “httpd” 字样的rpm包&nbsp;<br>rpm -qi package_name 获取一个已安装包的特殊信息&nbsp;<br>rpm -qg “System Environment/Daemons” 显示一个组件的rpm包&nbsp;<br>rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表&nbsp;<br>rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表&nbsp;<br>rpm -q package_name –whatrequires 显示与一个rpm包存在依赖关系的列表&nbsp;<br>rpm -q package_name –whatprovides 显示一个rpm包所占的体积&nbsp;<br>rpm -q package_name –scripts 显示在安装/删除期间所执行的脚本l&nbsp;<br>rpm -q package_name –changelog 显示一个rpm包的修改历史&nbsp;<br>rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供&nbsp;<br>rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表&nbsp;<br>rpm –import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书&nbsp;<br>rpm –checksig package.rpm 确认一个rpm包的完整性&nbsp;<br>rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性&nbsp;<br>rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间&nbsp;<br>rpm -Va 检查系统中所有已安装的rpm包- 小心使用&nbsp;<br>rpm -Vp package.rpm 确认一个rpm包还未安装&nbsp;<br>rpm2cpio package.rpm | cpio –extract –make-directories *bin* 从一个rpm包运行可执行文件&nbsp;<br>rpm -ivh /usr/src/redhat/RPMS/`arch`/package.rpm 从一个rpm源码安装一个构建好的包&nbsp;<br>rpmbuild –rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包&nbsp;  </p><p>**YUM 软件包升级器 - （Fedora, RedHat及类似系统）&nbsp;**<br>yum install package_name 下载并安装一个rpm包&nbsp;<br>yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系&nbsp;<br>yum update package_name.rpm 更新当前系统中所有安装的rpm包&nbsp;<br>yum update package_name 更新一个rpm包&nbsp;<br>yum remove package_name 删除一个rpm包&nbsp;<br>yum list 列出当前系统中安装的所有包&nbsp;<br>yum search package_name 在rpm仓库中搜寻软件包&nbsp;<br>yum clean packages 清理rpm缓存删除下载的包&nbsp;<br>yum clean headers 删除所有头文件&nbsp;<br>yum clean all 删除所有缓存的包和头文件&nbsp;  </p><p>**DEB 包 (Debian, Ubuntu 以及类似系统)&nbsp;**<br>dpkg -i package.deb 安装/更新一个 deb 包&nbsp;<br>dpkg -r package_name 从系统删除一个 deb 包&nbsp;<br>dpkg -l 显示系统中所有已经安装的 deb 包&nbsp;<br>dpkg -l | grep httpd 显示所有名称中包含 “httpd” 字样的deb包&nbsp;<br>dpkg -s package_name 获得已经安装在系统中一个特殊包的信息&nbsp;<br>dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表&nbsp;<br>dpkg –contents package.deb 显示尚未安装的一个包所提供的文件列表&nbsp;<br>dpkg -S /bin/ping 确认所给的文件由哪个deb包提供&nbsp;  </p><p>**APT 软件工具 (Debian, Ubuntu 以及类似系统)&nbsp;**<br>apt-get install package_name 安装/更新一个 deb 包&nbsp;<br>apt-cdrom install package_name 从光盘安装/更新一个 deb 包&nbsp;<br>apt-get update 升级列表中的软件包&nbsp;<br>apt-get upgrade 升级所有已安装的软件&nbsp;<br>apt-get remove package_name 从系统删除一个deb包&nbsp;<br>apt-get check 确认依赖的软件仓库正确&nbsp;<br>apt-get clean 从下载的软件包中清理缓存&nbsp;<br>apt-cache search searched-package 返回包含所要搜索字符串的软件包名称&nbsp;  </p><p><strong>查看文件内容</strong>&nbsp;<br>cat file1 从第一个字节开始正向查看文件的内容&nbsp;<br>tac file1 从最后一行开始反向查看一个文件的内容&nbsp;<br>more file1 查看一个长文件的内容&nbsp;<br>less file1 类似于 ‘more’ 命令，但是它允许在文件中和正向操作一样的反向操作&nbsp;<br>head -2 file1 查看一个文件的前两行&nbsp;<br>tail -2 file1 查看一个文件的最后两行&nbsp;<br>tail -f /var/log/messages 实时查看被添加到一个文件中的内容&nbsp;  </p><p>*<em>文本处理&nbsp;**<br>cat file1 file2 … | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT&nbsp;<br>cat file1 | command( sed, grep, awk, grep, etc…) &gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中&nbsp;<br>cat file1 | command( sed, grep, awk, grep, etc…) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中&nbsp;<br>grep Aug /var/log/messages 在文件 ‘/var/log/messages’中查找关键词”Aug”&nbsp;<br>grep ^Aug /var/log/messages 在文件 ‘/var/log/messages’中查找以”Aug”开始的词汇&nbsp;<br>grep [0-9] /var/log/messages 选择 ‘/var/log/messages’ 文件中所有包含数字的行&nbsp;<br>grep Aug -R /var/log/</em> 在目录 ‘/var/log’ 及随后的目录中搜索字符串”Aug”&nbsp;<br>sed ‘s/stringa1/stringa2/g’ example.txt 将example.txt文件中的 “string1” 替换成 “string2”&nbsp;<br>sed ‘/^$/d’ example.txt 从example.txt文件中删除所有空白行&nbsp;<br>sed ‘/ *#/d; /^$/d’ example.txt 从example.txt文件中删除所有注释和空白行&nbsp;<br>echo ‘esempio’ | tr ‘[:lower:]‘ ‘[:upper:]‘ 合并上下单元格内容&nbsp;<br>sed -e ‘1d’ result.txt 从文件example.txt 中排除第一行&nbsp;<br>sed -n ‘/stringa1/p’ 查看只包含词汇 “string1”的行&nbsp;<br>sed -e ‘s/ <em>$//‘ example.txt 删除每一行最后的空白字符&nbsp;<br>sed -e ‘s/stringa1//g’ example.txt 从文档中只删除词汇 “string1” 并保留剩余全部&nbsp;<br>sed -n ‘1,5p;5q’ example.txt 查看从第一行到第5行内容&nbsp;<br>sed -n ‘5p;5q’ example.txt 查看第5行&nbsp;<br>sed -e ‘s/00</em>/0/g’ example.txt 用单个零替换多个零&nbsp;<br>cat -n file1 标示文件的行数&nbsp;<br>cat example.txt | awk ‘NR%2==1’ 删除example.txt文件中的所有偶数行&nbsp;<br>echo a b c | awk ‘{print $1}’ 查看一行第一栏&nbsp;<br>echo a b c | awk ‘{print $1,$3}’ 查看一行的第一和第三栏&nbsp;<br>paste file1 file2 合并两个文件或两栏的内容&nbsp;<br>paste -d ‘+’ file1 file2 合并两个文件或两栏的内容，中间用”+”区分&nbsp;<br>sort file1 file2 排序两个文件的内容&nbsp;<br>sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份)&nbsp;<br>sort file1 file2 | uniq -u 删除交集，留下其他的行&nbsp;<br>sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件)&nbsp;<br>comm -1 file1 file2 比较两个文件的内容只删除 ‘file1’ 所包含的内容&nbsp;<br>comm -2 file1 file2 比较两个文件的内容只删除 ‘file2’ 所包含的内容&nbsp;<br>comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分&nbsp;  </p><p>**字符设置和文件格式转换&nbsp;**<br>dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX&nbsp;<br>unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS&nbsp;<br>recode ..HTML &lt; page.txt &gt; page.html 将一个文本文件转换成html&nbsp;<br>recode -l | more 显示所有允许的转换格式&nbsp;  </p><p>**文件系统分析&nbsp;**<br>badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块&nbsp;<br>fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性&nbsp;<br>fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性&nbsp;<br>e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性&nbsp;<br>e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性&nbsp;<br>fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性&nbsp;<br>fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性&nbsp;<br>fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性&nbsp;<br>dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性&nbsp;  </p><p><strong>初始化一个文件系统</strong>&nbsp;<br>mkfs /dev/hda1 在hda1分区创建一个文件系统&nbsp;<br>mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统&nbsp;<br>mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统&nbsp;<br>mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统&nbsp;<br>fdformat -n /dev/fd0 格式化一个软盘&nbsp;<br>mkswap /dev/hda3 创建一个swap文件系统&nbsp;  </p><p><strong>SWAP文件系统</strong>&nbsp;<br>mkswap /dev/hda3 创建一个swap文件系统&nbsp;<br>swapon /dev/hda3 启用一个新的swap文件系统&nbsp;<br>swapon /dev/hda2 /dev/hdb3 启用两个swap分区&nbsp;  </p><p><strong>备份</strong>&nbsp;<br>dump -0aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的完整备份&nbsp;<br>dump -1aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的交互式备份&nbsp;<br>restore -if /tmp/home0.bak 还原一个交互式备份&nbsp;<br>rsync -rogpav –delete /home /tmp 同步两边的目录&nbsp;<br>rsync -rogpav -e ssh –delete /home ip_address:/tmp 通过SSH通道rsync&nbsp;<br>rsync -az -e ssh –delete ip_addr:/home/public /home/local 通过ssh和压缩将一个远程目录同步到本地目录&nbsp;<br>rsync -az -e ssh –delete /home/local ip_addr:/home/public 通过ssh和压缩将本地目录同步到远程目录&nbsp;<br>dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr ‘dd of=hda.gz’ 通过ssh在远程主机上执行一次备份本地磁盘的操作&nbsp;<br>dd if=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件&nbsp;<br>tar -Puf backup.tar /home/user 执行一次对 ‘/home/user’ 目录的交互式备份操作&nbsp;<br>( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr ‘cd /home/share/ &amp;&amp; tar x -p’ 通过ssh在远程目录中复制一个目录内容&nbsp;<br>( tar c /home ) | ssh -C user@ip_addr ‘cd /home/backup-home &amp;&amp; tar x -p’ 通过ssh在远程目录中复制一个本地目录&nbsp;<br>tar cf - . | (cd /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接&nbsp;<br>find /home/user1 -name ‘<em>.txt’ | xargs cp -av –target-directory=/home/backup/ –parents 从一个目录查找并复制所有以 ‘.txt’ 结尾的文件到另一个目录&nbsp;<br>find /var/log -name ‘</em>.log’ | tar cv –files-from=- | bzip2 &gt; log.tar.bz2 查找所有以 ‘.log’ 结尾的文件并做成一个bzip包&nbsp;<br>dd if=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作&nbsp;<br>dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容&nbsp;  </p><p>**光盘&nbsp;**<br>cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force 清空一个可复写的光盘内容&nbsp;<br>mkisofs /dev/cdrom &gt; cd.iso 在磁盘上创建一个光盘的iso镜像文件&nbsp;<br>mkisofs /dev/cdrom | gzip &gt; cd_iso.gz 在磁盘上创建一个压缩了的光盘iso镜像文件&nbsp;<br>mkisofs -J -allow-leading-dots -R -V “Label CD” -iso-level 4 -o ./cd.iso data_cd 创建一个目录的iso镜像文件&nbsp;<br>cdrecord -v dev=/dev/cdrom cd.iso 刻录一个ISO镜像文件&nbsp;<br>gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - 刻录一个压缩了的ISO镜像文件&nbsp;<br>mount -o loop cd.iso /mnt/iso 挂载一个ISO镜像文件&nbsp;<br>cd-paranoia -B 从一个CD光盘转录音轨到 wav 文件中&nbsp;<br>cd-paranoia – “-3” 从一个CD光盘转录音轨到 wav 文件中（参数-3）&nbsp;<br>cdrecord –scanbus 扫描总线以识别scsi通道&nbsp;<br>dd if=/dev/hdc | md5sum 校验一个设备的md5sum编码，例如一张 CD&nbsp;  </p><p><strong>网络 - （以太网和WIFI无线</strong>）&nbsp;<br>ifconfig eth0 显示一个以太网卡的配置&nbsp;<br>ifup eth0 启用一个 ‘eth0’ 网络设备&nbsp;<br>ifdown eth0 禁用一个 ‘eth0’ 网络设备&nbsp;<br>ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制IP地址&nbsp;<br>ifconfig eth0 promisc 设置 ‘eth0’ 成混杂模式以嗅探数据包 (sniffing)&nbsp;<br>dhclient eth0 以dhcp模式启用 ‘eth0’&nbsp;<br>route -n show routing table&nbsp;<br>route add -net 0/0 gw IP_Gateway configura default gateway&nbsp;<br>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network ‘192.168.0.0/16’&nbsp;<br>route del 0/0 gw IP_gateway remove static route&nbsp;<br>echo “1” &gt; /proc/sys/net/ipv4/ip_forward activate ip routing&nbsp;<br>hostname show hostname of system&nbsp;<br>host www.example.com lookup hostname to resolve name to ip address and viceversa(1)&nbsp;<br>nslookup www.example.com lookup hostname to resolve name to ip address and viceversa(2)&nbsp;<br>ip link show show link status of all interfaces&nbsp;<br>mii-tool eth0 show link status of ‘eth0’&nbsp;<br>ethtool eth0 show statistics of network card ‘eth0’&nbsp;<br>netstat -tup show all active network connections and their PID&nbsp;<br>netstat -tupl show all network services listening on the system and their PID&nbsp;<br>tcpdump tcp port 80 show all HTTP traffic&nbsp;<br>iwlist scan show wireless networks&nbsp;<br>iwconfig eth1 show configuration of a wireless network card&nbsp;<br>hostname show hostname&nbsp;<br>host www.example.com lookup hostname to resolve name to ip address and viceversa&nbsp;<br>nslookup www.example.com lookup hostname to resolve name to ip address and viceversa&nbsp;<br>whois www.example.com lookup on Whois database&nbsp;</p><p><strong>JPS工具</strong></p><p>jps(Java Virtual Machine Process Status Tool)是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux/unix平台上简单察看当前java进程的一些简单情况。</p><p>&nbsp;&nbsp;&nbsp; 我想很多人都是用过unix系统里的ps命令，这个命令主要是用来显示当前系统的进程情况，有哪些进程，及其 id。 jps 也是一样，它的作用是显示当前系统的java进程情况，及其id号。我们可以通过它来查看我们到底启动了几个java进程（因为每一个java程序都会独占一个java虚拟机实例），和他们的进程号（为下面几个程序做准备），并可通过opt来查看这些进程的详细启动参数。</p><p>**&nbsp;&nbsp;&nbsp;&nbsp; 使用方法：在当前命令行下打 jps(需要JAVA_HOME，没有的话，到改程序的目录下打) 。**</p><p><strong>jps存放在JAVA_HOME/bin/jps，使用时为了方便请将JAVA_HOME/bin/加入到Path.</strong></p><p>$&gt; <strong>jps</strong><br>23991 Jps<br>23789 BossMain<br>23651 Resin</p><p>比较常用的参数：</p><p><strong>-q 只显示pid，不显示class名称,jar文件名和传递给main 方法的参数</strong><br>$&gt;&nbsp; <strong>jps -q</strong><br>28680<br>23789<br>23651</p><p><strong>-m 输出传递给main 方法的参数，在嵌入式jvm上可能是null</strong></p><p>$&gt; <strong>jps -m</strong><br>28715 Jps -m<br>23789 BossMain<br>23651 Resin -socketwait 32768 -stdout /data/aoxj/resin/log/stdout.log -stderr /data/aoxj/resin/log/stderr.log</p><p><strong>-l 输出应用程序main class的完整package名 或者 应用程序的jar文件完整路径名</strong></p><p>$&gt; <strong>jps -l</strong><br>28729 sun.tools.jps.Jps<br>23789 com.asiainfo.aimc.bossbi.BossMain<br>23651 com.caucho.server.resin.Resin</p><p><strong>-v 输出传递给JVM的参数</strong></p><p>$&gt; <strong>jps -v</strong><br>23789 BossMain<br>28802 Jps -Denv.class.path=/data/aoxj/bossbi/twsecurity/java/trustwork140.jar:/data/aoxj/bossbi/twsecurity/java/:/data/aoxj/bossbi/twsecurity/java/twcmcc.jar:/data/aoxj/jdk15/lib/rt.jar:/data/aoxj/jd</p><p>k15/lib/tools.jar -Dapplication.home=/data/aoxj/jdk15 -Xms8m<br>23651 Resin -Xss1m -Dresin.home=/data/aoxj/resin -Dserver.root=/data/aoxj/resin -Djava.util.logging.manager=com.caucho.log.LogManagerImpl -</p><p>Djavax.management.builder.initial=com.caucho.jmx.MBeanServerBuilderImpl</p><p><strong>sudo jps看到的进程数量最全</strong></p><p><strong>jps 192.168.0.77</strong></p><p><strong>列出远程服务器192.168.0.77机器所有的jvm实例，采用rmi协议，默认连接端口为1099</strong></p><p><strong>（前提是远程服务器提供jstatd服务）</strong></p><p><strong>注：jps命令有个地方很不好，似乎只能显示当前用户的java进程，要显示其他用户的还是只能用unix/linux的ps命令。</strong></p><p>详细情况请参考sun官方文档。<br><a target="_blank" rel="noopener" href="http://java.sun.com/j2se/1.5.0/docs/tooldocs/share/jps.html">http://java.sun.com/j2se/1.7.0/docs/tooldocs/share/jps.html</a></p><p>GO TOP INDEX ^&nbsp;<br>Microsoft Windows networks (SAMBA)&nbsp;<br>nbtscan ip_addr netbios name resolution&nbsp;<br>nmblookup -A ip_addr netbios name resolution&nbsp;<br>smbclient -L ip_addr/hostname show remote shares of a windows host&nbsp;<br>smbget -Rr smb://ip_addr/share like wget can download files from a host windows via smb&nbsp;<br>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share mount a windows network share</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近都在和Linux打交道，感觉还不错。我觉得Linux相比windows比较麻烦的就是很多东西都要用命令来控制，当然，这也是很多人喜欢linux的原因，比较短小但却功能强大。我将我了解到的命令列举一下，仅供大家参考：&lt;/p&gt;</summary>
    
    
    
    <category term="linux学习" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/linux%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="linux" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/linux/"/>
    
    <category term="命令" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>我的网站搭建记录（二）：Hexo篇</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/%E6%88%91%E7%9A%84%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9Ahexo%E7%AF%87/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/%E6%88%91%E7%9A%84%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9Ahexo%E7%AF%87/</id>
    <published>2019-05-07T18:26:00.000Z</published>
    <updated>2019-05-07T18:26:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>其实之前用过<code>wordpress</code>部署自己的博客系统，也一直觉得wp还是很适合我这种小白使用的，得益于丰富的插件，强大的后台管理，数不胜数的主题，wp深受大家的喜欢。但是wp的臃肿让我在后期使用中愈发觉得难以接受，而且完全依赖后台的写作方式也让我很是不爽，总觉得这种写博客的方式不是最佳的、可靠的。</p></blockquote><p>想了解<code>WordPress</code>的可以看这篇<a href="/hexo-theme-icarus/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/%E6%88%91%E7%9A%84%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9Awordpress%E7%AF%87/" title="我的网站搭建记录（一）：WordPress篇">我的网站搭建记录（一）：WordPress篇</a></p><p>一次翻阅docker文章的过程发现了<code>hexo</code>这个神物，当时没太留意，以为静态网页这种东西很麻烦，后来闲来无事决定体验以下<code>hexo</code>，一用果然升天了。本地部署写好了文章后<code>git</code>到任何地方这才是我要的体验啊，而且由于hexo生成的是全静态网站，托管和呈现就更加简单了，如果你想搭建一个自己的博客，强烈推荐<code>hexo</code>。</p><p><em><strong>什么是Hexo</strong></em>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <code>Markdown</code>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。并且有很多人为其制作了很多优秀的主题（<code>theme</code>）。我选择Hexo主要有以下五点:</p><ul><li>主题选择多而且美</li><li>一键部署</li><li>编译文章速度极快</li><li>丰富的插件</li><li>支持MarkDown话不多说，直接进入主题．</li></ul><h1 id="一、基础篇"><a href="#一、基础篇" class="headerlink" title="一、基础篇"></a>一、基础篇</h1><h2 id="Hexo的安装"><a href="#Hexo的安装" class="headerlink" title="Hexo的安装"></a>Hexo的安装</h2><p>因为我用的<code>debian9</code>的系统，安装这部分的内容，适合<code>linux</code>用户．<code>Windows</code>安装可以参考下面这二篇文章</p><p><a target="_blank" rel="noopener" href="https://zhuanlan.zhihu.com/p/26625249" title="https://zhuanlan.zhihu.com/p/26625249">GitHub+Hexo 搭建个人网站详细教程</a></p><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/gdutxiaoxu/article/details/53576018" title="https://blog.csdn.net/gdutxiaoxu/article/details/53576018">手把手教你用Hexo+Github 搭建属于自己的博客</a></p><p><em>PS：如果安装的<code>git</code>是绿色便携版请将目录添加到系统环境变量<code>path</code>中</em></p><h3 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h3><p>安装 Hexo 相当简单。最主要就是需要下面这二个软件</p><ul><li>Node.js</li><li>Git</li></ul><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>Debian下要先把<code>sh</code>改成<code>bash</code>,运行下面的命令，选择否。(Centos可以跳过这一步!)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg-reconfigure dash</span><br></pre></td></tr></tbody></table></figure><p><img src="http://cdn.pidaye.top/Hexo+Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%20---%20%E5%BF%83%E5%BE%97%E6%B1%87%E6%80%BB2018%E7%89%88%E5%AE%89%E8%A3%85%E7%AF%87%20%20%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E6%AD%A6%E5%99%A8.png" alt="Hexo+Github搭建自己的博客 --- 心得汇总2018版安装篇  思想就是武器">下载安装脚本并执行。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class="line">source /root/.bashrc</span><br><span class="line">nvm install stable</span><br></pre></td></tr></tbody></table></figure><p>测试安装环境是否准备好了</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br><span class="line">node -v</span><br></pre></td></tr></tbody></table></figure><p>运行安装命令</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mnt/blog</span><br><span class="line">cd /mnt/blog</span><br><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init</span><br></pre></td></tr></tbody></table></figure><p>这样就安装好了。简单吧！接下来就是把hexo运行起来。</p><p><em>备注：<code>/mnt/blog</code>这个目录，你可以改成你自己要安装的目录。</em></p><h3 id="运行hexo"><a href="#运行hexo" class="headerlink" title="运行hexo"></a>运行hexo</h3><p>注意：所有hexo命令都要在自己建的这个<code>blog</code>这个主目录来执行。</p><p><code>hexo g &amp;&amp; hexo s</code>这里说明一下hexo 的几个常用命令</p><p>命令简写</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init #初始化博客</span><br><span class="line">hexo g == hexo generate #生成博客</span><br><span class="line">hexo s == hexo server #启动服务预览</span><br><span class="line">hexo d == hexo deploy #部署</span><br></pre></td></tr></tbody></table></figure><p>常用命令：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line">hexo server -s #静态模式</span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></tbody></table></figure><p>测试<img src="http://cdn.pidaye.top/Hexo+Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%20---%20%E5%BF%83%E5%BE%97%E6%B1%87%E6%80%BB2018%E7%89%88%E5%AE%89%E8%A3%85%E7%AF%87%20%20%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E6%AD%A6%E5%99%A8.jpg" alt="Hexo+Github搭建自己的博客 --- 心得汇总2018版安装篇  思想就是武器"><em>注意：不要按<code>Ctrl+C</code> 关掉了</em></p><p>然后在浏览器出输入你的<code>IP</code>地址加<code>4000</code>端口号就可以正常看到了hexo了,如果端口号显示占用，请在<code>hexo s</code>后面加<code>-p 5000</code>或者其他端口．</p><p><em>备注：用Centos的同学记得要先把防火墙给关了。如何关闭Centos防火墙?百度一下吧</em></p><h2 id="主题（以Next为例）"><a href="#主题（以Next为例）" class="headerlink" title="主题（以Next为例）"></a>主题（以<code>Next</code>为例）</h2><p>Hexo主题是他的强项，网上有非常多的主题支持。都非常好看。想具体了解的话，可以看看这篇Hexo有哪些好看的主题?</p><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 <code>themes</code> 目录下， 然后修改下配置文件即可在这我们使用git克隆最新版</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/blog</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></tbody></table></figure><h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>将Next主题下载到blog目录的themes主题下的next文件夹中。打开站点的<code>_config.yml</code>配置文件，修改主题为next</p><p>然后打开主题的_config.yml配置文件，不是站点配置文件，找到Scheme Settings<img src="http://cdn.pidaye.top/Hexo+Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%20---%20%E5%BF%83%E5%BE%97%E6%B1%87%E6%80%BB2018%E7%89%88%E5%AE%89%E8%A3%85%E7%AF%87%20%20%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E6%AD%A6%E5%99%A812.jpg" alt="Hexo+Github搭建自己的博客 --- 心得汇总2018版安装篇  思想就是武器12"></p><p>next主题有三个样式，我用的是<code>Gemini</code>，你们可以自己试试看，选择你自己喜欢的样式(只需要把行首的#去除，#是注释)。然后执行</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s</span><br></pre></td></tr></tbody></table></figure><p>再在浏览器输入IP地址，就可以看到效果了。</p><blockquote><p>备注：这里需要注意一下_config.yml这个文件有二个。一个是站点根目录下有一个_config.yml，叫站点配置文件。另外一个是主题next目录下也有一个_config.yml，叫主题配置文件，不要搞错了。</p></blockquote><hr><h1 id="二、优化篇-next主题"><a href="#二、优化篇-next主题" class="headerlink" title="二、优化篇(next主题)"></a>二、优化篇(next主题)</h1><h2 id="改语言"><a href="#改语言" class="headerlink" title="改语言"></a>改语言</h2><h2 id="改首页描述"><a href="#改首页描述" class="headerlink" title="改首页描述"></a>改首页描述</h2><h2 id="添加标签分类界面（！）"><a href="#添加标签分类界面（！）" class="headerlink" title="添加标签分类界面（！）"></a>添加标签分类界面（！）</h2><h2 id="设置侧边栏设置圆形可旋转头像（设置头像）"><a href="#设置侧边栏设置圆形可旋转头像（设置头像）" class="headerlink" title="设置侧边栏设置圆形可旋转头像（设置头像）"></a>设置侧边栏设置圆形可旋转头像（设置头像）</h2><h2 id="点击出现桃心效果"><a href="#点击出现桃心效果" class="headerlink" title="点击出现桃心效果"></a>点击出现桃心效果</h2><p><img src="http://cdn.pidaye.top/Hexo-Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%20---%20%E5%BF%83%E5%BE%97%E6%B1%87%E6%80%BB2018%E7%89%88%EF%BC%88%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E7%AF%87%EF%BC%89%20%20%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E6%AD%A6%E5%99%A8.gif" alt="Hexo-Github搭建自己的博客 --- 心得汇总2018版（主题配置篇）  思想就是武器">设置方法：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a){function n(){c(".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}"),o(),r()}function r(){for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText="left:"+d[e].x+"px;top:"+d[e].y+"px;opacity:"+d[e].alpha+";transform:scale("+d[e].scale+","+d[e].scale+") rotate(45deg);background:"+d[e].color+";z-index:99999");requestAnimationFrame(r)}function o(){var t="function"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e){t&amp;&amp;t(),i(e)}}function i(e){var a=t.createElement("div");a.className="heart",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement("style");a.type="text/css";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName("head")[0].appendChild(a)}function s(){return"rgb("+~~(255*Math.random())+","+~~(255*Math.random())+","+~~(255*Math.random())+")"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);</span><br></pre></td></tr></tbody></table></figure><p>然后将里面的代码copy一下，新建<code>love.js</code>文件并且将代码复制进去，然后保存。</p><p>将<code>love.js</code>文件放到路径<code>themes/next/source/js/src</code>里面，然后打开<code>themes/next/layout/_layout.swig</code>文件,在末尾（在前面引用会出现找不到的bug）</p><p>添加以下代码：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h2><p><img src="http://cdn.pidaye.top/Hexo-Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%20---%20%E5%BF%83%E5%BE%97%E6%B1%87%E6%80%BB2018%E7%89%88%EF%BC%88%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E7%AF%87%EF%BC%89%20%20%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E6%AD%A6%E5%99%A8.jpg" alt="Hexo-Github搭建自己的博客 --- 心得汇总2018版（主题配置篇）  思想就是武器">设置方法：执行以下命令安装<code>RSS插件</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></tbody></table></figure><p>编辑网站根目录下的<code>_config.yml</code>，添加以下代码开启</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">feed:</span><br><span class="line">type: atom</span><br><span class="line">path: atom.xml</span><br><span class="line">limit: 20</span><br></pre></td></tr></tbody></table></figure><h2 id="结尾添加“文本结束”"><a href="#结尾添加“文本结束”" class="headerlink" title="结尾添加“文本结束”"></a>结尾添加“文本结束”</h2><p>设置效果：<img src="http://cdn.pidaye.top/Hexo-Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%20-23231--%20%E5%BF%83%E5%BE%97%E6%B1%87%E6%80%BB2018%E7%89%88%EF%BC%88%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E7%AF%87%EF%BC%89%20%20%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E6%AD%A6%E5%99%A8.jpg" alt="Hexo-Github搭建自己的博客 -23231-- 心得汇总2018版（主题配置篇）  思想就是武器"></p><p>设置方法：在路径<code>themes/next/layout/_macro</code>中新建<code>passage-end-tag.swig</code>文件,并添加以下内容：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    {% if not is_index %}</span><br><span class="line">        &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;</span><br><span class="line">            -------------本文结束</span><br><span class="line">            &lt;i class="fa fa-paw"&gt;&lt;/i&gt;</span><br><span class="line">            感谢您的阅读-------------</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    {% endif %}</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><p>接着打开<code>themes/next/layout/_macro/post.swig</code>文件，在<code>post-body</code>之后，<code>post-footer</code>之前添加如下代码,(大概在350行左右的位置)：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  {% if not is_index %}</span><br><span class="line">    {% include 'passage-end-tag.swig' %}</span><br><span class="line">  {% endif %}</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><p>然后打开主题配置文件<code>_config.yml</code>,在末尾添加：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></tbody></table></figure><blockquote><p>备注：如果文字显示乱码，请将文件编码改成utf-8格式；</p></blockquote><h2 id="修改结尾-标签"><a href="#修改结尾-标签" class="headerlink" title="修改结尾#标签"></a>修改结尾#标签</h2><h2 id="首页不显示全文-只显示预览"><a href="#首页不显示全文-只显示预览" class="headerlink" title="首页不显示全文(只显示预览)"></a>首页不显示全文(只显示预览)</h2><h2 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h2><h2 id="侧边栏推荐阅读"><a href="#侧边栏推荐阅读" class="headerlink" title="侧边栏推荐阅读"></a>侧边栏推荐阅读</h2><h2 id="添加联系方式"><a href="#添加联系方式" class="headerlink" title="添加联系方式"></a>添加联系方式</h2><h2 id="添加打赏功能"><a href="#添加打赏功能" class="headerlink" title="添加打赏功能"></a>添加打赏功能</h2><h2 id="显示阅读百分比"><a href="#显示阅读百分比" class="headerlink" title="显示阅读百分比"></a>显示阅读百分比</h2><h2 id="加入valine在线评论"><a href="#加入valine在线评论" class="headerlink" title="加入valine在线评论"></a>加入valine在线评论</h2><h2 id="显示文章热度（？）"><a href="#显示文章热度（？）" class="headerlink" title="显示文章热度（？）"></a>显示文章热度（？）</h2><h2 id="增加搜索侧边栏"><a href="#增加搜索侧边栏" class="headerlink" title="增加搜索侧边栏"></a>增加搜索侧边栏</h2><h3 id="1-在hexo的根目录下执行命令："><a href="#1-在hexo的根目录下执行命令：" class="headerlink" title="1.在hexo的根目录下执行命令："></a>1.在hexo的根目录下执行命令：</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></tbody></table></figure><h3 id="2-在根目录下的-theme-next-config-yml文件中添加配置"><a href="#2-在根目录下的-theme-next-config-yml文件中添加配置" class="headerlink" title="2.在根目录下的/theme/next/_config.yml文件中添加配置:"></a>2.在根目录下的/theme/next/_config.yml文件中添加配置:</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></tbody></table></figure><h3 id="3-在根目录下的-theme-next-config-yml文件中搜索local-search，将enable改为true："><a href="#3-在根目录下的-theme-next-config-yml文件中搜索local-search，将enable改为true：" class="headerlink" title="3.在根目录下的/theme/next/_config.yml文件中搜索local_search，将enable改为true："></a>3.在根目录下的/theme/next/_config.yml文件中搜索<code>local_search</code>，将<code>enable</code>改为<code>true</code>：</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></tbody></table></figure><hr><h1 id="三、高阶尝试"><a href="#三、高阶尝试" class="headerlink" title="三、高阶尝试"></a>三、高阶尝试</h1><h2 id="将hexo部署到Github"><a href="#将hexo部署到Github" class="headerlink" title="将hexo部署到Github"></a>将hexo部署到Github</h2><h3 id="去github网站去注册一个帐号"><a href="#去github网站去注册一个帐号" class="headerlink" title="去github网站去注册一个帐号"></a>去github网站去注册一个帐号</h3><p>创建账号这个我就不说了吧，自行百度。</p><h3 id="创建一个xxx-github-io的public仓库"><a href="#创建一个xxx-github-io的public仓库" class="headerlink" title="创建一个xxx.github.io的public仓库"></a>创建一个<code>xxx.github.io</code>的public仓库</h3><p><img src="http://cdn.pidaye.top/Hexo+Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%20---%20%E5%BF%83%E5%BE%97%E6%B1%87%E6%80%BB2018%E7%89%88%E5%AE%89%E8%A3%85%E7%AF%87%20%20%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E6%AD%A6%E5%99%A82.jpg" alt="Hexo+Github搭建自己的博客 --- 心得汇总2018版安装篇  思想就是武器2"><img src="http://cdn.pidaye.top/Hexo+Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%201221.jpg" alt="Hexo+Github搭建自己的博客 1221"></p><h3 id="安装-hexo-deployer-git"><a href="#安装-hexo-deployer-git" class="headerlink" title="安装 hexo-deployer-git"></a>安装 <code>hexo-deployer-git</code></h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure><p>网站配置git把网站的<code>_config.yml</code>配置文件拉到最后配置<code>deploy</code></p><p><img src="http://cdn.pidaye.top/Hexo+Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%20--%E6%B1%87%E6%80%BB2018%E7%89%88%E5%AE%89%E8%A3%85%E7%AF%87%20%20%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E6%AD%A6%E5%99%A8.jpg" alt="Hexo+Github搭建自己的博客 --汇总2018版安装篇  思想就是武器"></p><p><img src="http://cdn.pidaye.top/Hexo+Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A32432%E5%AE%A2%20---%20%E5%BF%83%E5%BE%97%E6%B1%87%E6%80%BB2018%E7%89%88%E5%AE%89%E8%A3%85%E7%AF%87%20%20%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E6%AD%A6%E5%99%A8.jpg" alt="Hexo+Github搭建自己的博32432客 --- 心得汇总2018版安装篇  思想就是武器"></p><p>然后在电脑上配置<code>git</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "你的GitHub用户名"</span><br><span class="line">git config --global user.email "你的GitHub注册邮箱"</span><br></pre></td></tr></tbody></table></figure><p>生成ssh密钥文件：运行之后什么都不用输入，直接按三次回车。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "你的GitHub注册邮箱"</span><br></pre></td></tr></tbody></table></figure><p>最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></tbody></table></figure><p>复制里面的内容，<img src="http://cdn.pidaye.top/Hexo+Github%E6%90%AD%E5%BB%BA32234%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%20---%20%E5%BF%83%E5%BE%97%E6%B1%87%E6%80%BB2018%E7%89%88%E5%AE%89%E8%A3%85%E7%AF%87%20%20%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E6%AD%A6%E5%99%A8.jpg" alt="Hexo+Github搭建32234自己的博客 --- 心得汇总2018版安装篇  思想就是武器"></p><p>打开你的github主页，进入<code>个人设置</code> -&gt; S<code>SH and GPG keys</code> -&gt; <code>New SSH key</code>：<img src="http://cdn.pidaye.top/Hexo+Github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A423432%E5%AE%A2%20---%20%E5%BF%83%E5%BE%97%E6%B1%87%E6%80%BB2018%E7%89%88%E5%AE%89%E8%A3%85%E7%AF%87%20%20%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E6%AD%A6%E5%99%A8.jpg" alt="Hexo+Github搭建自己的博423432客 --- 心得汇总2018版安装篇  思想就是武器"></p><p>大功告成输入这条命令将hexo部署到github</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></tbody></table></figure><p>最后在浏览器中输入xxxx.github.io这个网址就可以享受自己的劳动果实了。</p><blockquote><p>技巧： 在命令行输入alias up=’hexo clean &amp;&amp; hexo g &amp;&amp; hexo d’ 这样以后直接输入up。就可以把hexo部署到github上了。</p></blockquote><h2 id="将hexo静态网站部署到七牛云"><a href="#将hexo静态网站部署到七牛云" class="headerlink" title="将hexo静态网站部署到七牛云"></a>将hexo静态网站部署到七牛云</h2><blockquote><p>一直有关注过七牛云。它的访问统计分析和CND加速功能让我很心动。正好之前用的服务器也快到期了。所以尝试着把博客部署到七牛云上。下面介绍一下将Hexo生成的页面部署到七牛云</p></blockquote><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p><a target="_blank" rel="noopener" href="https://www.qiniu.com/">七牛云</a>：</p><ul><li>  七牛云是云服务商，为用户提供免费的存储空间，CND加速，图片处理等功能。</li><li>  注册七牛云，实名认证，创建储存空间，绑定域名，融合CDN，缓存设置等这里就不赘述了。</li></ul><p><a target="_blank" rel="noopener" href="https://developer.qiniu.com/kodo/tools/1302/qshell">qshell</a>：</p><ul><li>  shell是七牛提供的命令行上传工具，可以将本地的文件快速上传到七牛云</li></ul><p><a target="_blank" rel="noopener" href="https://hexo.io/zh-cn/">Hexo</a>：</p><ul><li>  这个不用多说大家都知道是博客框架</li></ul><h3 id="安装使用qshell"><a href="#安装使用qshell" class="headerlink" title="安装使用qshell"></a>安装使用qshell</h3><p><a target="_blank" rel="noopener" href="http://devtools.qiniu.com/qshell-v2.3.6.zip">qshell下载</a></p><p>下面介绍<code>Mac</code>系统下的安装和使用方法，其它系统可以参考<a target="_blank" rel="noopener" href="https://github.com/qiniu/qshell#%E5%AE%89%E8%A3%85">文档</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>该工具由于是命令行工具，所以只需要从上面的下载之后即可使用。其中文件名和对应系统关系如下：</p><p>文件名|描述-|-qshell_linux_x86|Linux 32位系统qshell_linux_x64|Linux 64位系统qshell_windows_x86.exe|Windows 32位系统qshell_windows_x64.exe|Windows 64位系统qshell_darwin_x64|Mac 64位系统，主流的系统</p><p>1）权限： 如果在Linux或者Mac系统上遇到<code>Permission Denied</code>的错误，请使用命令 <code>chmod +x qshell_darwin_x64</code> 来为文件添加可执行权限。<code>qshell_darwin_x64</code> 是上面的文件名，各个系统不一样</p><p>2）任何位置运行 对于Linux或者Mac，如果希望能够在任何位置都可以执行，那么可以把qshell所在的目录加入到环境变量<code>$PATH</code>中去。假设qshell命令被解压到路径<code>/Users/coder/Downloads</code>目录下面，那么我们可以把如下的命令写入到你所使用的bash所对应的配置文件中，如果是<code>/bin/bash</code>，那么就是<code>&lt;sub&gt;/.bashrc</code>文件，如果是<code>/bin/zsh</code>，那么就是<code>&lt;/sub&gt;/.zshrc</code>文件中。写入的内容为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:/Users/coder/Downloads</span><br></pre></td></tr></tbody></table></figure><p>保存完毕之后，可以通过两种方式立即生效，其一为输入<code>source ~/.zshrc</code>或者<code>source ~/.bashrc</code>来使配置立即生效，或者完全关闭命令行，然后重新打开一个即可，接下来就可以在任何位置使用<code>qshell</code>命令了。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>添加密钥和账户名称</p><p>该工具有两类命令，一类需要鉴权，另一类不需要。需要鉴权的命令都需要依赖七牛账号下的 <code>AccessKey</code>, <code>SecretKey</code>和 <code>Name</code>。所以这类命令运行之前，需要使用 <code>account</code> 命令来添加 <code>AccessKey</code> ，<code>SecretKey</code>和<code>Name</code> 。 <code>Name</code>是用户可以自定义的字符串，用来唯一表示<code>AccessKey/SecretKey</code>账户，qshell会对添加的每一个账户信息加密保存，可以使用自命令user进行切换，切换账户的时候，需要使用账户唯一标识 Name。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ qshell account &lt;Your AccessKey&gt; &lt;Your SecretKey&gt; &lt;Your Name&gt;</span><br></pre></td></tr></tbody></table></figure><p>其中name表示该账号的名称, 如果<code>ak</code>, <code>sk</code>, <code>name</code>首字母是<code>"-"</code>, 需要使用如下的方式添加账号, 这样避免把该项识别成命令行选项:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ qshell account -- &lt;Your AccessKey&gt; &lt;Your SecretKey&gt; &lt;Your Name&gt;</span><br></pre></td></tr></tbody></table></figure><p>添加完账户后，就可以使用qshell上传，下载文件了</p><p>更详细的信息也可以参考文档<a target="_blank" rel="noopener" href="https://github.com/qiniu/qshell">传送门</a></p><h3 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h3><p>现在我们可以在Hexo项目的根目录下创建<code>upload.conf</code>文件</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  // 这个地址是根目录地址，不可使用相对路径</span><br><span class="line">  "src_dir": "/Users/coder/7coder/7coder-blog/public",</span><br><span class="line">  // 储存空间名称</span><br><span class="line">  "bucket": "7coder",</span><br><span class="line">  // 是否覆盖</span><br><span class="line">  "overwrite" : true,</span><br><span class="line">  // 检查新增文件</span><br><span class="line">  "rescan_local" : true</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><em>如果是windows系统请使用以下指令</em></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  "src_dir": "D:\\Users\\coder\\7coder\\7coder-blog\\public",</span><br><span class="line">  "bucket": "7coder",</span><br><span class="line">  "overwrite" : true,</span><br><span class="line">  "rescan_local" : true</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>Hexo生成的静态页面全部放在public文件夹下，所以<code>src_dir</code>应当是要以<code>/public</code>结尾的。</p><p>接下来可以使用<code>qshell</code>来上传文件了</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qshell qupload upload.conf</span><br></pre></td></tr></tbody></table></figure><p>执行后就会打印出同步的文件，然后访问你的空间域名就可以了。</p><p>关于qupload命令可以阅读详细文档<a target="_blank" rel="noopener" href="https://github.com/qiniu/qshell/blob/master/docs/qupload.md">传送门</a></p><p>今后写完博客只需下面两条命令就可以完成部署了</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">qshell qupload upload.conf</span><br></pre></td></tr></tbody></table></figure><p>windows下直接双击脚本即可</p><h3 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h3><p>我们的目的是实现一键部署，但是上面使用了两条命令才搞定。</p><p>打开Hexo下的package.json，填入以下代码</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"scripts":{</span><br><span class="line">    "publish": "hexo generate &amp;&amp; qshell qupload upload.conf"</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><p>今后只需要 <code>npm run publish</code> 就可实现一键打包部署到七牛云啦~</p><h3 id="附"><a href="#附" class="headerlink" title="附"></a>附</h3><ul><li>  如果上传成功但是访问无变化，可能是七牛的缓存原因。可以前往<code>域名管理</code>修改缓存配置</li><li>  七牛云的默认访问会在域名后拼上<code>/index.html</code>,可以前往空间设置开启默认首页</li><li>在写文章的过程中，有时候需要引用站内的其他文章。可以通过内置的标签插件的语法<code>post_link</code>来实现引用。  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% post_link 文章文件名（不要后缀） 文章标题（可选） %}</span><br></pre></td></tr></tbody></table></figure>  举例 引用 Hello.md  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% post_link Hello %}</span><br></pre></td></tr></tbody></table></figure>  或者  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% post_link Hello 你好 %}</span><br></pre></td></tr></tbody></table></figure><h2 id="hexo图片编辑自动上传七牛图库"><a href="#hexo图片编辑自动上传七牛图库" class="headerlink" title="hexo图片编辑自动上传七牛图库"></a>hexo图片编辑自动上传七牛图库</h2></li></ul><blockquote><p>此应用方式是将七牛静态网站和图片分别保存，方便管理，因此图片存储我专门又建了一个公开空间，然后用另外的二级域名实现cdn加速</p></blockquote><p>众所周知hexo文章支持markdown编辑，大大方便了文章的编写，但是图片存储的问题是我们比较棘手的，我这里给大家推荐下我目前在用的方式，仅供参考，基本实现了自动上传，还是十分方便的；</p><h3 id="使用hexo-admin管理网站"><a href="#使用hexo-admin管理网站" class="headerlink" title="使用hexo-admin管理网站"></a>使用hexo-admin管理网站</h3><p>hexo没有图形化的后台管理界面，这个是大家不太习惯的地方，好在hexo插件丰富，这里推荐hexo-admin来实现图形化后台，主要用于建立post，好像其他的功能也都容易抽猝：</p><blockquote><p>注：如果你跟我一样嫌(tai)麻(lan)烦(le)的话，那么利用Hexo-admin插件，加上自己部分diy，也许一个自己比较满意的Hexo博客发布方式就到手了，岂不是一大爽事。</p></blockquote><blockquote><p>就是这个feel~倍儿爽</p></blockquote><p>反正我就是懒，不要拉我，让我懒。其实有时候这种“懒”往往能促使人进步，如果不嫌麻烦甘于重复劳动，虽然会少掉很多折腾，但也会少掉很多发现和进步。<br>好了，鸡汤喝完，该说正事儿了。</p><p><strong>hexo-admin官网</strong><br><a target="_blank" rel="noopener" href="https://link.jianshu.com/?t=https://jaredforsyth.com/hexo-admin/">https://jaredforsyth.com/hexo-admin/</a></p><h4 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h4><p>安装必要环境：<code>NodeJs</code>、<code>Hexo-cli</code>、<code>Hexo</code>等</p><h4 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h4><p>初始化博客，一般到这里你应该是已经初始化自己的博客了，如果还没有的话，请看下面</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">hexo init yourblog</span><br><span class="line">cd yourblog</span><br><span class="line">npm install</span><br></pre></td></tr></tbody></table></figure><h4 id="step-3"><a href="#step-3" class="headerlink" title="step 3"></a>step 3</h4><p>安装hexo-admin插件，并且启动hexo服务，打开浏览器访问能看到基本的界面</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br><span class="line">hexo server -d</span><br><span class="line">open http://localhost:4000/admin/</span><br></pre></td></tr></tbody></table></figure><p><strong>登录界面</strong>  </p><p><img src="http://cdn.pidaye.top/5548926-76381c3b23a04058.png%201000%C3%97323.webp" alt="5548926-76381c3b23a04058.png 1000×323"></p><p>到这里，没进行配置的小伙伴可能还无法登录，请接着往下看。</p><h4 id="step-4"><a href="#step-4" class="headerlink" title="step 4"></a>step 4</h4><p>在hexo的_config.yml配置hexo-admin</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">admin:</span><br><span class="line">   username: zoro</span><br><span class="line">   password_hash:be121740bf988b2225a313fa1f107ca1</span><br><span class="line">   secret: hey hexo</span><br><span class="line">   deployCommand: './admin_script/hexo-generate.sh'</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注1、password_hash就是密码，通过bcrypt hash，你可以用尽你一切手段对自己的密码做一个bcrypt加密，C/Java/Python都可以，做人嘛，重要的是嗨森；<br>2、secret用以cookies安全；<br>3、deployCommand就是一个关键点，不要着急，下面给出说明；</p></blockquote><p><strong>主页</strong>  </p><p><img src="//upload-images.jianshu.io/upload_images/5548926-cfba47671e9c6e9e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp"></p><ul><li>  Post：博客文章列表，包括已经发布的和还在草稿箱等待宠幸的；</li><li>  Pages：就是诸如标签云之类的页面管理；</li><li>  About：关于admin插件的说明</li><li>  hexo-gen：这个原来是Deploy，被我修改了，关键节点；</li><li>  Settings:配置；</li></ul><h4 id="step-5"><a href="#step-5" class="headerlink" title="step 5"></a>step 5</h4><p>先解释一下上面配置的那个<code>deployCommand</code>的用处，目的在于页面上你点击了Deploy页面下面的Deploy按钮的时候，所执行的脚本，这里格子拿它来作为执行<code>hexo g</code>的载体。<br>说到这里，可能有些人不是很理解为什么要这么做，看官莫急，听我细细道来。<br>其实，当你以<code>hexo server -d</code>启动了hexo服务的时候，hexo-admin插件在你修改了 某篇博已发布博客，或者新发布博客的时候，会在后台帮你执行一系列操作，所以这个时候，你可以通过<code>http://localhost:4000</code>访问就可以看到刚才发布到博客了，看到这里，有读者应该就要心里问候：那你是不是傻，为什么还要折腾？容我说一句，原因只有一点：以<code>hexo server</code>启动的hexo对外提供的服务，并不是特别稳定，访问略慢，毕竟不是专门的web服务容器，而且如果你不以<code>nohup</code>方式启动的话，一旦关掉Xshell等操作界面的时候，就会被迫关掉，所以带来了一系列令人不喜的体验，这就是我折腾的唯一原因。<br>因此，其实格子是以Nginx为web服务容器对外提供博客服务，每次将新博客生成静态Html放到Nginx配置的目录下，速度不要太快；格子的云主机只有<code>1G内存 单核CPU</code>,还是能有不俗的访问体验，所以觉得还算没白折腾。  </p><p>所以，<strong>重点</strong>来了，在_config.yml里面填写好deployCommand的存储路径之后，在该路径下生成脚本；</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch hexo-generate.sh;</span><br><span class="line">vim hexo-generate.sh;</span><br></pre></td></tr></tbody></table></figure><p>输入以下内容</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env sh</span><br><span class="line">hexo g</span><br></pre></td></tr></tbody></table></figure><p>保存退出，并赋予执行权限</p><p>执行Shift+:，输入q，如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:q</span><br><span class="line">chmod +x hexo-generate.sh</span><br></pre></td></tr></tbody></table></figure><h4 id="step-6"><a href="#step-6" class="headerlink" title="step 6"></a>step 6</h4><p>验证效果，可以先行验证是否有效果<br>1、启动hexo server<br>2、访问<code>http://localhost:4000/admin</code>并登陆<br>3、进入<code>Posts</code>页面，新建博客并编写发布；<br>4、进入<code>Deploy</code>页面（如果你还没改掉改名称的话），点击下面的Deploy按钮<br>5、进入博客目录<code>-&gt;public</code>，查看相应的html是否有生成，如果有，那么恭喜你成功了。</p><h3 id="使用atom编写markdown文章"><a href="#使用atom编写markdown文章" class="headerlink" title="使用atom编写markdown文章"></a>使用atom编写markdown文章</h3><p>上一个步骤实现了后台管理，虽然hexo-admin可以发布和编辑文章，但是为了更加专注写作和保障稳定性，现在给大家介绍一个编辑工具<code>Atom</code>，这个工具不仅解决了编辑，同时也解决了图片上传的问题，这个才是我们重点要解决的问题：</p><h4 id="step-1-1"><a href="#step-1-1" class="headerlink" title="step 1"></a>step 1</h4><p>准备一个七牛空间，专门用于图片存储的，详细步骤可参考<code>七牛cdn</code>，这里给大家看看效果吧：<img src="http://cdn.pidaye.top/Clipboard%20-%202019-05-20%2016.41.09.png" alt="Clipboard - 2019-05-20 16.41.09">这一步是建立一个cdn对象存储空间，用于存放图片和cdn加速,这里需要记住你的空间名称如：<code>blog</code>和域名如：<code>XXX.XXX.com</code>；<img src="http://cdn.pidaye.top/Clipboard%20-%202019-05-20%2016.42.14.png" alt="Clipboard - 2019-05-20 16.42.14">如上图得到我们的秘钥，即<code>AK</code>、<code>SK</code>，这里后面需要用到；</p><h4 id="step-2-1"><a href="#step-2-1" class="headerlink" title="step 2"></a>step 2</h4><p>下载<code>atom</code>，官网地址(可能需要出国)：<a target="_blank" rel="noopener" href="https://atom.io/">Atom官网</a></p><h4 id="step-3-1"><a href="#step-3-1" class="headerlink" title="step 3"></a>step 3</h4><p>下载安装后这里要安装一个扩展插件，<code>Markdown Preview Enhanced</code><img src="http://cdn.pidaye.top/Clipboard%20-%202019-05-20%2016.51.53.png" alt="Clipboard - 2019-05-20 16.51.53"></p><p>这个插件的功能就是实现将本地图片文件自动<code>upload</code>到七牛空间中，而且是拖动文件就能实现哦，是不是很方便；</p><p><img src="http://cdn.pidaye.top/Clipboard%20-%202019-05-20%2016.49.49.png" alt="Clipboard - 2019-05-20 16.49.49"></p><blockquote><p>注：</p></blockquote><ul><li>  在Image Upload这一项选择qiniu</li><li>  Qiniu AccessKey填上你的AK</li><li>  Qiniu SecretKey填上你的SK</li><li>  Qiniu Bucket填上你的空间名称</li><li>  Qiniu Domain填上你的cdn域名</li></ul><p>ok，enjoy it！</p><h2 id="hexo开机启动"><a href="#hexo开机启动" class="headerlink" title="hexo开机启动"></a>hexo开机启动</h2><blockquote><p>Hexo安装hexo-admin组件以后，所有的操作都可以在浏览器中轻松完成了，但是有一个问题就是每次开机都需要运行一次<code>hexo s</code></p></blockquote><h3 id="windows下配置开机启动"><a href="#windows下配置开机启动" class="headerlink" title="windows下配置开机启动"></a>windows下配置开机启动</h3><p>为了更方便的使用，寻找一种可以开机启动<code>hexo server</code>的方法，通过脚本实现。<br>需要创建2个脚本，一个为<code>vbs</code>脚本，一个为<code>bat</code>脚本。</p><p>vbs脚本放到启动文件夹，用于运行bat脚本，而bat脚本用于启动<code>hexo server</code></p><h4 id="创建vbs脚本"><a href="#创建vbs脚本" class="headerlink" title="创建vbs脚本"></a>创建vbs脚本</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set ws=WScript.CreateObject("WScript.Shell")</span><br><span class="line">ws.Run "E:\\WorkSpace\\webProject\\Hexo-blog\\hexo-server.bat /start",0</span><br></pre></td></tr></tbody></table></figure><h4 id="创建bat脚本"><a href="#创建bat脚本" class="headerlink" title="创建bat脚本"></a>创建bat脚本</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">E:</span><br><span class="line">cd E:/WorkSpace/webProject/Hexo-Blog</span><br><span class="line">hexo s -d</span><br></pre></td></tr></tbody></table></figure><h4 id="将vbs脚本放到启动文件夹"><a href="#将vbs脚本放到启动文件夹" class="headerlink" title="将vbs脚本放到启动文件夹"></a>将vbs脚本放到启动文件夹</h4><p>win10 启动文件夹目录为<br><code>C:\Users\你的用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code></p><p>这样就能实现开机启动hexo server了，剩下的一切都可以交给<code>浏览器</code>和<code>hexo-admin</code>了。如果使用七牛，则可以使用<a target="_blank" rel="noopener" href="https://github.com/xbotao/hexo-admin">hexo-admin with qiniu</a></p><h2 id="电脑重装后如何恢复hexo"><a href="#电脑重装后如何恢复hexo" class="headerlink" title="电脑重装后如何恢复hexo"></a>电脑重装后如何恢复hexo</h2><p>电脑重装系统后需要恢复hexo的安装状态，这就需要重新配置环境和安装hexo了；</p><h3 id="安装基础环境"><a href="#安装基础环境" class="headerlink" title="安装基础环境"></a>安装基础环境</h3><p>1、重新安装配置Node.js环境</p><ul><li>  下载node</li><li>  查看node和npm版本</li></ul><p>2、git环境安装确认</p><ul><li>  下载安装git</li><li>  关联GitHub<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo --save</span><br><span class="line">hexo -v</span><br></pre></td></tr></tbody></table></figure>安装相应的依赖<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></tbody></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;其实之前用过&lt;code&gt;wordpress&lt;/code&gt;部署自己的博客系统，也一直觉得wp还是很适合我这种小白使用的，得益于丰富的插件，强大的后台管理，数不胜数的主题，wp深受大家的喜欢。
但是wp的臃肿让我在后期使用中愈发觉得难以接受，而且完全依</summary>
      
    
    
    
    <category term="网站搭建" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="hexo" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/hexo/"/>
    
    <category term="静态网站" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>软件推荐：我用的软件清单，整理备份下</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/uncategorized/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90%EF%BC%9A%E6%88%91%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%B8%85%E5%8D%95%EF%BC%8C%E6%95%B4%E7%90%86%E5%A4%87%E4%BB%BD%E4%B8%8B/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/uncategorized/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90%EF%BC%9A%E6%88%91%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%B8%85%E5%8D%95%EF%BC%8C%E6%95%B4%E7%90%86%E5%A4%87%E4%BB%BD%E4%B8%8B/</id>
    <published>2019-05-07T18:25:00.000Z</published>
    <updated>2019-05-07T18:25:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作相关"><a href="#工作相关" class="headerlink" title="工作相关"></a>工作相关</h1><ul><li>调试工具<ul><li>微创<ul><li>  视频监控系统管理软件</li><li>  EMS升级程序</li></ul></li><li>远程工具<ul><li>  TeamViewer 14</li><li>  AnyDesk</li></ul></li><li>  MobaXterm_Personal</li><li>  Xshell</li><li>  WinSCP</li><li>  putty</li><li>  设备网络搜索</li></ul></li><li>  投影工具：ApowerMirror</li><li>  彩页绘图：CorelDRAW X7</li><li>  CAD绘图：ZWCAD</li></ul><h1 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h1><ul><li>adobe全家福<ul><li>  PDF编辑器：Adobe Acrobat X Pro</li><li>  视频剪辑：Adobe Premiere Pro</li><li>  图片调色：Lightroom</li><li>  P图软件：Photoshop</li></ul></li><li>影音娱乐<ul><li>音乐播放器<ul><li>  AIRPLAY</li><li>  foobar2000</li><li>  LYPlayer</li></ul></li><li>  视频播放器：PotPlayer</li><li>  浏览器：360极速浏览器</li></ul></li><li>即时聊天<ul><li>  DingTalk</li><li>  TIM</li><li>  微信</li></ul></li><li>  邮箱：Foxmail</li><li>下载工具<ul><li>  IDM</li><li>  迅雷5</li></ul></li><li>OCR文字识别<ul><li>  天若OCR文字识别</li><li>  ABBYY FineReader 12</li></ul></li><li>文档<ul><li>  WPS</li><li>  Microsoft Office</li></ul></li><li>  虚拟机：VMware Workstation Pro</li><li>  广告过滤：ADSafe</li><li>  百度网盘</li></ul><h1 id="个人爱好"><a href="#个人爱好" class="headerlink" title="个人爱好"></a>个人爱好</h1><ul><li>编程<ul><li>  Atom</li><li>  JetBrains PyCharm Community Edition</li></ul></li><li>影音美学<ul><li>  图片收集：Eagle</li><li>  录屏：Bandicam</li><li>  轻剪辑：Bandicut</li><li>  字体：HelloFont</li><li>  取色：ColorCube</li><li>  GIF生成：Ulead GIF Animator</li><li>  美图秀秀</li><li>  美图秀秀批处理</li><li>  PPT插件：islide</li><li>  绘图：亿图图示专家</li></ul></li><li>笔记逻辑<ul><li>  印象笔记</li><li>  XMind 8</li><li>  Onenote</li><li>  有道云笔记</li><li>  幕布</li></ul></li><li>趣味折腾<ul><li>  RSS订阅：irreader</li><li>  网盘管理：RaiDrive</li><li>  梯子：SSTap-beta</li><li>  地图慧</li><li>  文档编辑器：Notepad++</li><li>  订票助手</li><li>  FTP服务：Home Ftp Server</li><li>  鼠标手势：StrokesPlus</li></ul></li></ul><h1 id="电脑优化"><a href="#电脑优化" class="headerlink" title="电脑优化"></a>电脑优化</h1><ul><li>清理<ul><li>  Dism++</li><li>  CCleaner</li></ul></li><li>  傲梅轻松备份专业版</li><li>  金山数据恢复大师</li><li>同步助手<ul><li>  FreeFileSync</li><li>  RealTimeSync</li></ul></li><li>  CPU调整：ParkControl</li><li>  大白菜超级U盘启动盘制作工具</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作相关&quot;&gt;&lt;a href=&quot;#工作相关&quot; class=&quot;headerlink&quot; title=&quot;工作相关&quot;&gt;&lt;/a&gt;工作相关&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;调试工具&lt;ul&gt;
&lt;li&gt;微创&lt;ul&gt;
&lt;li&gt;  视频监控系统管理软件&lt;/li&gt;
&lt;li&gt;  EMS升级程序&lt;</summary>
      
    
    
    
    
    <category term="软件" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="推荐" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习记录（一）：Linux 中各个文件夹的作用</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/linux%E5%AD%A6%E4%B9%A0/linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9Alinux-%E4%B8%AD%E5%90%84%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/linux%E5%AD%A6%E4%B9%A0/linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9Alinux-%E4%B8%AD%E5%90%84%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E4%BD%9C%E7%94%A8/</id>
    <published>2019-05-07T18:24:00.000Z</published>
    <updated>2019-05-07T18:24:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 中各个文件夹的作用，包含了/、/boot、/sbin、/bin、/lib、/dev、/home、/root、/etc、/usr、/proc、/opt、/mnt、/media、/var、/tmp、/lost+found等各种路径，可以了解各个文件夹内存放的文件的作用。</p><span id="more"></span><p><strong>/ &nbsp;根目录</strong></p><p>　　包含了几乎所的文件目录。相当于中央系统。进入的最简单方法是：cd /。</p><p><strong>/boot &nbsp;引导程序，内核等存放的目录</strong></p><p>这个目录，包括了在引导过程中所必需的文件。在最开始的启动阶段，通过引导程序将内核加载到内存，完成内核的启动（这个时候，<a target="_blank" rel="noopener" href="https://www.baidu.com/s?wd=%E8%99%9A%E6%8B%9F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvn1-WuymsPHw-m1DdP1ck0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EP1f4P1RLPWc">虚拟文件系统</a>还不存在，加载的内核虽然是从硬盘读取的，但是没经过Linux的<a target="_blank" rel="noopener" href="https://www.baidu.com/s?wd=%E8%99%9A%E6%8B%9F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvn1-WuymsPHw-m1DdP1ck0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EP1f4P1RLPWc">虚拟文件系统</a>，这是比较底层的东西来实现的。然后内核自己创建好<a target="_blank" rel="noopener" href="https://www.baidu.com/s?wd=%E8%99%9A%E6%8B%9F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvn1-WuymsPHw-m1DdP1ck0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EP1f4P1RLPWc">虚拟文件系统</a>，并且从虚拟文件系统的其他子目录中（例如/sbin 和 /etc加载需要在开机启动的其他程序或者服务或者特定的动作（部分可以由用户自己在相应的目录中修改相应的文件来配制。如果我们的机器中包含多个操作系统，那么可以通过修改这个目录中的某个配置文件（例如grub.conf来调整启动的默认操作系统，系统启动的择菜单，以及启动延迟等参数。  </p><p><strong>/sbin &nbsp;<a target="_blank" rel="noopener" href="https://www.baidu.com/s?wd=%E8%B6%85%E7%BA%A7%E7%94%A8%E6%88%B7&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvn1-WuymsPHw-m1DdP1ck0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EP1f4P1RLPWc">超级用户</a>可以使用的命令的存放目录</strong></p><p>存放大多涉及<a target="_blank" rel="noopener" href="https://www.baidu.com/s?wd=%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvn1-WuymsPHw-m1DdP1ck0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EP1f4P1RLPWc">系统管理</a>的命令（例如引导系统的init程序，是超级权限用户root的可执行命令存放地，普通用户无权限执行这个目录下的命令（但是有时普通用户也可能会用到。）我们要记住，凡是目录sbin中包含的都是<a target="_blank" rel="noopener" href="https://www.baidu.com/s?wd=root%E6%9D%83%E9%99%90&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvn1-WuymsPHw-m1DdP1ck0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EP1f4P1RLPWc">root权限</a>才能执行的。</p><p><strong>/bin &nbsp;普通用户可以使用的命令的存放目录</strong><br>系统所需要的那些命令位于此目录，比如ls、cp、mkdir等命令；类似的目录还/usr/bin，/usr/local/bin等等。这个目录中的文件都是可执行的、普通用户都可以使用的命令。作为基础系统所需要的最基础的命令就是放在这里。</p><p><strong>/lib &nbsp;根目录下的所程序的共享库目录</strong><br>此目录下包含系统引导和在根用户执行命令时候所必需用到的共享库。做个不太好但是比较形象的比喻，点类似于Windows上面的system32目录。理说，这里存放的文件应该是/bin目录下程序所需要的库文件的存放地，也不排除一些例外的情况。类似的目录还/usr/lib，/usr/local/lib等等。</p><p><strong>/dev&nbsp;设备文件目录</strong><br>在Linux中设备都是以文件形式出现，这里的设备可以是硬盘，键盘，鼠标，网卡，终端，等设备，通过访问这些文件可以访问到相应的设备。设备文件可以使用mknod命令来创建；而为了将对这些设备文件的访问转化为对设备的访问，需要向相应的设备提供设备驱动模块（一般将设备驱动编译之后，生成的结果是一个*.ko类型的二进制文件，在内核启动之后，再通过insmod等命令加载相应的设备驱动之后，我们就可以通过设备文件来访问设备了。一般来说，想要Linux系统支持某个设备，需要 相应的硬件设备，支持硬件的驱动模块，以及相应的设备文件。</p><p><strong>/home &nbsp;普通用户的家目录</strong><br>在Linux机器上，用户主目录通常直接或间接地置在此目录下。其结构通常由本地机的管理员来决定。通常而言，系统的每个用户都自己的家目录，目录以用户名作为名字存放在/home下面（例如quietheart用户，其家目录的名字为/home/quietheart。该目录中保存了绝大多数的用户文件(用户自己的配置文件，定制文件，文档，数据等)，  </p><p><strong>/root &nbsp;用户root的$HOME目录</strong><br>系统管理员(就是root用户或超级用户)的主目录比较特殊，不存放在/home中，而是直接放在/root目录下了。</p><p><strong>/etc&nbsp;全局的配置文件存放目录。</strong><br>系统和程序一般都可以通过修改相应的配置文件，来进行配置。例如，要配置系统开机的时候启动那些程序，配置某个程序启动的时候显示什么样的风格等等。通常这些配置文件都集中存放在/etc目录中，所以想要配置什么东西的话，可以在/etc下面寻找我们可能需要修改的文件。</p><p><strong>1. /etc/rc或/etc/rc.d或/etc/rc?.d</strong><br>启动、或改变运行级时运行的脚本或脚本的目录。<br><strong>2. /etc/passwd</strong><br>用户数据库，其中的域给出了用户名、真实姓名、用户起始目录、加密口令和用户的其<br>他信息。<br><strong>3. /etc/fdprm</strong><br>软盘参数表，用以说明不同的软盘格式。可用setfdprm 进行设置。更多的信息见setfdprm<br>的帮助页。<br><strong>4. /etc/fstab</strong><br>指定启动时需要自动安装的文件系统列表。也包括用swapon -a启用的s w a p区的信息。<br><strong>5. /etc/group</strong><br>类似/etc/passwd ，但说明的不是用户信息而是组的信息。包括组的各种数据。<br><strong>6. /etc/inittab</strong><br>init 的配置文件。<br><strong>7. /etc/issue</strong><br>包括用户在登录提示符前的输出信息。通常包括系统的一段短说明或欢迎信息。具体内<br>容由系统管理员确定。<br><strong>8. /etc/magic</strong><br>“file”的配置文件。包含不同文件格式的说明，“file”基于它猜测文件类型。<br><strong>9. /etc/motd</strong><br>motd是message of the day的缩写，用户成功登录后自动输出。内容由系统管理员确定。<br>常用于通告信息，如计划关机时间的警告等。<br><strong>10. /etc/mtab</strong><br>当前安装的文件系统列表。由脚本(scritp)初始化，并由mount 命令自动更新。当需要一<br>个当前安装的文件系统的列表时使用(例如df 命令)。<br><strong>11. /etc/shadow</strong><br>在安装了影子(shadow)口令软件的系统上的影子口令文件。影子口令文件将/etc/passwd<br>文件中的加密口令移动到/etc/shadow中，而后者只对超级用户(root)可读。这使破译口令更困<br>难，以此增加系统的安全性。<br><strong>12. /etc/login.defs</strong><br>login命令的配置文件。<br><strong>13. /etc/printcap</strong><br>类似/etc/termcap ，但针对打印机。语法不同。<br><strong>14. /etc/profile/etc/csh.login、/etc/csh.cshrc</strong><br>登录或启动时bourne或c shells执行的文件。这允许系统管理员为所有用户建立全局缺省环境。<br><strong>15. /etc/securetty</strong><br>确认安全终端，即哪个终端允许超级用户(root)登录。一般只列出虚拟控制台，这样就不<br>可能(至少很困难)通过调制解调器(modem)或网络闯入系统并得到超级用户特权。<br><strong>16. /etc/shells</strong><br>列出可以使用的shell。chsh 命令允许用户在本文件指定范围内改变登录的shell。提供一<br>台机器f t p服务的服务进程ftpd 检查用户s h e l l是否列在/etc/shells 文件中，如果不是，将不允<br>许该用户登录。<br><strong>17. /etc/termcap</strong><br>终端性能数据库。说明不同的终端用什么“转义序列”控制。写程序时不直接输出转义<br>序列(这样只能工作于特定品牌的终端)，而是从/etc/termcap 中查找要做的工作的正确序列。<br>这样，多数的程序可以在多数终端上运行。</p><p><strong>/usr &nbsp;这个目录中包含了命令库文件和在通常操作中不会修改的文件。</strong><br>这个目录对于系统来说也是一个非常重要的目录，其地位类似Windows上面的”Program Files”目录（安装程序的时候，默认就是安装在此文件内部某个子文件夹内。输入命令后系统默认执行/usr/bin下的程序（当然，前提是这个目录的路径已经被添加到了系统的环境变量中。此目录通常也会挂载一个独立的磁盘分区，它应保存共享只读类文件，这样它可以被运行Linux的不同主机挂载。</p><p><strong>/usr/lib</strong><br>目标库文件，包括动态连接库加上一些通常不是直接调用的可执行文件的存放位置。<br>这个目录功能类似/lib目录，理说，这里存放的文件应该是/bin目录下程序所需要的库文件的存放地，也不排除一些例外的情况。</p><p><strong>/usr/bin</strong><br>一般使用者使用并且不是系统自检等所必需可执行文件的目录。<br>此目录相当于根文件系统下的对应目录（/bin，非启动系统，非修复系统以及非本地安装的程序一般都放在此目录下。</p><p><strong>/usr/sbin</strong><br>管理员使用的非系统必须的可执行文件存放目录。<br>此目录相当于根文件系统下的对应目录（/sbin，保存系统管理程序的二进制文件，并且这些文件不是系统启动或文件系统挂载 /usr 目录或修复系统所必需的。</p><p><strong>/usr/share</strong><br>存放共享文件的目录。<br>在此目录下不同的子目录中保存了同一个操作系统在不同构架下工作时特定应用程序的共享数据(例如程序文档信息)。使用者可以找到通常放在 /usr/doc 或 /usr/lib 或 /usr/man 目录下的这些类似数据。</p><p><strong>/usr/include</strong><br>C程序语言编译使用的头文件。<br>linux下开发和编译应用程序所需要的头文件一般都存放在这里，通过头文件来使用某些库函数。默认来说这个路径被添加到了环境变量中，这样编译开发程序的时候编译器会自动搜索这个路径，从中找到你的程序中可能包含的头文件。</p><p><strong>/usr/local</strong><br>安装本地程序的一般默认路径。<br>当我们下载一个程序源代码，编译并且安装的时候，如果不特别指定安装的程序路径，那么默认会将程序相关的文件安装到这个目录的对应目录下。也就是说，这个目录存放的内容，一般都是我们后来自己安装的软件的默认路径，如果择了这个默认路径作为软件的安装路径，被安装的软件的所文件都限制在这个目录中，其中的子目录就相应于根目录的子目录。</p><p><strong>/proc &nbsp;特殊文件目录</strong><br>这个目录采用一种特殊的文件系统格式（proc格式，内核支持这种格式。其中包含了全部虚拟文件。它们并不保存在磁盘中，也不占据磁盘空间(尽管命令ls -c会显示它们的大小)。当您查看它们时，您实际上看到的是内存里的信息，这些文件助于我们了解系统内部信息。例如：</p><p>1/ 关于进程1的信息目录。每个进程在/proc 下一个名为其进程号的目录。<br>cpuinfo 处理器信息，如类型、制造商、型号和性能。<br>devices 当前运行的核心配置的设备驱动的列表。<br>dma 显示当前使用的DMA通道。<br>filesystems 核心配置的文件系统。<br>interrupts 显示使用的中断，and how many of each there have been.<br>ioports 当前使用的I/O端口。<br>kcore 系统物理内存映象。与物理内存大小一样，但实际不占这么多内存；<br>kmsg 核心输出的消息。也被送到syslog 。<br>ksyms 核心符号表。<br>loadavg 系统”平均负载”；3个没意义的指示器指出系统当前的工作量。<br>meminfo 存储器使用信息，包括物理内存和swap。<br>modules 当前加载了哪些核心模块。<br>net 网络协议状态信息。<br>self 到查看/proc 的程序的进程目录的符号连接。<br>stat 系统的不同状态<br>uptime 系统启动的时间长度。<br>version 核心版本。</p><p><strong>/opt &nbsp;可择的文件目录</strong><br>这个目录表示的是可择的意思，些自定义软件包或者第方工具，就可以安装在这里。</p><p><strong>/mnt &nbsp;临时挂载目录</strong><br>这个目录一般是用于存放挂载储存设备的挂载目录的，比如磁盘，光驱，网络文件系统等，当我们需要挂载某个磁盘设备的时候，可以把磁盘设备挂载到这个目录上去，这样我们可以直接通过访问这个目录来访问那个磁盘了。一般来说，我们最好在/mnt目录下面多建立几个子目录，挂载的时候挂载到这些子目录上面，因为通常我们可能不仅仅是挂载一个设备吧?</p><p><strong>/media &nbsp;挂载的媒体设备目录</strong><br>挂载的媒体设备目录，一般外部设备挂载到这里，例如cdrom等。比如我们插入一个U盘，我们一般会发现，Linux自动在这个目录下建立一个disk目录，然后把U盘挂载到这个disk目录上，通过访问这个disk来访问U盘。</p><p><strong>/var &nbsp;内容经常变化的目录</strong><br>此目录下文件的大小可能会改变，如缓冲文件，日志文件，缓存文件，等一般都存放在这里。</p><p><strong>/tmp &nbsp;临时文件目录</strong><br>该目录存放系统中的一些临时文件，文件可能会被系统自动清空。</p><p><strong>/lost+found &nbsp;&nbsp;恢复文件存放的位置</strong><br>当系统崩溃的时候，在系统修复过程中需要恢复的文件，可能就会在这里被找到了，这个目录一般为空。</p><p><strong>另外，有些目录容易混淆，这里简单区分一下：</strong><br>/bin,/sbin与/usr/bin,/usr/sbin:<br>/bin一般存放对于用户和系统来说“必须”的程序（二进制文件）。<br>/sbin一般存放用于系统管理的“必需”的程序（二进制文件），一般普通用户不会使用，根用户使用。<br>/usr/bin一般存放的只是对用户和系统来说“不是必需的”程序（二进制文件）。<br>/usr/sbin一般存放用于系统管理的系统管理的不是必需的程序（二进制文件）。</p><p>/lib与/usr/lib:<br>/lib和/usr/lib的区别类似/bin,/sbin与/usr/bin,/usr/sbin。<br>/lib一般存放对于用户和系统来说“必须”的库（二进制文件）。<br>/usr/lib一般存放的只是对用户和系统来说“不是必需的”库（二进制文件）。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Linux 中各个文件夹的作用，包含了/、/boot、/sbin、/bin、/lib、/dev、/home、/root、/etc、/usr、/proc、/opt、/mnt、/media、/var、/tmp、/lost+found等各种路径，可以了解各个文件夹内存放的文件的作用。&lt;/p&gt;</summary>
    
    
    
    <category term="linux学习" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/linux%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="linux" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/linux/"/>
    
    <category term="文件" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>学习方法：如何练就高智商，看看大神的学习观！</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/%E5%AD%A6%E4%B9%A0%E6%80%9D%E8%80%83/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%EF%BC%9A%E5%A6%82%E4%BD%95%E7%BB%83%E5%B0%B1%E9%AB%98%E6%99%BA%E5%95%86%EF%BC%8C%E7%9C%8B%E7%9C%8B%E5%A4%A7%E7%A5%9E%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%A7%82%EF%BC%81/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/%E5%AD%A6%E4%B9%A0%E6%80%9D%E8%80%83/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%EF%BC%9A%E5%A6%82%E4%BD%95%E7%BB%83%E5%B0%B1%E9%AB%98%E6%99%BA%E5%95%86%EF%BC%8C%E7%9C%8B%E7%9C%8B%E5%A4%A7%E7%A5%9E%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%A7%82%EF%BC%81/</id>
    <published>2019-05-07T18:21:00.000Z</published>
    <updated>2019-05-07T18:21:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>首先声明一下，这个系列的视频是B站转过来的，大家要看高清的请移步B站，用的是B站的嵌入链接，希望大家多多关注原作者<a target="_blank" rel="noopener" href="https://space.bilibili.com/344849038/video" title="YJango">YJango</a>，建议wifi环境打开！</p></blockquote><iframe src="//player.bilibili.com/player.html?aid=33979970&amp;cid=62781710&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=33980096&amp;cid=62781815&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=34127662&amp;cid=62782004&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=34269113&amp;cid=62782050&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=35781493&amp;cid=62782122&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=35986472&amp;cid=63167948&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=36134707&amp;cid=63435996&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=37106100&amp;cid=65207228&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=37529038&amp;cid=66778216&amp;page=2" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=38662982&amp;cid=68023930&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=39525280&amp;cid=70048740&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=41387095&amp;cid=72688781&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=41463132&amp;cid=72821652&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=41539594&amp;cid=72965146&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=42589628&amp;cid=74721223&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=44080562&amp;cid=77204391&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=45329808&amp;cid=79366135&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>侵删！]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;首先声明一下，这个系列的视频是B站转过来的，大家要看高清的请移步B站，用的是B站的嵌入链接，希望大家多多关注原作者&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://space.bilibili.com/</summary>
      
    
    
    
    <category term="学习思考" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/%E5%AD%A6%E4%B9%A0%E6%80%9D%E8%80%83/"/>
    
    
    <category term="转载" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="bilibili" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/bilibili/"/>
    
  </entry>
  
  <entry>
    <title>docker学习：轻量级图形页面管理之Portainer</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/docker%E5%AD%A6%E4%B9%A0/docker%E5%AD%A6%E4%B9%A0%EF%BC%9A%E8%BD%BB%E9%87%8F%E7%BA%A7%E5%9B%BE%E5%BD%A2%E9%A1%B5%E9%9D%A2%E7%AE%A1%E7%90%86%E4%B9%8Bportainer/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/docker%E5%AD%A6%E4%B9%A0/docker%E5%AD%A6%E4%B9%A0%EF%BC%9A%E8%BD%BB%E9%87%8F%E7%BA%A7%E5%9B%BE%E5%BD%A2%E9%A1%B5%E9%9D%A2%E7%AE%A1%E7%90%86%E4%B9%8Bportainer/</id>
    <published>2019-04-11T13:07:00.000Z</published>
    <updated>2019-04-11T13:07:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h2><blockquote><p>docker 图形化管理提供了很多工具，有Portainer、Docker UI、Shipyard等等，本文主要介绍Portainer。</p></blockquote><p> Portainer是一个开源、轻量级Docker管理用户界面，基于Docker API，提供状态显示面板、应用模板快速部署、容器镜像网络数据卷的基本操作（包括上传下载镜像，创建容器等操作）、事件日志显示、容器控制台操作、Swarm集群和服务等集中管理和操作、登录用户管理和控制等功能。功能十分全面，基本能满足中小型单位对容器管理的全部需求。</p><h2 id="2-创建容器"><a href="#2-创建容器" class="headerlink" title="2.创建容器"></a>2.创建容器</h2><h3 id="2-1下载官方镜像"><a href="#2-1下载官方镜像" class="headerlink" title="2.1下载官方镜像"></a>2.1下载官方镜像</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@ ganbing /]# docker pull portainer/portainer</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from portainer/portainer</span><br><span class="line">d1e017099d17: Pull complete</span><br><span class="line">ba5495c717cb: Pull complete</span><br><span class="line">Digest: sha256:8146a5aae1135a0ccee424488c6867b438be21d1e915903a858d12e8382b817b</span><br><span class="line">Status: Downloaded newer image for portainer/portainer:latest</span><br></pre></td></tr></tbody></table></figure><h3 id="2-2单机运行"><a href="#2-2单机运行" class="headerlink" title="2.2单机运行"></a>2.2单机运行</h3><blockquote><p>如果仅有一个docker宿主机，则可使用单机版运行，Portainer单机版运行十分简单，只需要一条语句即可启动容器，来管理该机器上的docker镜像、容器等数据。</p></blockquote><p><strong>创建数据卷：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ganbing ~]# docker volume create portainer_data</span><br><span class="line">portainer_data</span><br></pre></td></tr></tbody></table></figure><p><strong>运行容器：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ganbing ~]# docker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer</span><br><span class="line">439cc8a6d44a84f5967534c50d3accc43fbeb578258a52c2683afeb230dd6e04</span><br></pre></td></tr></tbody></table></figure><p>参数说明：<br>-d：容器在后台运行；<br>-p 9000:9000 ：宿主机9000端口映射容器中的9000端口<br>-v /var/run/docker.sock:/var/run/docker.sock ：把宿主机的Docker守护进程(Docker daemon)默认监听的Unix域套接字挂载到容器中；<br>-v portainer_data:/data ：把宿主机portainer_data数据卷挂载到容器/data目录；</p><p><strong>查看容器进程：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ganbing ~]# docker ps -l</span><br><span class="line">CONTAINER ID        IMAGE                 COMMAND             CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">439cc8a6d44a        portainer/portainer   "/portainer"        13 seconds ago      Up 13 seconds       0.0.0.0:9000-&gt;9000/tcp   amazing_clarke</span><br></pre></td></tr></tbody></table></figure><p><strong>访问服务：</strong></p><ul><li>  访问方式：<a target="_blank" rel="noopener" href="http://ip:9000/">http://IP:9000</a> ，首次登录需要注册用户，给用户admin设置密码，如下图：</li></ul><p><img src="https://s1.51cto.com/images/blog/201803/05/5b88849fe1e52c6fb6fa78b74aded19c.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="docker：轻量级图形页面管理之Portainer"></p><ul><li><p>单机版本选择“Local”，点击Connect即可连接到本地docker，如下图：<br>  <img src="https://s1.51cto.com/images/blog/201803/05/d0ac00ebaa10a3cad79cbbe2687b6ab0.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="docker：轻量级图形页面管理之Portainer"><br>  注意：从上图可以看出，有提示需要挂载本地 /var/run/docker.socker与容器内的/var/run/docker.socker连接。因此，在启动时必须指定该挂载文件。</p></li><li><p>进入后可以对容器、镜像、网络、数据卷等进行管理，如下图：<br>  <img src="https://s1.51cto.com/images/blog/201803/05/b138b2e9e8f5d0748df6fde86da103c0.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="docker：轻量级图形页面管理之Portainer"></p></li></ul><h3 id="2-3集群运行"><a href="#2-3集群运行" class="headerlink" title="2.3集群运行"></a>2.3集群运行</h3><blockquote><p>更多的情况下，我们会有一个docker集群，可能有几台机器，也可能有几十台机器，因此，进行集群管理就十分重要了，Portainer也支持集群管理，Portainer可以和Swarm一起来进行集群管理操作。首先要搭建了一个Swarm，本文不着重介绍swarm集群的安装。</p></blockquote><p><strong>portainer集群启动：</strong></p><ul><li>  启动集群参考官方文档：<a target="_blank" rel="noopener" href="https://portainer.io/install.html">https://portainer.io/install.html</a></li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ docker service create \</span><br><span class="line">--name portainer \</span><br><span class="line">--publish 9000:9000 \</span><br><span class="line">--replicas=1 \</span><br><span class="line">--constraint 'node.role == manager' \</span><br><span class="line">--mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock \</span><br><span class="line">--mount type=bind,src=//opt/portainer,dst=/data \</span><br><span class="line">portainer/portainer \</span><br><span class="line">-H unix:///var/run/docker.sock</span><br></pre></td></tr></tbody></table></figure><ul><li><p>启动Portainer之后，首页还是给admin用户设置密码（这里和单机启动一样）。<br>  <img src="https://s1.51cto.com/images/blog/201803/05/35c353abedce986cca4a3c3f91ec4a45.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="docker：轻量级图形页面管理之Portainer"></p></li><li><p>进入后，如下图所示会发现多了关于swarm的选项，其它配置和单机运行的portainer一样，都很简单：<br>  <img src="https://s1.51cto.com/images/blog/201803/05/c0e9e1e20302f7a8b318173dcce6eabb.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt="docker：轻量级图形页面管理之Portainer"></p></li><li><p>  Portainer的基本操作就这么多，具体的操作步骤还需要大家自己去学习理解。</p></li></ul><h2 id="3-参考链接"><a href="#3-参考链接" class="headerlink" title="3.参考链接"></a>3.参考链接</h2><p>官方网站：<a target="_blank" rel="noopener" href="https://portainer.io/">https://portainer.io/</a><br>官方文档：<a target="_blank" rel="noopener" href="https://portainer.readthedocs.io/">https://portainer.readthedocs.io/</a><br>演示网址：<a target="_blank" rel="noopener" href="http://demo.portainer.io/">http://demo.portainer.io</a> 账号admin 密码 tryportainer</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-介绍&quot;&gt;&lt;a href=&quot;#1-介绍&quot; class=&quot;headerlink&quot; title=&quot;1.介绍&quot;&gt;&lt;/a&gt;1.介绍&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;docker 图形化管理提供了很多工具，有Portainer、Docker UI、Shipyard</summary>
      
    
    
    
    <category term="docker学习" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/docker%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="docker" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/docker/"/>
    
    <category term="portainer" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/portainer/"/>
    
  </entry>
  
  <entry>
    <title>小把戏：自建密码托管，记录bitwarden_rs部署过程</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/docker%E5%AD%A6%E4%B9%A0/%E5%B0%8F%E6%8A%8A%E6%88%8F%EF%BC%9A%E8%87%AA%E5%BB%BA%E5%AF%86%E7%A0%81%E6%89%98%E7%AE%A1%EF%BC%8C%E8%AE%B0%E5%BD%95bitwarden-rs%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/docker%E5%AD%A6%E4%B9%A0/%E5%B0%8F%E6%8A%8A%E6%88%8F%EF%BC%9A%E8%87%AA%E5%BB%BA%E5%AF%86%E7%A0%81%E6%89%98%E7%AE%A1%EF%BC%8C%E8%AE%B0%E5%BD%95bitwarden-rs%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B/</id>
    <published>2019-03-27T16:18:00.000Z</published>
    <updated>2019-03-27T16:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>声明：本次部署参考了<a target="_blank" rel="noopener" href="https://blog.mynook.info/post/selfhost-bitwarden/" title="my nook">my nook</a>大神的部署方式，由于我是个小白，原文的部署方式的我来说还是不够细节，故重新整理了此文章部署过程，方便各位小伙伴参考，如有疑问欢迎各位在评论中提出。</p></blockquote><h1 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h1><p>之所以用自建的密码托管服务器，还是因为我一直在用的密码管理lastpassword主密码忘记了，搞得我不得不找一个<strong>全平台、开源、好用、私有</strong>的密码管理方式，而且刚好同事也在研究自建密码托管，说有几种很好的部署方式，综合网上的资料，偶然发现了<code>mynook</code>大神写的教程，发现大神的需求与我十分吻合，就是部署比较复杂，思前想后还是决定尝试下。</p><span id="more"></span><p>当然部署过程发现很多问题，查阅了一些资料总算是部署好了，本文应该用到的方式还是比较简单的，需要敲代码的地方也很少，得益于宝塔便捷的管理功能，很多都是图形化，简单方便！</p><p>如下便是整个部署流程：</p><p>部署项目介绍：</p><blockquote><p>在 GitHub 上搜索时发现有人用 <a target="_blank" rel="noopener" href="https://www.rust-lang.org/en-US/">Rust</a> 实现了 Bitwarden 服务器，项目叫做 <a target="_blank" rel="noopener" href="https://github.com/dani-garcia/bitwarden_rs">bitwarden_rs</a>，并且提供了 Docker 镜像。这个实现更进一步降低了对机器配置的要求，并且 Docker 镜像体积很小，部署非常方便。此外，官方服务器中需要付费订阅的一些功能，在这个实现中是免费的。</p></blockquote><hr><h1 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h1><p>你需要有一个域名。 机器上需要有 Docker 环境。具体参考 <a target="_blank" rel="noopener" href="https://docs.docker-cn.com/engine/installation/linux/docker-ce/centos/#%E4%BD%BF%E7%94%A8%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85">Docker 官方文档</a>来安装 Docker-CE。以下是简单的部署方式:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install /path/to/package.rpm</span><br><span class="line">sudo systemctl start docker</span><br><span class="line">sudo docker run hello-world</span><br></pre></td></tr></tbody></table></figure><p>此外，本文使用 docker-compose 来管理服务，参考 <a target="_blank" rel="noopener" href="https://docs.docker.com/compose/install/">docker-compose 的官方文档</a>来安装。在 Linux 上可以一行命令安装：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose</span><br></pre></td></tr></tbody></table></figure><p>如果要更新 docker-compose，也可以直接使用这条命令，只需要修改版本号为最新的 docker-compose 版本号。</p><p>最后就是安装bitwarden_rs：可参考<a target="_blank" rel="noopener" href="https://github.com/dani-garcia/bitwarden_rs" title="bitwarden_rs">bitwarden_rs</a>中的文档</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mprasil/bitwarden:latest</span><br></pre></td></tr></tbody></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p>假设你准备在主目录中存放数据，新建一个目录：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~ &amp;&amp; mkdir bitwarden &amp;&amp; cd bitwarden</span><br><span class="line">pwd</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">应当输出 /home/username/bitwarden</span></span><br></pre></td></tr></tbody></table></figure><p>准备一个配置文件：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; config.env &lt;&lt;EOF</span><br><span class="line">SIGNUPS_ALLOWED=true</span><br><span class="line">DOMAIN=https://example.com</span><br><span class="line">DATABASE_URL=/data/bitwarden.db</span><br><span class="line">ROCKET_WORKERS=10</span><br><span class="line">WEB_VAULT_ENABLED=true</span><br><span class="line">EOF</span><br></pre></td></tr></tbody></table></figure><p>以上配置文件的说明：</p><ul><li>  <code>SIGNUPS_ALLOWED</code> 控制是否开放用户注册，因为你必须先注册才能存储数据，所以暂且先打开；</li><li>  <code>DOMAIN</code> 填入你准备分配给 Bitwarden 服务使用的域名；</li><li>  <code>DATABASE_URL</code> 设置数据库在容器内的路径，你可以不设置，默认位于 <code>/data/db.sqlite3</code>；</li><li>  <code>ROCKET_WORKERS</code> 设置服务器使用几个线程。10 是默认值，你可以根据机器性能和个人需求适当调整；</li><li>  <code>WEB_VAULT_ENABLED</code> 设置是否开启 Web 客户端。如果开启，可以通过访问你的域名来打开 Web 客户端，用户登录后即可通过网页管理密码。因为注册用户需要，所以也暂且先打开；</li></ul><p>准备服务描述文件：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; docker-compose.yml &lt;&lt;EOF</span><br><span class="line">version: '3'</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  bitwarden:</span><br><span class="line">    image: mprasil/bitwarden:latest</span><br><span class="line">    container_name: bitwarden</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - ./data:/data</span><br><span class="line">    env_file:</span><br><span class="line">      - config.env</span><br><span class="line">    ports:</span><br><span class="line">      - "6666:80"</span><br><span class="line">EOF</span><br></pre></td></tr></tbody></table></figure><p>这个文件主要描述了这些内容：</p><ul><li>  <code>bitwarden</code> 现在是唯一一个服务；</li><li>  <code>image: mprasil/bitwarden:latest</code> 指定使用 Docker Hub 的 <code>mprasil/bitwarden</code> 最新镜像；</li><li>  <code>volumes</code> 中指定将容器内的 <code>/data</code> 目录挂载到宿主机的当前目录下的 <code>data</code> 目录，这样你可以在宿主机上执行数据库的备份操作；</li><li>  <code>ports</code> 指定将容器内的 80 端口映射到了宿主机的 6666 端口；</li></ul><p>以后对 bitwarden 服务做的所有操作，都需要预先进入这两个配置文件所在的目录内。</p><h1 id="反向代理和-HTTPS、启动服务"><a href="#反向代理和-HTTPS、启动服务" class="headerlink" title="反向代理和 HTTPS、启动服务"></a>反向代理和 HTTPS、启动服务</h1><blockquote><p>因为服务描述文件中将 bitwarden 服务的 80 端口映射到了宿主机的 6666 端口，你可以在宿主机上使用 nginx 或其他反向代理，为你的域名配置对应的代理规则，使得访问域名时，流量可以经由 bitwarden 服务来处理。使用 nginx 的配置文件部分内容如下：</p></blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location / {</span><br><span class="line">    proxy_pass http://127.0.0.1:6666;</span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>注：以上是大佬的原文，实际操作还是很复杂的，在这里可以用宝塔自带的配置下我们的域名网站：1、建立网站，用你准备的那个域名常规建站（我这里用的WEB服务器是Nginx）2、设置反向代理，即将自己的域名代理到内部127.0.0.1:6666上（注意在防火墙中开放你的端口）3、最后配置HTTPS，可直接在网站设置里面导入证书，证书可以免费在阿里云上获取</p><blockquote><p><strong>此外，现在是 2018 年，还请为域名配置 HTTPS 证书，并将 HTTP 流量阻挡或重定向到 HTTPS。这是对数据安全的基本尊重。</strong>这方面的配置可以参考<a target="_blank" rel="noopener" href="https://blog.mynook.info/post/fast-way-to-configure-a-https-site/">《快速配置 HTTPS》</a>。</p></blockquote><p>如果你使用 traefik 或其他反代方案，请自行参考工具各自的官方文档完成配置。</p><p>最后启动服务：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></tbody></table></figure><h1 id="用户注册和数据导入"><a href="#用户注册和数据导入" class="headerlink" title="用户注册和数据导入"></a>用户注册和数据导入</h1><p>启动服务后，通过浏览器访问你配置好的域名，应当看到下图所示的登录界面。</p><p><img src="http://cdn.pidaye.top/wp-content/uploads/2019/03/bitwarden-web-vault-login-856%C3%97754.png"></p><p>点击下方链接进入注册页面。</p><p><img src="http://cdn.pidaye.top/wp-content/uploads/2019/03/bitwarden-web-vault-register-824%C3%971158.png"></p><p>注册完毕之后不需要验证邮箱（bitwarden_rs 目前没有实现邮件相关的功能），直接登录。登录之后在左侧栏的「工具」菜单中找到数据导入页面，如图。</p><p><img src="http://cdn.pidaye.top/wp-content/uploads/2019/03/bitwarden-import-940%C3%97584.png"></p><p>在这里进行数据导入就可以啦。</p><h1 id="关闭用户注册、关闭-web-vault"><a href="#关闭用户注册、关闭-web-vault" class="headerlink" title="关闭用户注册、关闭 web vault"></a>关闭用户注册、关闭 web vault</h1><p>现在你的 Bitwarden 服务器允许任何人注册帐号使用，你可能希望关闭这个功能。在前面生成的 <code>config.env</code> 中，调整以下两项值：</p><pre><code>SIGNUPS_ALLOWED=falseWEB_VAULT_ENABLED=false</code></pre><p>修改之后，需要重启 bitwarden 服务才生效。运行以下命令来删除并重新创建容器。不必担心，因为指定了 <code>volume</code> 映射，你的数据不会被删除。</p><pre><code>docker-compose down &amp;&amp; docker-compose up -d</code></pre><p>这样就关闭了用户注册功能，并禁用了 web vault 的访问。密码数据之后还是可以在客户端中进行编辑的。</p><h1 id="客户端的使用"><a href="#客户端的使用" class="headerlink" title="客户端的使用"></a>客户端的使用</h1><p>安装配置好服务端后，还需要在客户端上登录，将数据同步过来，才能使用自动填充等功能。Bitwarden 的客户端界面都大同小异，这里以 Firefox 扩展为例。</p><p>首先在登录界面，点击左上角齿轮图标的设置按钮。</p><p><img src="http://cdn.pidaye.top/wp-content/uploads/2019/03/bitwarden-client-login-748%C3%97754.png"></p><p>在设置界面，只需要在最上面的服务器地址栏中，填写你的 Bitwarden 服务器地址即可。然后点击设置界面右上角的「保存」。接下来使用你的邮箱和主密码登录即可同步数据。</p><p><img src="http://cdn.pidaye.top/wp-content/uploads/2019/03/bitwarden-client-settings-login-748%C3%97608.png"></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>对于使用任何密码管理工具的人来说，主密码的重要性不言而喻。一旦主密码泄漏，相当于将所有帐号密码拱手相让；一旦主密码丢失，所有数据也都化作随机噪音，变得一文不值。所以，请时常审视、改进你的安全策略，定期对帐号做安全审查，不定期修改并牢记主密码。</p><ul><li>  <a target="_blank" rel="noopener" href="https://blog.mynook.info/tags/%E5%AE%89%E5%85%A8">安全</a></li><li>  <a target="_blank" rel="noopener" href="https://blog.mynook.info/tags/safeincloud">SafeInCloud</a></li><li>  <a target="_blank" rel="noopener" href="https://blog.mynook.info/tags/enpass">Enpass</a></li><li>  <a target="_blank" rel="noopener" href="https://blog.mynook.info/tags/bitwarden">Bitwarden</a></li><li>  <a target="_blank" rel="noopener" href="https://blog.mynook.info/tags/%E5%AF%86%E7%A0%81">密码</a></li><li>  <a target="_blank" rel="noopener" href="https://blog.mynook.info/tags/%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86">密码管理</a></li><li>  <a target="_blank" rel="noopener" href="https://blog.mynook.info/tags/%E5%B7%A5%E5%85%B7">工具</a></li><li>  <a target="_blank" rel="noopener" href="https://blog.mynook.info/tags/docker">Docker</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;声明：本次部署参考了&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://blog.mynook.info/post/selfhost-bitwarden/&quot; title=&quot;my nook&quot;&gt;my nook&lt;/a&gt;大神的部署方式，由于我是个小白，原文的部署方式的我来说还是不够细节，故重新整理了此文章部署过程，方便各位小伙伴参考，如有疑问欢迎各位在评论中提出。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;缘起&quot;&gt;&lt;a href=&quot;#缘起&quot; class=&quot;headerlink&quot; title=&quot;缘起&quot;&gt;&lt;/a&gt;缘起&lt;/h1&gt;&lt;p&gt;之所以用自建的密码托管服务器，还是因为我一直在用的密码管理lastpassword主密码忘记了，搞得我不得不找一个&lt;strong&gt;全平台、开源、好用、私有&lt;/strong&gt;的密码管理方式，而且刚好同事也在研究自建密码托管，说有几种很好的部署方式，综合网上的资料，偶然发现了&lt;code&gt;mynook&lt;/code&gt;大神写的教程，发现大神的需求与我十分吻合，就是部署比较复杂，思前想后还是决定尝试下。&lt;/p&gt;</summary>
    
    
    
    <category term="docker学习" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/docker%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="docker" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/docker/"/>
    
    <category term="bitwarden" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/bitwarden/"/>
    
  </entry>
  
  <entry>
    <title>主题修改：欲思主题常见问题与解答[非官方FAQ]</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/uncategorized/%E4%B8%BB%E9%A2%98%E4%BF%AE%E6%94%B9%EF%BC%9A%E6%AC%B2%E6%80%9D%E4%B8%BB%E9%A2%98%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%B8%8E%E8%A7%A3%E7%AD%94-%E9%9D%9E%E5%AE%98%E6%96%B9faq/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/uncategorized/%E4%B8%BB%E9%A2%98%E4%BF%AE%E6%94%B9%EF%BC%9A%E6%AC%B2%E6%80%9D%E4%B8%BB%E9%A2%98%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%B8%8E%E8%A7%A3%E7%AD%94-%E9%9D%9E%E5%AE%98%E6%96%B9faq/</id>
    <published>2019-03-02T17:20:00.000Z</published>
    <updated>2019-03-02T17:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://cdn.pidaye.top/yusiboke.jpg" alt="blob.jpg"></p><blockquote><p>前言注意：懒得看目录的亲，请直接使用Ctrl+F搜索关键字查询首先感谢欲思提供的这款优秀的主题，主题的强大无需多说博猪发现还是有一些朋友在使用中有各种各样的问题，博猪将这些问题集中起来，然后一起解答，希望能帮到诸位PS ，其实很多都不是主题问题，而是WordPress的使用常识而已。注意！1，在修改主题之前，建议先进行网站备份；2，编辑代码绝对不准使用记事本或者WordPress自带的主题编辑功能；3，编辑代码全过程使用UTF-8编码方式</p></blockquote><h2 id="缩略图问题"><a href="#缩略图问题" class="headerlink" title="缩略图问题"></a>缩略图问题</h2><p>首先需要检查下主机是否开启了GD库</p><p>作者给出了缩略图解决方案wordpress使用timthumb和七牛云存储函数实现缩略图</p><p>在主题文件夹内timthumb.php文件内添加图片域名第133行至第141行，添加自己的图片域名，建议添加自己的博客域名，如果临时用七牛，添加http://[空间名].qiniudn.com。在和timthumb.php同一个目录下新建一个cache文件夹用来存储生成的小图片，设置cache文件夹为 755 或 777 权限</p><p>请使用绝对地址来表示原有图片，该程序不支持外链图片。</p><h2 id="头部字体"><a href="#头部字体" class="headerlink" title="头部字体"></a>头部字体</h2><p>2014-07-29_104252</p><p>先看下我是怎么解决的</p><p>2014-09-25_195951如何修改头部字体，头部字体采用的是有字库中文版在线字体，首先需要在有字库注册</p><p>注册有字库引用有字库字体在有字库里面选择一个自己喜欢的字体，然后跟着来就是了</p><p>获取字体代码</p><p>一个网站名称，另一个是网站描述，所以需要2个字体，即便是网站标题和描述采用同样的字体也需要两次这样做。然后用你的字体相关数据替换下面的代码替换方法把第二个的红框里面的代码替换掉下面代码的第一行把第一个红框里面的代码替换掉第三行花括号里面代码然后网站描述重复做一次将代码放在主题文件夹header.php文件里面的标签内将以下代码按照自己字体修改后添加到header.php文件标签内</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">href='http://www.youziku.com/webfont/CSS/xxxxxxxxxxxxxxxxxxx' rel='stylesheet' type='text/css'/&gt;  href='http://www.youziku.com/webfont/CSS/xxxxxxxxxxxxxx' rel='stylesheet' type='text/css'/&gt;  type="text/css"&gt;.yusi-mono{font-family:yyyyyyyyyyyyyy;}.yusi-bloger{font-family:yyyyyyyyyyyyyyyy;}</span><br></pre></td></tr></tbody></table></figure><p>so easy！so happy！</p><p>注意由于有字库偶尔不太稳定，引用在线字体可能会拖慢网站打开速度您可以选择将字体保存在本地引用</p><p>如果您只是想修改掉默认字体，改成楷体，仿宋等等常见字体，那么这个方法可能最简单</p><p>在header.php文件搜索以下代码</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class="yusi-mono"&gt;</span><br></pre></td></tr></tbody></table></figure><p>替换成以下代码</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> style="font-family:楷体;" class="yusi-mono"&gt;</span><br><span class="line">就可以替换掉网站标题为楷体字体了。</span><br></pre></td></tr></tbody></table></figure><p>在header.php文件搜索以下代码</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class="yusi-bloger"&gt;</span><br></pre></td></tr></tbody></table></figure><p>替换成以下代码</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">style="font-family:楷体;" class="yusi-bloger"&gt;</span><br></pre></td></tr></tbody></table></figure><p>就可以替换掉网站描述成楷体字体了然后可能还有人既想要漂亮的字体，有想要不影响网页加载速度，那么可以参考这里 缓存本地有字库</p><h2 id="百度分享样式错乱"><a href="#百度分享样式错乱" class="headerlink" title="百度分享样式错乱"></a>百度分享样式错乱</h2><p>看到这个样子是不是很搓火？</p><p>开启百度分享之后发现样式错乱，怎么回事？其实很简单，打开主题文件/js/jquery.js在代码编辑器里面ctrl+F搜索yusi将/wp-content/themes/yusi1.0/share.css中间的yusi1.0改为你目前的主题名字总之，就是你如果把主题名字改了的话就会出现这个问题如果你的事二级域名博客，比如blog.googlo.me，那么还需要添加你的二级域名blog/wp-content/themes/yusi1.0/share.css看看下面做好的效果</p><h2 id="彩色标签"><a href="#彩色标签" class="headerlink" title="彩色标签"></a>彩色标签</h2><p>主题自带功能，控制面板——外观——小工具——标签云，添加即可</p><h2 id="二级菜单"><a href="#二级菜单" class="headerlink" title="二级菜单"></a>二级菜单</h2><p>▲欲思主题是支持多级菜单的，一般二级菜单就够了，其他用不着了。开启主题二级菜单，进入后台》外观》菜单，将菜单中的任意一个拖放至任意一个菜单下2014-09-11_164159关于多级菜单，推荐浏览知更鸟的更详细的说明</p><p>WordPress导航菜单图文使用教程</p><h2 id="下拉自动加载"><a href="#下拉自动加载" class="headerlink" title="下拉自动加载"></a>下拉自动加载</h2><p>2014-09-25_205215看到主题作者的底部自动加载了吗？想要？网站后台——主题设置—— 开启列表Ajax加载分页内容2014-09-25_205436</p><h2 id="显示H2绿色边缘以及下划线"><a href="#显示H2绿色边缘以及下划线" class="headerlink" title="显示H2绿色边缘以及下划线"></a>显示H2绿色边缘以及下划线</h2><p>主题的h2标题都有样式，只是在文章页面外，所以在手机里面看不到，将以下代码添加到sigle.php文件上面就好了</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type="text/css"&gt;.article-content h2 {border-left: 8px solid #00A67C; border-bottom: 2px solid #00A67C; }</span><br></pre></td></tr></tbody></table></figure><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><p>主题支持代码高亮，采用google-code-prettyprint着色方案</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[pre class="prettyprint linenums" &gt;代码内容pre]</span><br><span class="line">注意，将代码中的[]改为&lt;&gt;</span><br></pre></td></tr></tbody></table></figure><p>害怕切换主题之后代码乱掉？？？采用同样采用google-code-prettyprint着色方案的代码插件就好了</p><h2 id="下载，链接按钮"><a href="#下载，链接按钮" class="headerlink" title="下载，链接按钮"></a>下载，链接按钮</h2><p>链接地址下载链接开源地址</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{dm href=''}链接地址{/dm}{dl href=''}下载链接{/dl}{gt href=''}开源地址{/gt}</span><br></pre></td></tr></tbody></table></figure><p>注意，将代码中的{}改为 []</p><h2 id="幻灯片错乱"><a href="#幻灯片错乱" class="headerlink" title="幻灯片错乱"></a>幻灯片错乱</h2><p>2014-09-26_141350首先你需要启用幻灯片功能（主题设置，启用幻灯片）标准图片尺寸为716<em>297，需要保证第一幅图片尺寸为716</em>297，另外特色图片最好也要716*297</p><p>在上传图片的时候注意需要插入的是完整尺寸，而不是缩放的</p><h2 id="友情链接在哪？"><a href="#友情链接在哪？" class="headerlink" title="友情链接在哪？"></a>友情链接在哪？</h2><p>WordPress自带了友情链接功能，只是被隐藏了，恢复友情连接功能</p><p>恢复WordPress隐藏的友情链接功能</p><h2 id="代码神秘失踪"><a href="#代码神秘失踪" class="headerlink" title="代码神秘失踪"></a>代码神秘失踪</h2><p>插入代码的时候可能会被转义，可以通过先在html编辑器点击代码按钮，然后切换到可视化编辑器添加代码，所以，代码可以留到文章结尾添加。</p><p>由于代码转义，添加不方便等等原因，个人推荐使用代码高亮插件，个人目前使用的代码高亮插件是wp-code-highlight</p><p>关于wp-code-highlight，您可能需要阅读这些文章；WordPress代码高亮插件：WP Code Highlight修改WP-Code-Highlight插件支持自动换行</p><h2 id="点击喜欢没有-1"><a href="#点击喜欢没有-1" class="headerlink" title="点击喜欢没有+1"></a>点击喜欢没有+1</h2><p>不建议使用代码压缩插件压缩js文件</p><h2 id="网站图标不显示，只有4个数字"><a href="#网站图标不显示，只有4个数字" class="headerlink" title="网站图标不显示，只有4个数字"></a>网站图标不显示，只有4个数字</h2><p>主题采用了部分图标字体，换一个浏览器试试</p><h2 id="那些社交图标"><a href="#那些社交图标" class="headerlink" title="那些社交图标"></a>那些社交图标</h2><p>2014-09-26_142506后台——主题设置，开启即可，另外图标数量不建议超过6个，否则会出错。新浪微博，腾讯微博开启后直接添加链接即可，比如我的新浪微博：http://weibo.com/u/3916790072，另外求关注哈腾讯微信填入微信账号，比如我的是yunluoV587，然后再主题images目录上传weixin.gif二维码图片邮箱代码推荐使用QQ邮箱的邮我组件。QQ邮件的邮我组建的使用教程最后获取的代码是这样的：http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=luXmr6fW8Pnu_-f-_rj1_fsQQ填写代码 tencent://message/?uin=755782106&amp;Site=&amp;Menu=yes，将代码中的数字改为自己的QQ号</p><h2 id="微信图标一直是作者的"><a href="#微信图标一直是作者的" class="headerlink" title="微信图标一直是作者的"></a>微信图标一直是作者的</h2><p>下载最新版主题覆盖即可！</p><h2 id="特别推荐模块"><a href="#特别推荐模块" class="headerlink" title="特别推荐模块"></a>特别推荐模块</h2><p>主题自带，后台，外观，小工具，特别推荐模块。</p><h2 id="搜索不能用"><a href="#搜索不能用" class="headerlink" title="搜索不能用"></a>搜索不能用</h2><p>首先要说明的，搜索有问题的一般都是环境问题如果 http://博客域名/?s=2014 可以打开的话，下面这个方法可以有效</p><p>在header.php文件里查找这段代码onsubmit=”location.href=’’改为</p><p>onsubmit=”location.href=’/?s=’</p><h2 id="头像不显示"><a href="#头像不显示" class="headerlink" title="头像不显示"></a>头像不显示</h2><p>在主题后台开启头像缓存，然后在WordPress程序根目录新建avatar文件夹，然后授予777权限，OK！</p><h2 id="热门排行不显示"><a href="#热门排行不显示" class="headerlink" title="热门排行不显示"></a>热门排行不显示</h2><p>应该是最近评论数量不多，可以考虑在提高天数</p><h2 id="左右移动LOGO"><a href="#左右移动LOGO" class="headerlink" title="左右移动LOGO"></a>左右移动LOGO</h2><p>2014-10-02_193446你是不是想要这样？？？如何做到？？其实很简单，和添加本地头部字体一样，搜索以下代码</p><p>  class=”yusi-mono”&gt;乐趣公园替换成以下代码</p><p> style=”left : -365px;” class=”yusi-mono”&gt;乐趣公园其实就是给class=yusi-mono添加一个left : -365px;属性，具体大小看你自己，网站描述是同样的道理。</p><h2 id="热门排行不显示-1"><a href="#热门排行不显示-1" class="headerlink" title="热门排行不显示"></a>热门排行不显示</h2><p>热门排行是按照评论数目排行的，如果你的热门排行不显示，那就是你的网站评论数目太少了-_-||，另外主题默认的天数是7天，也就是一周，修改天数为30，改成一个月吧。应该会有显示的。</p><h2 id="如何添加文章置顶"><a href="#如何添加文章置顶" class="headerlink" title="如何添加文章置顶"></a>如何添加文章置顶</h2><p>文章置顶方法：方法一、编辑文章时，左侧发布面板 → 公开度 → 勾选“将文章置于首页顶端”方法二、打开所有文章页面 → 快速编辑 → 勾选“置顶这篇文章 ”</p><h2 id="侧边栏小工具不显示评论"><a href="#侧边栏小工具不显示评论" class="headerlink" title="侧边栏小工具不显示评论"></a>侧边栏小工具不显示评论</h2><p>最新评论小工具，排除管理员ID，差不多都是1image</p><h2 id="添加注册以及后台管理按钮"><a href="#添加注册以及后台管理按钮" class="headerlink" title="添加注册以及后台管理按钮"></a>添加注册以及后台管理按钮</h2><p>111333在主题header.php文件中搜索以下代码</p><p>php if(is_user_logged_in()){echo ‘ ‘.$u_name.’   ‘; echo ‘      ‘;}else{echo ‘ ‘;}; wp_loginout(); ?&gt;替换为以下代码</p><p>php if(is_user_logged_in()){ echo ‘ ‘.$u_name.’ ‘; }else{ echo ‘ 注册’; }; echo ‘    ‘;echo wp_loginout();echo’’; ?&gt;OK!</p><h2 id="文章页评论不计数"><a href="#文章页评论不计数" class="headerlink" title="文章页评论不计数"></a>文章页评论不计数</h2><p>如果你发现的的文字页面下面的评论不计数，一直都是0的话，可以照着试试，打开single.php,找到以下代码’去’, ‘1’, ‘%’).’评论，替换为’0’, ‘1’, ‘%’).’评论，看看好了吗？</p><h2 id="投稿怎么添加或者投稿无法使用"><a href="#投稿怎么添加或者投稿无法使用" class="headerlink" title="投稿怎么添加或者投稿无法使用"></a>投稿怎么添加或者投稿无法使用</h2><p>投稿功能是主题自带的，首先在后台主题设置里面先打开这个功能，然后新建页面，选择投稿这个模板就好了</p><p>如果启用之后，新建页面了还是没法开启投稿功能或者不能用，看这篇文章欲思主题更换投稿页面</p><h2 id="网站标题和描述之间添加分割符号添加"><a href="#网站标题和描述之间添加分割符号添加" class="headerlink" title="网站标题和描述之间添加分割符号添加"></a>网站标题和描述之间添加分割符号添加</h2><p>主题在首页，网站标题有点问题，那就是网站名和网站描述会挤在一起，但是很明显，这不是我们想要的，我们想哟的是这样的20141103212757怎么才能做到呢，有两种方法</p><p>第一种，也是推荐的方法在header.php文件里面搜索以下代码</p><p>修改成下面代码就好了</p><p>第二种方法，也是比较傻瓜点的方法了2014-11-03_214350在设置里面的描述前面加个横线就可以了</p><h2 id="友情链接页面不显示链接"><a href="#友情链接页面不显示链接" class="headerlink" title="友情链接页面不显示链接"></a>友情链接页面不显示链接</h2><p>这是一个血的教训，我自己之前怎么弄也弄不好，然后才发现问题新建页面，确定为友情链接模板之后，在链接里面寻找ID2014-11-03_214854把鼠标放在链接分类上面，然后可以查看分类ID,比如这个分类就是69，然后在主题后台添加这个ID，就可以了2014-11-03_215050然后好了吧</p><h2 id="私密文章密码提交按钮错位"><a href="#私密文章密码提交按钮错位" class="headerlink" title="私密文章密码提交按钮错位"></a>私密文章密码提交按钮错位</h2><p>给single.php添加一下样式代码</p><p>input{padding:0px 20px;height : 30px;}</p><h2 id="页面竖行菜单"><a href="#页面竖行菜单" class="headerlink" title="页面竖行菜单"></a>页面竖行菜单</h2><p>首先看一张截图吧，这个就是最后效果2014-11-20_155620首先进入后台，外观——菜单选项，欲思主题自带了两个菜单，一个是导航菜单，就是全站头部黑色的导航条菜单，还有一个就是页面菜单进入菜单，需要有两个菜单，如果不够自己新建一个吧2014-11-20_155843然后再左边页面里面选择准备显示出来的页面2014-11-20_160217然后在下面选择页面菜单2014-11-20_160334保存菜单，然后看效果吧</p><h2 id="改头部文字logo为图片logo"><a href="#改头部文字logo为图片logo" class="headerlink" title="改头部文字logo为图片logo"></a>改头部文字logo为图片logo</h2><p>欲思主题的logo为文字，但是有很多人想改成图片，这个做个好图就行了，看怎么做吧2014-11-21_203953首先如上图，打开header.php文件，在文件中搜索以下代码，很好找的</p><p>  class=”yusi-mono”&gt;php bloginfo(‘name’); ?&gt;  class=”yusi-bloger”&gt;php bloginfo(‘description’); ?&gt;将他换成下面的代码</p><p> src=”logo图片链接，格式png，大小自己看情况控制吧”&gt;logo图片大小参考200*70OK！！</p><h2 id="给头部添加背景图"><a href="#给头部添加背景图" class="headerlink" title="给头部添加背景图"></a>给头部添加背景图</h2><p>在主题文件打开header.php文件，寻找以下代码</p><p> id=”header” class=”header”&gt;更改为以下代码</p><p> style=”background: url(‘自己添加jpg格式图片链接’) center 0px repeat-x;background-size: cover;” id=”header” class=”header”&gt;背景图片大小参考1100*150</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;http://cdn.pidaye.top/yusiboke.jpg&quot; alt=&quot;blob.jpg&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前言
注意：懒得看目录的亲，请直接使用Ctrl+F搜索关键字查询
首先感谢欲思提供的这款优秀的主题，主题的强大</summary>
      
    
    
    
    
    <category term="欲思主题" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E6%AC%B2%E6%80%9D%E4%B8%BB%E9%A2%98/"/>
    
    <category term="问题" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>网站优化：这样优化，可以你的个人网站体验更好！</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/uncategorized/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96%EF%BC%9A%E8%BF%99%E6%A0%B7%E4%BC%98%E5%8C%96%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E4%BD%93%E9%AA%8C%E6%9B%B4%E5%A5%BD%EF%BC%81/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/uncategorized/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96%EF%BC%9A%E8%BF%99%E6%A0%B7%E4%BC%98%E5%8C%96%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E4%BD%93%E9%AA%8C%E6%9B%B4%E5%A5%BD%EF%BC%81/</id>
    <published>2019-02-13T16:41:00.000Z</published>
    <updated>2019-02-13T16:41:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://cdn.pidaye.top/youhuawangzhan.jpg" alt="blob.jpg"></p><h2 id="1、被墙的服务"><a href="#1、被墙的服务" class="headerlink" title="1、被墙的服务"></a>1、被墙的服务</h2><p>你我都知道，国外的一些服务在大陆体验一直都很不尽人意，这其中有地理的原因，更大的原因还是人为的。其中有两个服务，在大陆必须做处理。谷歌字体全球头像服务</p><p>解决这两个问题的方法是一样的，要么禁用要么替换，这里推荐两个插件，安装了以后启用就行，不用做其他的设置。这里有个问题需要注意一下，有的主题自带这两个服务，这时候你就需要手动的修改了。</p><blockquote><p>Disable Google Fonts 禁用谷歌字体WP-DuoShuo-Gravatar 替换全球头像服务</p></blockquote><h2 id="2、静态资源上云存储"><a href="#2、静态资源上云存储" class="headerlink" title="2、静态资源上云存储"></a>2、静态资源上云存储</h2><p>我们的网站中会有大量的CSS，JS，图片等文件其实是可以免费托管到其他的云服务的，这样不仅仅能减少虚拟主机的负载还能减少虚拟主机的流量开支，所以说有免费的解决方案可以用何乐而不为呢？这里我们推荐使用七牛云存储，认证以后每月可以用10G的免费流量，一共10G的免费硬盘，对于个人用户或者一般的小网站来说足够了。WordPress是用七牛云服务推荐安装一个插件。</p><blockquote><p>WPJAM 七牛镜像存储</p></blockquote><p>七牛云安装以后设置稍微麻烦一点，不过不要怕，我们有详尽的图文说明。</p><p>首先注册一个七牛云账号并且认证一下www.qiniu.com，然后创建一个空间如图所示。<img src="https://i.loli.net/2019/02/13/5c63b53d0cdfd.jpg" alt="blob.jpg"></p><p>设置一键加速网站，填写我们的博客域名<img src="https://i.loli.net/2019/02/13/5c63b565c5913.jpg" alt="blob.jpg"></p><p>填写完成以后可以看一下域名设置里我们的空间域名和AK，SK我们待会用得到。<img src="https://i.loli.net/2019/02/13/5c63b585ece6e.jpg" alt="blob.jpg"><img src="https://i.loli.net/2019/02/13/5c63b59bbf6f4.jpg" alt="blob.jpg"></p><p>在我们的WordPress后台设置七牛云插件，如图所示<img src="https://i.loli.net/2019/02/13/5c63b5b01d766.jpg" alt="blob.jpg"></p><p>到这里七牛云就已经设置完了，你可以到首页刷新的网站，第一次访问会比较慢，如果没有什么异常说明设置成功了。你可以查看网页源代码发现静态文件的链接都变成七牛的了。</p><h2 id="3、开启缓存"><a href="#3、开启缓存" class="headerlink" title="3、开启缓存"></a>3、开启缓存</h2><p>开启缓存也是一个能快速提升WordPress网站访问速度的方法，立竿见影，这里推荐一个插件，有免费版的，我们用免费的足够了。</p><blockquote><p>WP Fastest Cache</p></blockquote><p>如图所示，安装好以后我们到插件的设置页面开启以下选项即可。<img src="https://i.loli.net/2019/02/13/5c63b5d004409.jpg" alt="blob.jpg"></p><h2 id="4、懒加载图片"><a href="#4、懒加载图片" class="headerlink" title="4、懒加载图片"></a>4、懒加载图片</h2><p>图片懒加载也就是图片延时加载，简单点说就是只加载页面上能看到的图片，从而减短页面的等待时间，当访客需要看其他的图片的时候再加载相应的图片。这里也是推荐一个插件了，WordPress所有的问题都可以用插件解决，这是真理。</p><blockquote><p>a3 Lazy Load</p></blockquote><p>安装好以后就不用问了，默认就已经开启，如果你需要特别的设置可以仔细研究下各个设置项。<img src="https://i.loli.net/2019/02/13/5c63b5e8a7d99.jpg" alt="blob.jpg"></p><h2 id="5、360大法好（2018-12-31日已停止运营）"><a href="#5、360大法好（2018-12-31日已停止运营）" class="headerlink" title="5、360大法好（2018.12.31日已停止运营）"></a>5、360大法好（2018.12.31日已停止运营）</h2><p>以上都是通过插件来解决的，如果你的域名已经备案了你可以使用360的免费CDN，我对此没有太多的评价，只有一个字“真TMD好用”。</p><p>通过360的免费DNS解析域名以后如果你的域名已经备案了会自动给你开通CDN，自动加速网站，隐藏自己的真实IP，大大提高的网站的访问速度和安全性，没有比此更牛的免费服务了。<img src="https://i.loli.net/2019/02/13/5c63b5fdd463b.jpg" alt="blob.jpg"></p><p>总结：以上就是我推荐的全部了，即使你是小白，也应该能按照图文完成设置，设置完以后你可以发现网站速度会有一个质的变化。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;http://cdn.pidaye.top/youhuawangzhan.jpg&quot; alt=&quot;blob.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1、被墙的服务&quot;&gt;&lt;a href=&quot;#1、被墙的服务&quot; class=&quot;headerlink&quot; title=&quot;1、被</summary>
      
    
    
    
    
    <category term="网站" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E7%BD%91%E7%AB%99/"/>
    
    <category term="优化" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>我的网站搭建记录（一）：WordPress篇</title>
    <link href="http://ppoffice.github.io/hexo-theme-icarus/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/%E6%88%91%E7%9A%84%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9Awordpress%E7%AF%87/"/>
    <id>http://ppoffice.github.io/hexo-theme-icarus/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/%E6%88%91%E7%9A%84%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9Awordpress%E7%AF%87/</id>
    <published>2019-02-05T07:44:00.000Z</published>
    <updated>2019-02-05T07:44:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://cdn.pidaye.top/wangzhandajian.jpg" alt="blob.jpg"></p><h2 id="1、准备工作"><a href="#1、准备工作" class="headerlink" title="1、准备工作"></a>1、准备工作</h2><h3 id="购买域名（然而并没有卵用）"><a href="#购买域名（然而并没有卵用）" class="headerlink" title="购买域名（然而并没有卵用）"></a>购买域名（然而并没有卵用）</h3><p>我是在<code>西部数码</code>购买的，大家可以随便买，哪个便宜用哪个吧！说没有用是因为最开始建站初期你有很长时间都用不到域名，等你真正调试完准备上线了之后再买域名也不迟！</p><h3 id="购买云服务器"><a href="#购买云服务器" class="headerlink" title="购买云服务器"></a>购买云服务器</h3><p>你如果跟我一样是个穷屌丝的话，也可以先不买云服务器，可以先在本机上搞个环境测试下，不过早晚都是买，可以先从便宜的云虚拟主机或者空间买，等你觉得你够牛逼了再买ECS；另外可以在网上多关注一下优惠活动，有时候服务器包年啥的很便宜，白菜可以看情况屯；给大家推荐几个网站吧：</p><ul><li><a target="_blank" rel="noopener" href="http://www.haihuizhuji.com/" title="海会主机">海会主机</a>（网站不大初级用户可以看看便宜的云主机）</li><li><a target="_blank" rel="noopener" href="https://cn.aliyun.com/" title="阿里云">阿里云</a>（比较好用吧，我用的这个）</li><li><a target="_blank" rel="noopener" href="http://www.yecaoyun.com/" title="野草云">野草云</a>（这个很小众但是便宜啊）</li><li><a target="_blank" rel="noopener" href="https://www.vpsmm.com/" title="小夜博客">小夜博客</a>（可以看看这里的优惠）</li></ul><h3 id="搭建环境-调试"><a href="#搭建环境-调试" class="headerlink" title="搭建环境/调试"></a>搭建环境/调试</h3><p><strong>环境准备：</strong>可以使用<a target="_blank" rel="noopener" href="https://www.apachefriends.org/zh_cn/index.html" title="XAMPP">XAMPP</a>搭建，也可以用国内比较火的<a target="_blank" rel="noopener" href="https://www.bt.cn/" title="宝塔面板">宝塔面板</a>搭建，这个就不给大家演示了，比较简单都是一键式的；<strong>整体调试</strong>调试前先要搞一个<a target="_blank" rel="noopener" href="https://cn.wordpress.org/" title="wordpress">wordpress</a>安装包，可以直接在<a target="_blank" rel="noopener" href="https://cn.wordpress.org/" title="wordpress官网">wordpress官网</a>上下载，然后按照说明操作即完成了站点的搭建。</p><blockquote><p><em>注：以下是快速安装说明</em>1、 下载并解压缩<code>WordPress</code>程序安装包, 如果你还没的话.2、在你的网页服务器上为WordPress创建一个数据库, 并且也创建一个<code>MySQL</code> 拥有所有权限可以进入和修改的用户.3、重命名<code>wp-config-sample.php</code>文件为 <code>wp-config.php</code>.4、用你最喜欢的 文本编辑器 打开 <code>wp-config.php</code> ，填上你的数据库信息。5、把WordPress文件夹放在你服务器上想要放的地方:</p></blockquote><blockquote><ul><li>如果你想把通过顶级域名来访问你的WordPress博客 (例如 http://example.com/),移动或上传所有解压后的WordPress文件夹里面的文件(但不包括WordPress文件夹本身) 到你服务器的根目录下.</li></ul></blockquote><ul><li>如果你想通过子域名来访问你的博客(例如 http://example.com/blog/), 将wordpress 重命名为你想要的子目录名称， 接着上传至你的网站服务器。 例如，你想让WordPress 安装在子目录”blog”中，你就应该将”wordpress”这个文件夹重命名为”blog”，接着上传至你的网站服务器的根目录中。</li></ul><blockquote><p>6、在你喜欢的浏览器中访问wp-admin/install.php 以便启动安装程序.</p></blockquote><blockquote><ul><li>如果你在根目录下安装WordPress,，你应该访问: http://example.com/wp-admin/install.php</li></ul></blockquote><ul><li>如果你将WordPress安装在子目录blog下，你应该访问: http://example.com/blog/wp-admin/install.php</li></ul><h2 id="2、搭建操作"><a href="#2、搭建操作" class="headerlink" title="2、搭建操作"></a>2、搭建操作</h2><h3 id="下载工具织梦源码–》wordpress下载工具织梦源码–》wordpress"><a href="#下载工具织梦源码–》wordpress下载工具织梦源码–》wordpress" class="headerlink" title="下载工具织梦源码–》wordpress下载工具织梦源码–》wordpress"></a>下载工具织梦源码–》wordpress下载工具织梦源码–》wordpress</h3><h3 id="学习了markdown语言"><a href="#学习了markdown语言" class="headerlink" title="学习了markdown语言"></a>学习了markdown语言</h3><h3 id="观看教学视频"><a href="#观看教学视频" class="headerlink" title="观看教学视频"></a>观看教学视频</h3><h3 id="定位网站内容，决定尝试"><a href="#定位网站内容，决定尝试" class="headerlink" title="定位网站内容，决定尝试"></a>定位网站内容，决定尝试</h3><h3 id="下载yusi主题"><a href="#下载yusi主题" class="headerlink" title="下载yusi主题"></a>下载yusi主题</h3><h2 id="3、优化美化"><a href="#3、优化美化" class="headerlink" title="3、优化美化"></a>3、优化美化</h2><h3 id="调整主体样式（发现了很多坑）"><a href="#调整主体样式（发现了很多坑）" class="headerlink" title="调整主体样式（发现了很多坑）"></a>调整主体样式（发现了很多坑）</h3><p>表格样式、缩进、换行</p><h3 id="添加音乐播放器（代码实现）"><a href="#添加音乐播放器（代码实现）" class="headerlink" title="添加音乐播放器（代码实现）"></a>添加音乐播放器（代码实现）</h3><p>https://github.com/MoePlayer/APlayerhttps://github.com/metowolf/MetingJShttps://aplayer.js.org/#/zh-Hans/</p><blockquote><p>给大家看看效果</p></blockquote><style>    li {margin: 0em 0;}    button {min-height: 0px;}    .aplayer {margin: 0 0 1.75em 0 !important;}</style><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.10.1/APlayer.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.10.1/APlayer.min.js"></script><!-- 加在页眉 --><div class="aplayer" data-id="2067465886" data-server="netease" data-volume="0.4" data-type="playlist" data-mode="random"></div><!-- 播放网易云音乐歌单 --><div id="aplayer">  <pre class="aplayer-lrc-content">        [by:呆唯yuki]        [00:00.000] 作曲 : 関取花        [00:01.000] 作词 : 関取花        [00:11.35]街のおきては厳しくて        [00:27.56]僕はいつもひとりぼっち        [00:32.89]何にも知らない君のこと        [00:38.20]一度愛しただけなのに        [00:54.78]街のみんなは冷たくて        [00:59.93]君はいつもひとりぼっち        [01:05.26]何にも知らない僕のこと        [01:10.78]一度愛しただけなのに        [01:15.55]とんでもない 出来事が起きた        [01:20.82]街中の灯が消えてった        [01:26.21]僕以外誰が灯すのだ        [01:31.68]君の事を誰が守るのだ        [01:37.34]ラッターネラッターネ タバコの火を消して        [01:42.91]ラッターネラッターネ ほら灯を灯せ        [01:59.59]君の作ったろうそくに        [02:04.62]僕が小さな灯を灯す        [02:10.10]僕がラッターネを作るから        [02:15.49]君は明かりを灯してよ        [02:20.16]とんでもないことを起こすのだ        [02:25.61]街中が目を覚ますまで        [02:30.97]これ以上 大切な事は 他にはない もう他には無い        [02:41.95]ラッターネラッターネ 暖炉の火を消して        [02:47.74]ラッターネラッターネ ほら灯を灯せ        [02:52.84]ラッターネラッターネ タバコの火を消して        [02:58.00]ラッターネラッターネ ほら灯を灯せ        [03:04.22]大停電の夜に ほら君と僕とでラッターネ        [03:14.80]せめてものおわびに 街中に灯を灯す        [03:25.47]ラッターネラッターネ タバコの火を消して        [03:30.84]ラッターネラッターネ ほら灯を灯せ        [03:36.23]ラッタ一ネラッターネ        [03:39.02]この街の誰も僕を一人にできやしないさ        [03:46.90]ラッターネラッターネ 踊りましょう        [03:52.11]ラッターネラッターネ 歌いましょう        [03:57.44]ラッターネラッターネ 目が覚めて        [04:03.09]ラッターネラッターネ 朝が来る    </pre></div><script>const ap = new APlayer({    container: document.getElementById('aplayer'),    lrcType: 2,    audio: [{        name: 'ラッターネ',        artist: ' 関取花',        url: 'http://pan.pidaye.top/?/02音乐/関取花%20-%20ラッターネ.mp3',        cover: 'http://pan.pidaye.top/?/02音乐/関取花%20-%20ラッターネ.jpg',      lrc: 'http://pan.yangkai126.club/?/02%E9%9F%B3%E4%B9%90/%E9%96%A2%E5%8F%96%E8%8A%B1%20-%20%E3%83%A9%E3%83%83%E3%82%BF%E3%83%BC%E3%83%8D.lrc'            }]});</script><!-- 播放个人歌单 --><script src="https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"></script><!-- meting网易接口 --><blockquote><p>实现代码</p></blockquote><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span> {<span class="attribute">margin</span>: <span class="number">0em</span> <span class="number">0</span>;}</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">button</span> {<span class="attribute">min-height</span>: <span class="number">0px</span>;}</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.aplayer</span> {<span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1.75em</span> <span class="number">0</span> <span class="meta">!important</span>;}</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.10.1/APlayer.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.10.1/APlayer.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 加在页眉 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"aplayer"</span> <span class="attr">data-id</span>=<span class="string">"2067465886"</span> <span class="attr">data-server</span>=<span class="string">"netease"</span> <span class="attr">data-volume</span>=<span class="string">"0.4"</span><span class="attr">data-type</span>=<span class="string">"playlist"</span> <span class="attr">data-mode</span>=<span class="string">"random"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 播放网易云音乐歌单 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"aplayer"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span> <span class="attr">class</span>=<span class="string">"aplayer-lrc-content"</span>&gt;</span></span><br><span class="line">        [by:呆唯yuki]</span><br><span class="line">[00:00.000] 作曲 : 関取花</span><br><span class="line">[00:01.000] 作词 : 関取花</span><br><span class="line">[00:11.35]街のおきては厳しくて</span><br><span class="line">[00:27.56]僕はいつもひとりぼっち</span><br><span class="line">[00:32.89]何にも知らない君のこと</span><br><span class="line">[00:38.20]一度愛しただけなのに</span><br><span class="line">[00:54.78]街のみんなは冷たくて</span><br><span class="line">[00:59.93]君はいつもひとりぼっち</span><br><span class="line">[01:05.26]何にも知らない僕のこと</span><br><span class="line">[01:10.78]一度愛しただけなのに</span><br><span class="line">[01:15.55]とんでもない 出来事が起きた</span><br><span class="line">[01:20.82]街中の灯が消えてった</span><br><span class="line">[01:26.21]僕以外誰が灯すのだ</span><br><span class="line">[01:31.68]君の事を誰が守るのだ</span><br><span class="line">[01:37.34]ラッターネラッターネ タバコの火を消して</span><br><span class="line">[01:42.91]ラッターネラッターネ ほら灯を灯せ</span><br><span class="line">[01:59.59]君の作ったろうそくに</span><br><span class="line">[02:04.62]僕が小さな灯を灯す</span><br><span class="line">[02:10.10]僕がラッターネを作るから</span><br><span class="line">[02:15.49]君は明かりを灯してよ</span><br><span class="line">[02:20.16]とんでもないことを起こすのだ</span><br><span class="line">[02:25.61]街中が目を覚ますまで</span><br><span class="line">[02:30.97]これ以上 大切な事は 他にはない もう他には無い</span><br><span class="line">[02:41.95]ラッターネラッターネ 暖炉の火を消して</span><br><span class="line">[02:47.74]ラッターネラッターネ ほら灯を灯せ</span><br><span class="line">[02:52.84]ラッターネラッターネ タバコの火を消して</span><br><span class="line">[02:58.00]ラッターネラッターネ ほら灯を灯せ</span><br><span class="line">[03:04.22]大停電の夜に ほら君と僕とでラッターネ</span><br><span class="line">[03:14.80]せめてものおわびに 街中に灯を灯す</span><br><span class="line">[03:25.47]ラッターネラッターネ タバコの火を消して</span><br><span class="line">[03:30.84]ラッターネラッターネ ほら灯を灯せ</span><br><span class="line">[03:36.23]ラッタ一ネラッターネ</span><br><span class="line">[03:39.02]この街の誰も僕を一人にできやしないさ</span><br><span class="line">[03:46.90]ラッターネラッターネ 踊りましょう</span><br><span class="line">[03:52.11]ラッターネラッターネ 歌いましょう</span><br><span class="line">[03:57.44]ラッターネラッターネ 目が覚めて</span><br><span class="line">[04:03.09]ラッターネラッターネ 朝が来る</span><br><span class="line">    <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> ap = <span class="keyword">new</span> <span class="title class_">APlayer</span>({</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">container</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">'aplayer'</span>),</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">lrcType</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">audio</span>: [{</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">'ラッターネ'</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">artist</span>: <span class="string">' 関取花'</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="string">'http://pan.yangkai126.club/?/02%E9%9F%B3%E4%B9%90/%E9%96%A2%E5%8F%96%E8%8A%B1%20-%20%E3%83%A9%E3%83%83%E3%82%BF%E3%83%BC%E3%83%8D.mp3'</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cover</span>: <span class="string">'http://pan.yangkai126.club/?/02%E9%9F%B3%E4%B9%90/%E9%96%A2%E5%8F%96%E8%8A%B1%20-%20%E3%83%A9%E3%83%83%E3%82%BF%E3%83%BC%E3%83%8D.jpg'</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">lrc</span>: <span class="string">'http://pan.yangkai126.club/?/02%E9%9F%B3%E4%B9%90/%E9%96%A2%E5%8F%96%E8%8A%B1%20-%20%E3%83%A9%E3%83%83%E3%82%BF%E3%83%BC%E3%83%8D.lrc'</span></span></span><br><span class="line"><span class="language-javascript">            }]</span></span><br><span class="line"><span class="language-javascript">});</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 播放个人歌单 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- meting网易接口 --&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><strong>添加视频播放器</strong></p><p>https://github.com/MoePlayer/DPlayer</p><blockquote><p>给大家看看效果</p></blockquote><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dplayer/1.25.0/DPlayer.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/dplayer/1.25.0/DPlayer.min.js"></script><!-- 在页眉引入css和js文件 --><div id="dplayer-427-1"></div><script>(function(){    var player = new DPlayer({        "container":document.getElementById("dplayer-427-1"),        "preload":"no",        "video":{            "url":"http://pan.pidaye.top/?/01电影/微创光电iVsom智慧运维管理平台介绍.mp4"        },        danmaku:{            id:"lumo-1903-021",            api:"https://api.diygod.me/dplayer/"        }    });    window.dplayers||(window.dplayers=[]);    window.dplayers.push(player);})()</script><blockquote><p>实现代码</p></blockquote><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/dplayer/1.25.0/DPlayer.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/dplayer/1.25.0/DPlayer.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在页眉引入css和js文件 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dplayer-427-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">(<span class="keyword">function</span>(<span class="params"></span>){</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> player = <span class="keyword">new</span> <span class="title class_">DPlayer</span>({</span></span><br><span class="line"><span class="language-javascript">        <span class="string">"container"</span>:<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">"dplayer-427-1"</span>),</span></span><br><span class="line"><span class="language-javascript">        <span class="string">"preload"</span>:<span class="string">"no"</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">"video"</span>:{</span></span><br><span class="line"><span class="language-javascript">            <span class="string">"url"</span>:<span class="string">"http://pan.yangkai126.club/?/01%E7%94%B5%E5%BD%B1/%E5%BE%AE%E5%88%9B%E5%85%89%E7%94%B5iVsom%E6%99%BA%E6%85%A7%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%E4%BB%8B%E7%BB%8D.mp4"</span></span></span><br><span class="line"><span class="language-javascript">        },</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">danmaku</span>:{</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>:<span class="string">"lumo-1903-021"</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">api</span>:<span class="string">"https://api.diygod.me/dplayer/"</span></span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">dplayers</span>||(<span class="variable language_">window</span>.<span class="property">dplayers</span>=[]);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">dplayers</span>.<span class="title function_">push</span>(player);</span></span><br><span class="line"><span class="language-javascript">})()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 显示效果插入到文章正文 --&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><strong>缩略图</strong><strong>字体</strong><strong>代码修改</strong><strong>新评论添加微信提醒功能</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;http://cdn.pidaye.top/wangzhandajian.jpg&quot; alt=&quot;blob.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1、准备工作&quot;&gt;&lt;a href=&quot;#1、准备工作&quot; class=&quot;headerlink&quot; title=&quot;1、准备工</summary>
      
    
    
    
    <category term="网站搭建" scheme="http://ppoffice.github.io/hexo-theme-icarus/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="网站" scheme="http://ppoffice.github.io/hexo-theme-icarus/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
</feed>
